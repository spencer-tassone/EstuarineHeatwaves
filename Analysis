library(data.table)
library(dplyr)
library(tibble)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(openair)
library(zoo)
library(heatwaveR)

rm(list = ls())
dev.off()

setwd("D:/School/NERRSdata/dividedFiles")

acesp <- fread("acespwq.csv", header = TRUE, stringsAsFactors = FALSE)
apaeb <- fread("apaebwq.csv", header = TRUE, stringsAsFactors = FALSE)
apaes <- fread("apaeswq.csv", header = TRUE, stringsAsFactors = FALSE)
cbvtc <- fread("cbvtcwq.csv", header = TRUE, stringsAsFactors = FALSE)
delbl <- fread("delblwq.csv", header = TRUE, stringsAsFactors = FALSE)
delsl <- fread("delslwq.csv", header = TRUE, stringsAsFactors = FALSE)
elkap <- fread("elkapwq.csv", header = TRUE, stringsAsFactors = FALSE)
elksm <- fread("elksmwq.csv", header = TRUE, stringsAsFactors = FALSE)
grbgb <- fread("grbgbwq.csv", header = TRUE, stringsAsFactors = FALSE)
hudsk <- fread("hudskwq.csv", header = TRUE, stringsAsFactors = FALSE)
hudts <- fread("hudtswq.csv", header = TRUE, stringsAsFactors = FALSE)
job09 <- fread("job09wq.csv", header = TRUE, stringsAsFactors = FALSE)
narpc <- fread("narpcwq.csv", header = TRUE, stringsAsFactors = FALSE)
nocec <- fread("nocecwq.csv", header = TRUE, stringsAsFactors = FALSE)
nocrc <- fread("nocrcwq.csv", header = TRUE, stringsAsFactors = FALSE)
pdbby <- fread("pdbbywq.csv", header = TRUE, stringsAsFactors = FALSE)
welin <- fread("welinwq.csv", header = TRUE, stringsAsFactors = FALSE)

acesp$DateTimeStamp <- as.POSIXct(acesp$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
apaeb$DateTimeStamp <- as.POSIXct(apaeb$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
apaes$DateTimeStamp <- as.POSIXct(apaes$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
cbvtc$DateTimeStamp <- as.POSIXct(cbvtc$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
delbl$DateTimeStamp <- as.POSIXct(delbl$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
delsl$DateTimeStamp <- as.POSIXct(delsl$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
elkap$DateTimeStamp <- as.POSIXct(elkap$DateTimeStamp, tz = "Pacific/Pitcairn", "%Y-%m-%d %H:%M")
elksm$DateTimeStamp <- as.POSIXct(elksm$DateTimeStamp, tz = "Pacific/Pitcairn", "%Y-%m-%d %H:%M")
grbgb$DateTimeStamp <- as.POSIXct(grbgb$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
hudsk$DateTimeStamp <- as.POSIXct(hudsk$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
hudts$DateTimeStamp <- as.POSIXct(hudts$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
job09$DateTimeStamp <- as.POSIXct(job09$DateTimeStamp, tz = "America/Virgin", "%Y-%m-%d %H:%M")
narpc$DateTimeStamp <- as.POSIXct(narpc$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
nocec$DateTimeStamp <- as.POSIXct(nocec$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
nocrc$DateTimeStamp <- as.POSIXct(nocrc$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
pdbby$DateTimeStamp <- as.POSIXct(pdbby$DateTimeStamp, tz = "Pacific/Pitcairn", "%Y-%m-%d %H:%M")
welin$DateTimeStamp <- as.POSIXct(welin$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")

all <- rbind(acesp,apaeb,apaes,cbvtc,delbl,delsl,
             elkap,elksm,grbgb,hudsk,hudts,job09,
             narpc,nocec,nocrc,pdbby,welin)

rm(list=setdiff(ls(), "all"))

dat <- all[, c(1,3,5,6,9:16,19:20)]
rm(all)
dat <- dat[order(StationCode, DateTimeStamp)]
dat$Depth <- as.numeric(dat$Depth)
dat$pH <- as.numeric(dat$pH)
rm(list=setdiff(ls(), "dat"))

####

acesp.dirty <- dat %>% filter(StationCode == "acespwq")
aa <- as.data.frame(table(acesp.dirty$F_Depth))
bb <- as.data.frame(table(acesp.dirty$F_Temp))
cc <- as.data.frame(table(acesp.dirty$F_Sal))
dd <- as.data.frame(table(acesp.dirty$F_DO_pct))
ee <- as.data.frame(table(acesp.dirty$F_DO_mgl))
ff <- as.data.frame(table(acesp.dirty$F_pH))
z.depth.remove <- aa[c(1:20,25:33), 1]
z.temp.remove <- bb[1:15, 1]
z.sal.remove <- cc[c(1:18,30,39:43), 1]
z.do.pct.remove <- dd[c(1:26,39,42:55), 1]
z.do.con.remove <- ee[c(1:28,45:56), 1]
z.ph.remove <- ff[c(1:26,40:50), 1]
acesp.dirty[acesp.dirty$F_Depth %in% z.depth.remove, "Depth"] <- NA
acesp.dirty[acesp.dirty$F_Temp %in% z.temp.remove, "Temp"] <- NA
acesp.dirty[acesp.dirty$F_Sal %in% z.sal.remove, "Sal"] <- NA
acesp.dirty[acesp.dirty$F_DO_pct %in% z.do.pct.remove, "DO_pct"] <- NA
acesp.dirty[acesp.dirty$F_DO_mgl %in% z.do.con.remove, "DO_mgl"] <- NA
acesp.dirty[acesp.dirty$F_pH %in% z.ph.remove, "pH"] <- NA
acesp.clean <- acesp.dirty
acesp.clean$Depth[acesp.clean$Depth < -0.5] <- NA
acesp.clean$DO_mgl[acesp.clean$DO_mgl > 20] <- NA
acesp.clean$DO_mgl[acesp.clean$DO_mgl < 0] <- NA
acesp.clean$pH[acesp.clean$pH > 8.5] <- NA
acesp.clean$pH[acesp.clean$pH < 6] <- NA
acesp.clean$Sal[acesp.clean$Sal > 40] <- NA
acesp.clean$Sal[acesp.clean$Sal < 0] <- NA
acesp.clean$Temp[acesp.clean$Temp > 35] <- NA
acesp.clean$date <- acesp.clean$DateTimeStamp
acesp.clean <- acesp.clean[,c(1,15,3,5,7,9,11,13)]
acesp.clean$year <- year(acesp.clean$date)
acesp.clean <- acesp.clean[acesp.clean$year >= 1996 & acesp.clean$year <= 2019,]
acesp.clean.30m <- acesp.clean[1:191536,]
acesp.clean.15m <- acesp.clean[191537:NROW(acesp.clean),]
c.30 <- as.data.frame(seq(from = min(acesp.clean.30m$date), to = max(acesp.clean.30m$date), by = 1800))
names(c.30)[1] <- "date"
c.15 <- as.data.frame(seq(from = min(acesp.clean.15m$date), to = max(acesp.clean.15m$date), by = 900))
names(c.15)[1] <- "date"
acesp.clean.30min <- merge(acesp.clean.30m, c.30, by = "date", all = TRUE)
acesp.clean.15min <- merge(acesp.clean.15m, c.15, by = "date", all = TRUE)
acesp.clean.30min <- acesp.clean.30min[,c(2,1,3:8)]
acesp.clean.30min$pH <- as.numeric(acesp.clean.30min$pH)
acesp.clean.30min$Depth <- as.numeric(acesp.clean.30min$Depth)
acesp.clean.30min$Depth <- acesp.clean.30min$Depth + 0.5
acesp.clean.15min <- acesp.clean.15min[,c(2,1,3:8)]
acesp.clean.15min$pH <- as.numeric(acesp.clean.15min$pH)
acesp.clean.15min$Depth <- as.numeric(acesp.clean.15min$Depth)
acesp.clean.15min$Depth <- acesp.clean.15min$Depth + 0.5
acesp.clean.hf <- rbind(acesp.clean.30min, acesp.clean.15min)
acesp.hf <- acesp.clean.hf[,2:8]
rm(list=setdiff(ls(), c("dat", "acesp.hf")))

####

apaeb.dirty <- dat %>% filter(StationCode == "apaebwq")
apaes.dirty <- dat %>% filter(StationCode == "apaeswq")
aa <- as.data.frame(table(apaeb.dirty$F_Depth))
bb <- as.data.frame(table(apaeb.dirty$F_Temp))
cc <- as.data.frame(table(apaeb.dirty$F_Sal))
dd <- as.data.frame(table(apaeb.dirty$F_DO_pct))
ee <- as.data.frame(table(apaeb.dirty$F_DO_mgl))
ff <- as.data.frame(table(apaeb.dirty$F_pH))
gg <- as.data.frame(table(apaes.dirty$F_Depth))
hh <- as.data.frame(table(apaes.dirty$F_Temp))
ii <- as.data.frame(table(apaes.dirty$F_Sal))
jj <- as.data.frame(table(apaes.dirty$F_DO_pct))
kk <- as.data.frame(table(apaes.dirty$F_DO_mgl))
ll <- as.data.frame(table(apaes.dirty$F_pH))
z.depth.remove <- aa[c(1:20,29:35), 1]
z.temp.remove <- bb[c(1:18,27:28,33:35), 1]
z.sal.remove <- cc[c(1:18,27,29,34,38:41), 1]
z.do.pct.remove <- dd[c(1:39,45,51:52,56:57,59,61:82),1]
z.do.con.remove <- ee[c(1:40,52:53,58,60,66,70,72,78:80), 1]
z.ph.remove <- ff[c(1:24,33,35,40,42,47:49,51:53), 1]
yy.depth.remove <- gg[c(1:14,22:29), 1]
yy.temp.remove <- gg[c(1:14,25,28), 1]
yy.sal.remove <- ii[c(1:14,25,29,34), 1]
yy.do.pct.remove <- jj[c(1:23,33,35,37,43,47:62),1]
yy.do.con.remove <- kk[c(1:22,33,36,42,59), 1]
yy.ph.remove <- ll[c(1:21,30:31,34,45:46), 1]
apaeb.dirty[apaeb.dirty$F_Depth %in% z.depth.remove, "Depth"] <- NA
apaeb.dirty[apaeb.dirty$F_Temp %in% z.temp.remove, "Temp"] <- NA
apaeb.dirty[apaeb.dirty$F_Sal %in% z.sal.remove, "Sal"] <- NA
apaeb.dirty[apaeb.dirty$F_DO_pct %in% z.do.pct.remove, "DO_pct"] <- NA
apaeb.dirty[apaeb.dirty$F_DO_mgl %in% z.do.con.remove, "DO_mgl"] <- NA
apaeb.dirty[apaeb.dirty$F_pH %in% z.ph.remove, "pH"] <- NA
apaes.dirty[apaes.dirty$F_Depth %in% yy.depth.remove, "Depth"] <- NA
apaes.dirty[apaes.dirty$F_Temp %in% yy.temp.remove, "Temp"] <- NA
apaes.dirty[apaes.dirty$F_Sal %in% yy.sal.remove, "Sal"] <- NA
apaes.dirty[apaes.dirty$F_DO_pct %in% yy.do.pct.remove, "DO_pct"] <- NA
apaes.dirty[apaes.dirty$F_DO_mgl %in% yy.do.con.remove, "DO_mgl"] <- NA
apaes.dirty[apaes.dirty$F_pH %in% yy.ph.remove, "pH"] <- NA
apaeb.clean <- apaeb.dirty
apaes.clean <- apaes.dirty
apaeb.clean$Depth[apaeb.clean$Depth < -0.3] <- NA
apaes.clean$Depth[apaes.clean$Depth < -1.7] <- NA
apaeb.clean$DO_mgl[apaeb.clean$DO_mgl > 20] <- NA
apaes.clean$DO_mgl[apaes.clean$DO_mgl > 20] <- NA
apaeb.clean$DO_mgl[apaeb.clean$DO_mgl < 0] <- NA
apaes.clean$DO_mgl[apaes.clean$DO_mgl < 0] <- NA
apaeb.clean$pH[apaeb.clean$pH > 8.5] <- NA
apaes.clean$pH[apaes.clean$pH > 8.5] <- NA
apaeb.clean$pH[apaeb.clean$pH < 6] <- NA
apaes.clean$pH[apaes.clean$pH < 6] <- NA
apaeb.clean$Sal[apaeb.clean$Sal > 40] <- NA
apaes.clean$Sal[apaes.clean$Sal > 40] <- NA
apaeb.clean$Sal[apaeb.clean$Sal < 0] <- NA
apaes.clean$Sal[apaes.clean$Sal < 0] <- NA
apaeb.clean$Temp[apaeb.clean$Temp > 35] <- NA
apaes.clean$Temp[apaes.clean$Temp > 35] <- NA
apaeb.clean$date <- apaeb.clean$DateTimeStamp
apaeb.clean <- apaeb.clean[,c(1,15,3,5,7,9,11,13)]
apaeb.clean$year <- year(apaeb.clean$date)
apaeb.clean <- apaeb.clean[apaeb.clean$year >= 1996 & apaeb.clean$year <= 2019,]
apaeb.clean.30m <- apaeb.clean[1:185520,]
apaeb.clean.15m <- apaeb.clean[185595:645875,]
apaes.clean$date <- apaes.clean$DateTimeStamp
apaes.clean <- apaes.clean[,c(1,15,3,5,7,9,11,13)]
apaes.clean$year <- year(apaes.clean$date)
apaes.clean <- apaes.clean[apaes.clean$year >= 1996 & apaes.clean$year <= 2019,]
apaes.clean.30m <- apaes.clean[1:191952,]
apaes.clean.15m <- apaes.clean[192026:639441,]
c.15 <- as.data.frame(seq(from = min(apaeb.clean.15m$date), to = max(apaeb.clean.15m$date), by = 900))
names(c.15)[1] <- "date"
c.30 <- as.data.frame(seq(from = min(apaeb.clean.30m$date), to = max(apaeb.clean.30m$date), by = 1800))
names(c.30)[1] <- "date"
d.15 <- as.data.frame(seq(from = min(apaes.clean.15m$date), to = max(apaes.clean.15m$date), by = 900))
names(d.15)[1] <- "date"
d.30 <- as.data.frame(seq(from = min(apaes.clean.30m$date), to = max(apaes.clean.30m$date), by = 1800))
names(d.30)[1] <- "date"
apaeb.clean.15min <- merge(apaeb.clean.15m, c.15, by = "date", all = TRUE)
apaeb.clean.30min <- merge(apaeb.clean.30m, c.30, by = "date", all = TRUE)
apaes.clean.15min <- merge(apaes.clean.15m, d.15, by = "date", all = TRUE)
apaes.clean.30min <- merge(apaes.clean.30m, d.30, by = "date", all = TRUE)
apaeb.clean.15min <- apaeb.clean.15min[,c(2,1,3:8)]
apaeb.clean.15min$pH <- as.numeric(apaeb.clean.15min$pH)
apaeb.clean.15min$Depth <- as.numeric(apaeb.clean.15min$Depth)
apaeb.clean.15min$Depth <- apaeb.clean.15min$Depth + 0.3
apaeb.clean.30min <- apaeb.clean.30min[,c(2,1,3:8)]
apaeb.clean.30min$pH <- as.numeric(apaeb.clean.30min$pH)
apaeb.clean.30min$Depth <- as.numeric(apaeb.clean.30min$Depth)
apaeb.clean.30min$Depth <- apaeb.clean.30min$Depth + 0.3
apaes.clean.15min <- apaes.clean.15min[,c(2,1,3:8)]
apaes.clean.15min$pH <- as.numeric(apaes.clean.15min$pH)
apaes.clean.15min$Depth <- as.numeric(apaes.clean.15min$Depth)
apaes.clean.15min$Depth <- apaes.clean.15min$Depth + 1.7
apaes.clean.30min <- apaes.clean.30min[,c(2,1,3:8)]
apaes.clean.30min$pH <- as.numeric(apaes.clean.30min$pH)
apaes.clean.30min$Depth <- as.numeric(apaes.clean.30min$Depth)
apaes.clean.30min$Depth <- apaes.clean.30min$Depth + 1.7
apaeb.hf <- rbind(apaeb.clean.30min, apaeb.clean.15min)
apaes.hf <- rbind(apaes.clean.30min, apaes.clean.15min)
apaeb.hf <- apaeb.hf[,2:8]
apaes.hf <- apaes.hf[,2:8]
rm(list=setdiff(ls(), c("dat", "acesp.hf",
                        "apaeb.hf",
                        "apaes.hf")))

####

cbvtc.dirty <- dat %>% filter(StationCode == "cbvtcwq")
aa <- as.data.frame(table(cbvtc.dirty$F_Depth))
bb <- as.data.frame(table(cbvtc.dirty$F_Temp))
cc <- as.data.frame(table(cbvtc.dirty$F_Sal))
dd <- as.data.frame(table(cbvtc.dirty$F_DO_pct))
ee <- as.data.frame(table(cbvtc.dirty$F_DO_mgl))
ff <- as.data.frame(table(cbvtc.dirty$F_pH))
yy.depth.remove <- aa[c(1:19,25,29:37), 1]
yy.temp.remove <- bb[c(1:16,23,25,33), 1]
yy.sal.remove <- cc[c(1:22,29,31,36,43,46,48), 1]
yy.do.pct.remove <- dd[c(1:30,39,43,50:57),1]
yy.do.con.remove <- ee[c(1:34,41,43,47,54,61), 1]
yy.ph.remove <- ff[c(1:19,26,28,32,39), 1]
cbvtc.dirty[cbvtc.dirty$F_Depth %in% yy.depth.remove, "Depth"] <- NA
cbvtc.dirty[cbvtc.dirty$F_Temp %in% yy.temp.remove, "Temp"] <- NA
cbvtc.dirty[cbvtc.dirty$F_Sal %in% yy.sal.remove, "Sal"] <- NA
cbvtc.dirty[cbvtc.dirty$F_DO_pct %in% yy.do.pct.remove, "DO_pct"] <- NA
cbvtc.dirty[cbvtc.dirty$F_DO_mgl %in% yy.do.con.remove, "DO_mgl"] <- NA
cbvtc.dirty[cbvtc.dirty$F_pH %in% yy.ph.remove, "pH"] <- NA
cbvtc.clean <- cbvtc.dirty
cbvtc.clean$Depth[cbvtc.clean$Depth < -0.5] <- NA
cbvtc.clean$DO_mgl[cbvtc.clean$DO_mgl > 20] <- NA
cbvtc.clean$DO_mgl[cbvtc.clean$DO_mgl < 0] <- NA
cbvtc.clean$pH[cbvtc.clean$pH > 8.5] <- NA
cbvtc.clean$pH[cbvtc.clean$pH < 6] <- NA
cbvtc.clean$Sal[cbvtc.clean$Sal > 40] <- NA
cbvtc.clean$Sal[cbvtc.clean$Sal < 0] <- NA
cbvtc.clean$Temp[cbvtc.clean$Temp > 35] <- NA
cbvtc.clean$date <- cbvtc.clean$DateTimeStamp
cbvtc.clean <- cbvtc.clean[,c(1,15,3,5,7,9,11,13)]
cbvtc.clean$year <- year(cbvtc.clean$date)
cbvtc.clean <- cbvtc.clean[cbvtc.clean$year >= 1996 & cbvtc.clean$year <= 2019,]
cbvtc.clean.15m <- cbvtc.clean[51:NROW(cbvtc.clean),]
d.15 <- as.data.frame(seq(from = min(cbvtc.clean.15m$date), to = max(cbvtc.clean.15m$date), by = 900))
names(d.15)[1] <- "date"
cbvtc.clean.15min <- merge(cbvtc.clean.15m, d.15, by = "date", all = TRUE)
cbvtc.clean.15min <- cbvtc.clean.15min[,c(2,1,3:8)]
cbvtc.clean.15min$pH <- as.numeric(cbvtc.clean.15min$pH)
cbvtc.clean.15min$Depth <- as.numeric(cbvtc.clean.15min$Depth)
cbvtc.clean.15min$Depth <- cbvtc.clean.15min$Depth + 0.5
cbvtc.hf <- cbvtc.clean.15min
cbvtc.hf <- cbvtc.hf[,2:8]
rm(list=setdiff(ls(), c("dat", "acesp.hf",
                        "apaeb.hf",
                        "apaes.hf",
                        "cbvtc.hf")))

####

delbl.dirty <- dat %>% filter(StationCode == "delblwq")
delsl.dirty <- dat %>% filter(StationCode == "delslwq")
aa <- as.data.frame(table(delbl.dirty$F_Depth))
bb <- as.data.frame(table(delbl.dirty$F_Temp))
cc <- as.data.frame(table(delbl.dirty$F_Sal))
dd <- as.data.frame(table(delbl.dirty$F_DO_pct))
ee <- as.data.frame(table(delbl.dirty$F_DO_mgl))
ff <- as.data.frame(table(delbl.dirty$F_pH))
gg <- as.data.frame(table(delbl.dirty$F_Depth))
hh <- as.data.frame(table(delsl.dirty$F_Temp))
ii <- as.data.frame(table(delsl.dirty$F_Sal))
jj <- as.data.frame(table(delsl.dirty$F_DO_pct))
kk <- as.data.frame(table(delsl.dirty$F_DO_mgl))
ll <- as.data.frame(table(delsl.dirty$F_pH))
x.depth.remove <- aa[c(1:4,6:8), 1]
x.temp.remove <- bb[1:10, 1]
x.sal.remove <- cc[c(1:11,19,21), 1]
x.do.pct.remove <- dd[c(1:15,20,24:34),1]
x.do.con.remove <- ee[c(1:16,21,33), 1]
x.ph.remove <- ff[c(1:19,26,29,33:35), 1]
zz.depth.remove <- gg[c(1:5,7:8), 1]
zz.temp.remove <- hh[c(1:14,25:27), 1]
zz.sal.remove <- ii[1:16, 1]
zz.do.pct.remove <- jj[c(1:18,26,30:34),1]
zz.do.con.remove <- kk[1:18, 1]
zz.ph.remove <- ll[c(1:20,28,33:38), 1]
delbl.dirty[delbl.dirty$F_Depth %in% x.depth.remove, "Depth"] <- NA
delbl.dirty[delbl.dirty$F_Temp %in% x.temp.remove, "Temp"] <- NA
delbl.dirty[delbl.dirty$F_Sal %in% x.sal.remove, "Sal"] <- NA
delbl.dirty[delbl.dirty$F_DO_pct %in% x.do.pct.remove, "DO_pct"] <- NA
delbl.dirty[delbl.dirty$F_DO_mgl %in% x.do.con.remove, "DO_mgl"] <- NA
delbl.dirty[delbl.dirty$F_pH %in% x.ph.remove, "pH"] <- NA
delsl.dirty[delsl.dirty$F_Depth %in% zz.depth.remove, "Depth"] <- NA
delsl.dirty[delsl.dirty$F_Temp %in% zz.temp.remove, "Temp"] <- NA
delsl.dirty[delsl.dirty$F_Sal %in% zz.sal.remove, "Sal"] <- NA
delsl.dirty[delsl.dirty$F_DO_pct %in% zz.do.pct.remove, "DO_pct"] <- NA
delsl.dirty[delsl.dirty$F_DO_mgl %in% zz.do.con.remove, "DO_mgl"] <- NA
delsl.dirty[delsl.dirty$F_pH %in% zz.ph.remove, "pH"] <- NA
delbl.clean <- delbl.dirty
delsl.clean <- delsl.dirty
delbl.clean$Depth[delbl.clean$Depth < -0.3] <- NA
delsl.clean$Depth[delsl.clean$Depth < -0.3] <- NA
delbl.clean$DO_mgl[delbl.clean$DO_mgl > 20] <- NA
delsl.clean$DO_mgl[delsl.clean$DO_mgl > 20] <- NA
delbl.clean$DO_mgl[delbl.clean$DO_mgl < 0] <- NA
delsl.clean$DO_mgl[delsl.clean$DO_mgl < 0] <- NA
delbl.clean$pH[delbl.clean$pH > 8.5] <- NA
delsl.clean$pH[delsl.clean$pH > 8.5] <- NA
delbl.clean$pH[delbl.clean$pH < 6] <- NA
delsl.clean$pH[delsl.clean$pH < 6] <- NA
delbl.clean$Sal[delbl.clean$Sal > 40] <- NA
delsl.clean$Sal[delsl.clean$Sal > 40] <- NA
delbl.clean$Sal[delbl.clean$Sal < 0] <- NA
delsl.clean$Sal[delsl.clean$Sal < 0] <- NA
delbl.clean$Temp[delbl.clean$Temp > 35] <- NA
delsl.clean$Temp[delsl.clean$Temp > 35] <- NA
delbl.clean$date <- delbl.clean$DateTimeStamp
delbl.clean <- delbl.clean[,c(1,15,3,5,7,9,11,13)]
delbl.clean$year <- year(delbl.clean$date)
delbl.clean <- delbl.clean[delbl.clean$year >= 1996 & delbl.clean$year <= 2019,]
delbl.clean.30m <- delbl.clean[1:181099,]
delbl.clean.15m <- delbl.clean[181100:NROW(delbl.clean),]
delsl.clean$date <- delsl.clean$DateTimeStamp
delsl.clean <- delsl.clean[,c(1,15,3,5,7,9,11,13)]
delsl.clean$year <- year(delsl.clean$date)
delsl.clean <- delsl.clean[delsl.clean$year >= 1996 & delsl.clean$year <= 2019,]
delsl.clean.30m <- delsl.clean[9:186839,]
delsl.clean.15m <- delsl.clean[186840:NROW(delsl.clean),]
a.30 <- as.data.frame(seq(from = min(delbl.clean.30m$date), to = max(delbl.clean.30m$date), by = 1800))
names(a.30)[1] <- "date"
a.15 <- as.data.frame(seq(from = min(delbl.clean.15m$date), to = max(delbl.clean.15m$date), by = 900))
names(a.15)[1] <- "date"
e.30 <- as.data.frame(seq(from = min(delsl.clean.30m$date), to = max(delsl.clean.30m$date), by = 1800))
names(e.30)[1] <- "date"
e.15 <- as.data.frame(seq(from = min(delsl.clean.15m$date), to = max(delsl.clean.15m$date), by = 900))
names(e.15)[1] <- "date"
delbl.clean.15min <- merge(delbl.clean.15m, a.15, by = "date", all = TRUE)
delbl.clean.30min <- merge(delbl.clean.30m, a.30, by = "date", all = TRUE)
delsl.clean.15min <- merge(delsl.clean.15m, e.15, by = "date", all = TRUE)
delsl.clean.30min <- merge(delsl.clean.30m, e.30, by = "date", all = TRUE)
delbl.clean.15min <- delbl.clean.15min[,c(2,1,3:8)]
delbl.clean.15min$pH <- as.numeric(delbl.clean.15min$pH)
delbl.clean.15min$Depth <- as.numeric(delbl.clean.15min$Depth)
delbl.clean.15min$Depth <- delbl.clean.15min$Depth + 0.3
delbl.clean.30min <- delbl.clean.30min[,c(2,1,3:8)]
delbl.clean.30min$pH <- as.numeric(delbl.clean.30min$pH)
delbl.clean.30min$Depth <- as.numeric(delbl.clean.30min$Depth)
delbl.clean.30min$Depth <- delbl.clean.30min$Depth + 0.3
delsl.clean.15min <- delsl.clean.15min[,c(2,1,3:8)]
delsl.clean.15min$pH <- as.numeric(delsl.clean.15min$pH)
delsl.clean.15min$Depth <- as.numeric(delsl.clean.15min$Depth)
delsl.clean.15min$Depth <- delsl.clean.15min$Depth + 0.3
delsl.clean.30min <- delsl.clean.30min[,c(2,1,3:8)]
delsl.clean.30min$pH <- as.numeric(delsl.clean.30min$pH)
delsl.clean.30min$Depth <- as.numeric(delsl.clean.30min$Depth)
delsl.clean.30min$Depth <- delsl.clean.30min$Depth + 0.3
delbl.hf <- rbind(delbl.clean.30min, delbl.clean.15min)
delsl.hf <- rbind(delsl.clean.30min, delsl.clean.15min)
delbl.hf <- delbl.hf[,2:8]
delsl.hf <- delsl.hf[,2:8]
rm(list=setdiff(ls(), c("dat", "acesp.hf",
                        "apaeb.hf",
                        "apaes.hf",
                        "cbvtc.hf",
                        "delbl.hf",
                        "delsl.hf")))

####

elkap.dirty <- dat %>% filter(StationCode == "elkapwq")
elksm.dirty <- dat %>% filter(StationCode == "elksmwq")
aa <- as.data.frame(table(elkap.dirty$F_Depth))
bb <- as.data.frame(table(elkap.dirty$F_Temp))
cc <- as.data.frame(table(elkap.dirty$F_Sal))
dd <- as.data.frame(table(elkap.dirty$F_DO_pct))
ee <- as.data.frame(table(elkap.dirty$F_DO_mgl))
ff <- as.data.frame(table(elkap.dirty$F_pH))
gg <- as.data.frame(table(elksm.dirty$F_Depth))
hh <- as.data.frame(table(elksm.dirty$F_Temp))
ii <- as.data.frame(table(elksm.dirty$F_Sal))
jj <- as.data.frame(table(elksm.dirty$F_DO_pct))
kk <- as.data.frame(table(elksm.dirty$F_DO_mgl))
ll <- as.data.frame(table(elksm.dirty$F_pH))
x.depth.remove <- aa[c(1:23,28:34,41:44), 1]
x.temp.remove <- bb[c(1:20,25,27:28), 1]
x.sal.remove <- cc[c(1:29,38:44), 1]
x.do.pct.remove <- dd[c(1:34,37,44:46,52,54:58), 1]
x.do.con.remove <- ee[c(1:36,47:49,55,57:60,67:72), 1]
x.ph.remove <- ff[c(1:33,39:48), 1]
z.depth.remove <- gg[c(1:21,27,30), 1]
z.temp.remove <- hh[c(1:26,39,41:43), 1]
z.sal.remove <- ii[c(1:40,54,56,58,61:70), 1]
z.do.pct.remove <- jj[c(1:31,48,51:55), 1]
z.do.con.remove <- kk[c(1:35,52,56:57), 1]
z.ph.remove <- ll[c(1:34,48,52:55), 1]
elkap.dirty[elkap.dirty$F_Depth %in% x.depth.remove, "Depth"] <- NA
elkap.dirty[elkap.dirty$F_Temp %in% x.temp.remove, "Temp"] <- NA
elkap.dirty[elkap.dirty$F_Sal %in% x.sal.remove, "Sal"] <- NA
elkap.dirty[elkap.dirty$F_DO_pct %in% x.do.pct.remove, "DO_pct"] <- NA
elkap.dirty[elkap.dirty$F_DO_mgl %in% x.do.con.remove, "DO_mgl"] <- NA
elkap.dirty[elkap.dirty$F_pH %in% x.ph.remove, "pH"] <- NA
elksm.dirty[elksm.dirty$F_Depth %in% z.depth.remove, "Depth"] <- NA
elksm.dirty[elksm.dirty$F_Temp %in% z.temp.remove, "Temp"] <- NA
elksm.dirty[elksm.dirty$F_Sal %in% z.sal.remove, "Sal"] <- NA
elksm.dirty[elksm.dirty$F_DO_pct %in% z.do.pct.remove, "DO_pct"] <- NA
elksm.dirty[elksm.dirty$F_DO_mgl %in% z.do.con.remove, "DO_mgl"] <- NA
elksm.dirty[elksm.dirty$F_pH %in% z.ph.remove, "pH"] <- NA
elkap.clean <- elkap.dirty
elksm.clean <- elksm.dirty
elkap.clean$Depth[elkap.clean$Depth < -0.3] <- NA
elkap.clean$DO_mgl[elkap.clean$DO_mgl > 20] <- NA
elkap.clean$DO_mgl[elkap.clean$DO_mgl < 0] <- NA
elkap.clean$Sal[elkap.clean$Sal > 40] <- NA
elkap.clean$pH[elkap.clean$pH > 8.5] <- NA
elkap.clean$pH[elkap.clean$pH < 6] <- NA
elkap.clean$Temp[elkap.clean$Temp > 35] <- NA
elksm.clean$Depth[elksm.clean$Depth < -0.3] <- NA
elksm.clean$DO_mgl[elksm.clean$DO_mgl > 20] <- NA
elksm.clean$Sal[elksm.clean$Sal < 0] <- NA
elksm.clean$Sal[elksm.clean$Sal > 40] <- NA
elksm.clean$pH[elksm.clean$pH > 8.5] <- NA
elksm.clean$pH[elksm.clean$pH < 6] <- NA
elksm.clean$Temp[elksm.clean$Temp > 35] <- NA
elkap.clean$date <- elkap.clean$DateTimeStamp
elkap.clean <- elkap.clean[,c(1,15,3,5,7,9,11,13)]
elkap.clean$year <- year(elkap.clean$date)
elkap.clean <- elkap.clean[elkap.clean$year >= 1996 & elkap.clean$year <= 2019,]
elkap.clean.15m.1 <- elkap.clean[1:66048,]
elkap.dirty.30m.1 <- elkap.clean[66145:70175,]
elkap.clean.30m.1 <- elkap.dirty.30m.1[seq(1,nrow(elkap.dirty.30m.1),2),]
elkap.clean.30m.2 <- elkap.clean[70176:227951,]
elkap.dirty.30m.3 <- elkap.clean[227952:229486,]
elkap.clean.30m.3 <- elkap.dirty.30m.3[seq(1,nrow(elkap.dirty.30m.3),2),]
elkap.clean.30m <- rbind(elkap.clean.30m.1,elkap.clean.30m.2,elkap.clean.30m.3)
elkap.clean.15m.2 <- elkap.clean[229584:NROW(elkap.clean),]
c.15.1 <- as.data.frame(seq(from = min(elkap.clean.15m.1$date), to = max(elkap.clean.15m.1$date), by = 900))
names(c.15.1)[1] <- "date"
c.30 <- as.data.frame(seq(from = min(elkap.clean.30m$date), to = max(elkap.clean.30m$date), by = 1800))
names(c.30)[1] <- "date"
c.15.2 <- as.data.frame(seq(from = min(elkap.clean.15m.2$date), to = max(elkap.clean.15m.2$date), by = 900))
names(c.15.2)[1] <- "date"
elkap.clean.15min1 <- merge(elkap.clean.15m.1, c.15.1, by = "date", all = TRUE)
elkap.clean.30min <- merge(elkap.clean.30m, c.30, by = "date", all = TRUE)
elkap.clean.15min2 <- merge(elkap.clean.15m.2, c.15.2, by = "date", all = TRUE)
elkap.clean.15min1 <- elkap.clean.15min1[,c(2,1,3:8)]
elkap.clean.15min1$pH <- as.numeric(elkap.clean.15min1$pH)
elkap.clean.15min1$Depth <- as.numeric(elkap.clean.15min1$Depth)
elkap.clean.15min1$Depth <- elkap.clean.15min1$Depth + 0.3
elkap.clean.30min <- elkap.clean.30min[,c(2,1,3:8)]
elkap.clean.30min$pH <- as.numeric(elkap.clean.30min$pH)
elkap.clean.30min$Depth <- as.numeric(elkap.clean.30min$Depth)
elkap.clean.30min$Depth <- elkap.clean.30min$Depth + 0.3
elkap.clean.15min2 <- elkap.clean.15min2[,c(2,1,3:8)]
elkap.clean.15min2$pH <- as.numeric(elkap.clean.15min2$pH)
elkap.clean.15min2$Depth <- as.numeric(elkap.clean.15min2$Depth)
elkap.clean.15min2$Depth <- elkap.clean.15min2$Depth + 0.3
elksm.clean$date <- elksm.clean$DateTimeStamp
elksm.clean <- elksm.clean[,c(1,15,3,5,7,9,11,13)]
elksm.clean$year <- year(elksm.clean$date)
elksm.clean <- elksm.clean[elksm.clean$year >= 1996 & elksm.clean$year <= 2019,]
elksm.clean.15m.1 <- elksm.clean[1:63936,]
elksm.clean.30m <- elksm.clean[64730:221033,]
elksm.clean.15m.2 <- elksm.clean[221109:NROW(elksm.clean),]
c.15.1 <- as.data.frame(seq(from = min(elksm.clean.15m.1$date), to = max(elksm.clean.15m.1$date), by = 900))
names(c.15.1)[1] <- "date"
c.30 <- as.data.frame(seq(from = min(elksm.clean.30m$date), to = max(elksm.clean.30m$date), by = 1800))
names(c.30)[1] <- "date"
c.15.2 <- as.data.frame(seq(from = min(elksm.clean.15m.2$date), to = max(elksm.clean.15m.2$date), by = 900))
names(c.15.2)[1] <- "date"
elksm.clean.15min1 <- merge(elksm.clean.15m.1, c.15.1, by = "date", all = TRUE)
elksm.clean.30min <- merge(elksm.clean.30m, c.30, by = "date", all = TRUE)
elksm.clean.15min2 <- merge(elksm.clean.15m.2, c.15.2, by = "date", all = TRUE)
elksm.clean.15min1 <- elksm.clean.15min1[,c(2,1,3:8)]
elksm.clean.15min1$pH <- as.numeric(elksm.clean.15min1$pH)
elksm.clean.15min1$Depth <- as.numeric(elksm.clean.15min1$Depth)
elksm.clean.15min1$Depth <- elksm.clean.15min1$Depth + 0.3
elksm.clean.30min <- elksm.clean.30min[,c(2,1,3:8)]
elksm.clean.30min$pH <- as.numeric(elksm.clean.30min$pH)
elksm.clean.30min$Depth <- as.numeric(elksm.clean.30min$Depth)
elksm.clean.30min$Depth <- elksm.clean.30min$Depth + 0.3
elksm.clean.15min2 <- elksm.clean.15min2[,c(2,1,3:8)]
elksm.clean.15min2$pH <- as.numeric(elksm.clean.15min2$pH)
elksm.clean.15min2$Depth <- as.numeric(elksm.clean.15min2$Depth)
elksm.clean.15min2$Depth <- elksm.clean.15min2$Depth + 0.3
elkap.hf <- rbind(elkap.clean.15min1,elkap.clean.30min,elkap.clean.15min2)
elksm.hf <- rbind(elksm.clean.15min1,elksm.clean.30min,elksm.clean.15min2)
elkap.hf <- elkap.hf[,2:8]
elksm.hf <- elksm.hf[,2:8]
rm(list=setdiff(ls(), c("dat", "acesp.hf",
                        "apaeb.hf",
                        "apaes.hf",
                        "cbvtc.hf",
                        "delbl.hf",
                        "delsl.hf",
                        "elkap.hf",
                        "elksm.hf")))

####

grbgb.dirty <- dat %>% filter(StationCode == "grbgbwq")
aa <- as.data.frame(table(grbgb.dirty$F_Depth))
bb <- as.data.frame(table(grbgb.dirty$F_Temp))
cc <- as.data.frame(table(grbgb.dirty$F_Sal))
dd <- as.data.frame(table(grbgb.dirty$F_DO_pct))
ee <- as.data.frame(table(grbgb.dirty$F_DO_mgl))
ff <- as.data.frame(table(grbgb.dirty$F_pH))
x.depth.remove <- aa[c(1:22,29), 1]
x.temp.remove <- bb[c(1:19,22,29), 1]
x.sal.remove <- cc[c(1:28,32,34,37,42:47), 1]
x.do.pct.remove <- dd[c(1:24,29,32,37:42), 1]
x.do.con.remove <- ee[c(1:27,32:33,36,40:47), 1]
x.ph.remove <- ff[c(1:25,31,42:45), 1]
grbgb.dirty[grbgb.dirty$F_Depth %in% x.depth.remove, "Depth"] <- NA
grbgb.dirty[grbgb.dirty$F_Temp %in% x.temp.remove, "Temp"] <- NA
grbgb.dirty[grbgb.dirty$F_Sal %in% x.sal.remove, "Sal"] <- NA
grbgb.dirty[grbgb.dirty$F_DO_pct %in% x.do.pct.remove, "DO_pct"] <- NA
grbgb.dirty[grbgb.dirty$F_DO_mgl %in% x.do.con.remove, "DO_mgl"] <- NA
grbgb.dirty[grbgb.dirty$F_pH %in% x.ph.remove, "pH"] <- NA
grbgb.clean <- grbgb.dirty[6216:537456,]
grbgb.clean$Depth[grbgb.clean$Depth < -0.5] <- NA
grbgb.clean$DO_mgl[grbgb.clean$DO_mgl > 20] <- NA
grbgb.clean$DO_mgl[grbgb.clean$DO_mgl < 0] <- NA
grbgb.clean$pH[grbgb.clean$pH > 8.5] <- NA
grbgb.clean$pH[grbgb.clean$pH < 6] <- NA
grbgb.clean$Sal[grbgb.clean$Sal > 40] <- NA
grbgb.clean$Sal[grbgb.clean$Sal < 0] <- NA
grbgb.clean$Temp[grbgb.clean$Temp > 35] <- NA
grbgb.clean$date <- grbgb.clean$DateTimeStamp
grbgb.clean <- grbgb.clean[,c(1,15,3,5,7,9,11,13)]
grbgb.clean$year <- year(grbgb.clean$date)
grbgb.clean <- grbgb.clean[grbgb.clean$year >= 1996 & grbgb.clean$year <= 2019,]
grbgb.clean.30m <- grbgb.clean[1:124956,]
grbgb.clean.15m <- grbgb.clean[134003:531185,]
a.30 <- as.data.frame(seq(from = min(grbgb.clean.30m$date), to = max(grbgb.clean.30m$date), by = 1800))
names(a.30)[1] <- "date"
a.15 <- as.data.frame(seq(from = min(grbgb.clean.15m$date), to = max(grbgb.clean.15m$date), by = 900))
names(a.15)[1] <- "date"
grbgb.clean.15min <- merge(grbgb.clean.15m, a.15, by = "date", all = TRUE)
grbgb.clean.30min <- merge(grbgb.clean.30m, a.30, by = "date", all = TRUE)
grbgb.clean.15min <- grbgb.clean.15min[,c(2,1,3:8)]
grbgb.clean.15min$pH <- as.numeric(grbgb.clean.15min$pH)
grbgb.clean.15min$Depth <- as.numeric(grbgb.clean.15min$Depth)
grbgb.clean.15min$Depth <- grbgb.clean.15min$Depth + 0.5
grbgb.clean.30min <- grbgb.clean.30min[,c(2,1,3:8)]
grbgb.clean.30min$pH <- as.numeric(grbgb.clean.30min$pH)
grbgb.clean.30min$Depth <- as.numeric(grbgb.clean.30min$Depth)
grbgb.clean.30min$Depth <- grbgb.clean.30min$Depth + 0.5
grbgb.hf <- rbind(grbgb.clean.30min, grbgb.clean.15min)
grbgb.hf <- grbgb.hf[,2:8]
rm(list=setdiff(ls(), c("dat", "acesp.hf",
                        "apaeb.hf",
                        "apaes.hf",
                        "cbvtc.hf",
                        "delbl.hf",
                        "delsl.hf",
                        "elkap.hf",
                        "elksm.hf",
                        "grbgb.hf")))

####

hudsk.dirty <- dat %>% filter(StationCode == "hudskwq")
hudts.dirty <- dat %>% filter(StationCode == "hudtswq")
aa <- as.data.frame(table(hudsk.dirty$F_Depth))
bb <- as.data.frame(table(hudsk.dirty$F_Temp))
cc <- as.data.frame(table(hudsk.dirty$F_Sal))
dd <- as.data.frame(table(hudsk.dirty$F_DO_pct))
ee <- as.data.frame(table(hudsk.dirty$F_DO_mgl))
ff <- as.data.frame(table(hudsk.dirty$F_pH))
gg <- as.data.frame(table(hudts.dirty$F_Depth))
hh <- as.data.frame(table(hudts.dirty$F_Temp))
ii <- as.data.frame(table(hudts.dirty$F_Sal))
jj <- as.data.frame(table(hudts.dirty$F_DO_pct))
kk <- as.data.frame(table(hudts.dirty$F_DO_mgl))
ll <- as.data.frame(table(hudts.dirty$F_pH))
y.depth.remove <- aa[c(1:27,39:53,57), 1]
y.temp.remove <- bb[c(1:21,35,37:40), 1]
y.sal.remove <- cc[c(1:22,37,39:42), 1]
y.do.pct.remove <- dd[c(1:26,42,44:56), 1]
y.do.con.remove <- ee[c(1:26,43,46:57), 1]
y.ph.remove <- ff[c(1:28,44,46:58), 1]
yy.depth.remove <- gg[c(1:31,43:63,66), 1]
yy.temp.remove <- hh[c(1:23,36:37), 1]
yy.sal.remove <- ii[c(1:26,39:40,42), 1]
yy.do.pct.remove <- jj[c(1:24,40:41,43:44), 1]
yy.do.con.remove <- kk[c(1:28,44:45), 1]
yy.ph.remove <- ll[c(1:29,43:44,46:50), 1]
hudsk.dirty[hudsk.dirty$F_Depth %in% y.depth.remove, "Depth"] <- NA
hudsk.dirty[hudsk.dirty$F_Temp %in% y.temp.remove, "Temp"] <- NA
hudsk.dirty[hudsk.dirty$F_Sal %in% y.sal.remove, "Sal"] <- NA
hudsk.dirty[hudsk.dirty$F_DO_pct %in% y.do.pct.remove, "DO_pct"] <- NA
hudsk.dirty[hudsk.dirty$F_DO_mgl %in% y.do.con.remove, "DO_mgl"] <- NA
hudsk.dirty[hudsk.dirty$F_pH %in% y.ph.remove, "pH"] <- NA
hudts.dirty[hudts.dirty$F_Depth %in% yy.depth.remove, "Depth"] <- NA
hudts.dirty[hudts.dirty$F_Temp %in% yy.temp.remove, "Temp"] <- NA
hudts.dirty[hudts.dirty$F_Sal %in% yy.sal.remove, "Sal"] <- NA
hudts.dirty[hudts.dirty$F_DO_pct %in% yy.do.pct.remove, "DO_pct"] <- NA
hudts.dirty[hudts.dirty$F_DO_mgl %in% yy.do.con.remove, "DO_mgl"] <- NA
hudts.dirty[hudts.dirty$F_pH %in% yy.ph.remove, "pH"] <- NA
hudsk.clean <- hudsk.dirty
hudts.clean <- hudts.dirty
hudsk.clean$Depth[hudsk.clean$Depth < -0.5] <- NA
hudts.clean$Depth[hudts.clean$Depth < -0.5] <- NA
hudsk.clean$DO_mgl[hudsk.clean$DO_mgl > 20] <- NA
hudts.clean$DO_mgl[hudts.clean$DO_mgl > 20] <- NA
hudsk.clean$DO_mgl[hudsk.clean$DO_mgl < 0] <- NA
hudts.clean$DO_mgl[hudts.clean$DO_mgl < 0] <- NA
hudsk.clean$pH[hudsk.clean$pH > 8.5] <- NA
hudts.clean$pH[hudts.clean$pH > 8.5] <- NA
hudsk.clean$pH[hudsk.clean$pH < 6] <- NA
hudts.clean$pH[hudts.clean$pH < 6] <- NA
hudsk.clean$Sal[hudsk.clean$Sal > 40] <- NA
hudts.clean$Sal[hudts.clean$Sal > 40] <- NA
hudsk.clean$Sal[hudsk.clean$Sal < 0] <- NA
hudts.clean$Sal[hudts.clean$Sal < 0] <- NA
hudsk.clean$Temp[hudsk.clean$Temp > 35] <- NA
hudts.clean$Temp[hudts.clean$Temp > 35] <- NA
hudsk.clean$date <- hudsk.clean$DateTimeStamp
hudsk.clean <- hudsk.clean[,c(1,15,3,5,7,9,11,13)]
hudsk.clean$year <- year(hudsk.clean$date)
hudsk.clean <- hudsk.clean[hudsk.clean$year >= 1996 & hudsk.clean$year <= 2019,]
hudsk.clean.30m <- hudsk.clean[22:120030,]
hudsk.clean.15m <- hudsk.clean[120110:553324,]
hudts.clean$date <- hudts.clean$DateTimeStamp
hudts.clean <- hudts.clean[,c(1,15,3,5,7,9,11,13)]
hudts.clean$year <- year(hudts.clean$date)
hudts.clean <- hudts.clean[hudts.clean$year >= 1996 & hudts.clean$year <= 2019,]
hudts.clean.30m <- hudts.clean[33:124075,]
hudts.clean.15m <- hudts.clean[124145:558435,]
b.30 <- as.data.frame(seq(from = min(hudsk.clean.30m$date), to = max(hudsk.clean.30m$date), by = 1800))
names(b.30)[1] <- "date"
b.15 <- as.data.frame(seq(from = min(hudsk.clean.15m$date), to = max(hudsk.clean.15m$date), by = 900))
names(b.15)[1] <- "date"
d.30 <- as.data.frame(seq(from = min(hudts.clean.30m$date), to = max(hudts.clean.30m$date), by = 1800))
names(d.30)[1] <- "date"
d.15 <- as.data.frame(seq(from = min(hudts.clean.15m$date), to = max(hudts.clean.15m$date), by = 900))
names(d.15)[1] <- "date"
hudsk.clean.15min <- merge(hudsk.clean.15m, b.15, by = "date", all = TRUE)
hudsk.clean.30min <- merge(hudsk.clean.30m, b.30, by = "date", all = TRUE)
hudts.clean.15min <- merge(hudts.clean.15m, d.15, by = "date", all = TRUE)
hudts.clean.30min <- merge(hudts.clean.30m, d.30, by = "date", all = TRUE)
hudsk.clean.15min <- hudsk.clean.15min[,c(2,1,3:8)]
hudsk.clean.15min$pH <- as.numeric(hudsk.clean.15min$pH)
hudsk.clean.15min$Depth <- as.numeric(hudsk.clean.15min$Depth)
hudsk.clean.15min$Depth <- hudsk.clean.15min$Depth + 0.5
hudsk.clean.30min <- hudsk.clean.30min[,c(2,1,3:8)]
hudsk.clean.30min$pH <- as.numeric(hudsk.clean.30min$pH)
hudsk.clean.30min$Depth <- as.numeric(hudsk.clean.30min$Depth)
hudsk.clean.30min$Depth <- hudsk.clean.30min$Depth + 0.5
hudts.clean.15min <- hudts.clean.15min[,c(2,1,3:8)]
hudts.clean.15min$pH <- as.numeric(hudts.clean.15min$pH)
hudts.clean.15min$Depth <- as.numeric(hudts.clean.15min$Depth)
hudts.clean.15min$Depth <- hudts.clean.15min$Depth + 0.5
hudts.clean.30min <- hudts.clean.30min[,c(2,1,3:8)]
hudts.clean.30min$pH <- as.numeric(hudts.clean.30min$pH)
hudts.clean.30min$Depth <- as.numeric(hudts.clean.30min$Depth)
hudts.clean.30min$Depth <- hudts.clean.30min$Depth + 0.5
hudsk.hf <- rbind(hudsk.clean.30min, hudsk.clean.15min)
hudts.hf <- rbind(hudts.clean.30min, hudts.clean.15min)
hudsk.hf <- hudsk.hf[,2:8]
hudts.hf <- hudts.hf[,2:8]
rm(list=setdiff(ls(), c("dat", "acesp.hf",
                        "apaeb.hf",
                        "apaes.hf",
                        "cbvtc.hf",
                        "delbl.hf",
                        "delsl.hf",
                        "elkap.hf",
                        "elksm.hf",
                        "grbgb.hf",
                        "hudsk.hf",
                        "hudts.hf")))

####

job09.dirty <- dat %>% filter(StationCode == "job09wq")
aa <- as.data.frame(table(job09.dirty$F_Depth))
bb <- as.data.frame(table(job09.dirty$F_Temp))
cc <- as.data.frame(table(job09.dirty$F_Sal))
dd <- as.data.frame(table(job09.dirty$F_DO_pct))
ee <- as.data.frame(table(job09.dirty$F_DO_mgl))
ff <- as.data.frame(table(job09.dirty$F_pH))
x.depth.remove <- aa[c(1:15,26:32), 1]
x.temp.remove <- bb[c(1:14,20,24,29),1]
x.sal.remove <- cc[c(1:19,26,30:31,39,43:50),1]
x.do.pct.remove <- dd[c(1:20,27,32,34,40:41,43:50),1]
x.do.con.remove <- ee[c(1:21,28,33,35,42:43,45:53),1]
x.ph.remove <- ff[c(1:22,27,31,39:48),1]
job09.dirty[job09.dirty$F_Depth %in% x.depth.remove, "Depth"] <- NA
job09.dirty[job09.dirty$F_Temp %in% x.temp.remove, "Temp"] <- NA
job09.dirty[job09.dirty$F_Sal %in% x.sal.remove, "Sal"] <- NA
job09.dirty[job09.dirty$F_DO_pct %in% x.do.pct.remove, "DO_pct"] <- NA
job09.dirty[job09.dirty$F_DO_mgl %in% x.do.con.remove, "DO_mgl"] <- NA
job09.dirty[job09.dirty$F_pH %in% x.ph.remove, "pH"] <- NA
job09.clean <- job09.dirty
job09.clean$Depth[job09.clean$Depth < -0.5] <- NA
job09.clean$DO_mgl[job09.clean$DO_mgl > 20] <- NA
job09.clean$DO_mgl[job09.clean$DO_mgl < 0] <- NA
job09.clean$pH[job09.clean$pH > 8.5] <- NA
job09.clean$pH[job09.clean$pH < 6] <- NA
job09.clean$Sal[job09.clean$Sal > 40] <- NA
job09.clean$Sal[job09.clean$Sal < 0] <- NA
job09.clean$Temp[job09.clean$Temp > 35] <- NA
job09.clean$date <- job09.clean$DateTimeStamp
job09.clean <- job09.clean[,c(1,15,3,5,7,9,11,13)]
job09.clean$year <- year(job09.clean$date)
job09.clean <- job09.clean[job09.clean$year >= 1996 & job09.clean$year <= 2019,]
job09.clean.30m <- job09.clean[1:176850,]
job09.clean.15m <- job09.clean[176867:643428,]
a.30 <- as.data.frame(seq(from = min(job09.clean.30m$date), to = max(job09.clean.30m$date), by = 1800))
names(a.30)[1] <- "date"
a.15 <- as.data.frame(seq(from = min(job09.clean.15m$date), to = max(job09.clean.15m$date), by = 900))
names(a.15)[1] <- "date"
job09.clean.15min <- merge(job09.clean.15m, a.15, by = "date", all = TRUE)
job09.clean.30min <- merge(job09.clean.30m, a.30, by = "date", all = TRUE)
job09.clean.15min <- job09.clean.15min[,c(2,1,3:8)]
job09.clean.15min$pH <- as.numeric(job09.clean.15min$pH)
job09.clean.15min$Depth <- as.numeric(job09.clean.15min$Depth)
job09.clean.15min$Depth <- job09.clean.15min$Depth + 0.5
job09.clean.30min <- job09.clean.30min[,c(2,1,3:8)]
job09.clean.30min$pH <- as.numeric(job09.clean.30min$pH)
job09.clean.30min$Depth <- as.numeric(job09.clean.30min$Depth)
job09.clean.30min$Depth <- job09.clean.30min$Depth + 0.5
job09.hf <- rbind(job09.clean.30min, job09.clean.15min)
job09.hf <- job09.hf[,2:8]
rm(list=setdiff(ls(), c("dat", "acesp.hf",
                        "apaeb.hf",
                        "apaes.hf",
                        "cbvtc.hf",
                        "delbl.hf",
                        "delsl.hf",
                        "elkap.hf",
                        "elksm.hf",
                        "grbgb.hf",
                        "hudsk.hf",
                        "hudts.hf",
                        "job09.hf")))

####

narpc.dirty <- dat %>% filter(StationCode == "narpcwq")
aa <- as.data.frame(table(narpc.dirty$F_Depth))
bb <- as.data.frame(table(narpc.dirty$F_Temp))
cc <- as.data.frame(table(narpc.dirty$F_Sal))
dd <- as.data.frame(table(narpc.dirty$F_DO_pct))
ee <- as.data.frame(table(narpc.dirty$F_DO_mgl))
ff <- as.data.frame(table(narpc.dirty$F_pH))
y.depth.remove <- aa[c(1:25,30:34), 1]
y.temp.remove <- bb[c(1:23,35:36),1]
y.sal.remove <- cc[c(1:26,40:46),1]
y.do.pct.remove <- dd[c(1:23,36:45),1]
y.do.con.remove <- ee[c(1:24,37:47),1]
y.ph.remove <- ff[c(1:27,39:46),1]
narpc.dirty[narpc.dirty$F_Depth %in% y.depth.remove, "Depth"] <- NA
narpc.dirty[narpc.dirty$F_Temp %in% y.temp.remove, "Temp"] <- NA
narpc.dirty[narpc.dirty$F_Sal %in% y.sal.remove, "Sal"] <- NA
narpc.dirty[narpc.dirty$F_DO_pct %in% y.do.pct.remove, "DO_pct"] <- NA
narpc.dirty[narpc.dirty$F_DO_mgl %in% y.do.con.remove, "DO_mgl"] <- NA
narpc.dirty[narpc.dirty$F_pH %in% y.ph.remove, "pH"] <- NA
narpc.clean <- narpc.dirty
narpc.clean$DO_mgl[narpc.clean$DO_mgl > 20] <- NA
narpc.clean$DO_mgl[narpc.clean$DO_mgl < 0] <- NA
narpc.clean$pH[narpc.clean$pH > 8.5] <- NA
narpc.clean$pH[narpc.clean$pH < 6] <- NA
narpc.clean$Sal[narpc.clean$Sal > 40] <- NA
narpc.clean$Sal[narpc.clean$Sal < 0] <- NA
narpc.clean$Temp[narpc.clean$Temp > 35] <- NA
narpc.clean$Depth[narpc.clean$Depth < -0.5] <- NA
narpc.clean$date <- narpc.clean$DateTimeStamp
narpc.clean <- narpc.clean[,c(1,15,3,5,7,9,11,13)]
narpc.clean$year <- year(narpc.clean$date)
narpc.clean <- narpc.clean[narpc.clean$year >= 1996 & narpc.clean$year <= 2019,]
narpc.clean.30m <- narpc.clean[1:145784,]
narpc.clean.15m <- narpc.clean[145860:691432,]
b.30 <- as.data.frame(seq(from = min(narpc.clean.30m$date), to = max(narpc.clean.30m$date), by = 1800))
names(b.30)[1] <- "date"
b.15 <- as.data.frame(seq(from = min(narpc.clean.15m$date), to = max(narpc.clean.15m$date), by = 900))
names(b.15)[1] <- "date"
narpc.clean.15min <- merge(narpc.clean.15m, b.15, by = "date", all = TRUE)
narpc.clean.30min <- merge(narpc.clean.30m, b.30, by = "date", all = TRUE)
narpc.clean.15min <- narpc.clean.15min[,c(2,1,3:8)]
narpc.clean.15min$pH <- as.numeric(narpc.clean.15min$pH)
narpc.clean.15min$Depth <- as.numeric(narpc.clean.15min$Depth)
narpc.clean.15min$Depth <- narpc.clean.15min$Depth + 0.5
narpc.clean.30min <- narpc.clean.30min[,c(2,1,3:8)]
narpc.clean.30min$pH <- as.numeric(narpc.clean.30min$pH)
narpc.clean.30min$Depth <- as.numeric(narpc.clean.30min$Depth)
narpc.clean.30min$Depth <- narpc.clean.30min$Depth + 0.5
narpc.hf <- rbind(narpc.clean.30min, narpc.clean.15min)
narpc.hf$year <- year(narpc.hf$date)
narpc.hf <- narpc.hf[narpc.hf$year >= 1996 & narpc.hf$year <= 2019,]
narpc.hf <- narpc.hf[,2:8]
rm(list=setdiff(ls(), c("dat", "acesp.hf",
                        "apaeb.hf",
                        "apaes.hf",
                        "cbvtc.hf",
                        "delbl.hf",
                        "delsl.hf",
                        "elkap.hf",
                        "elksm.hf",
                        "grbgb.hf",
                        "hudsk.hf",
                        "hudts.hf",
                        "job09.hf",
                        "narpc.hf")))

####

nocec.dirty <- dat %>% filter(StationCode == "nocecwq")
nocrc.dirty <- dat %>% filter(StationCode == "nocrcwq")
aa <- as.data.frame(table(nocec.dirty$F_Depth))
bb <- as.data.frame(table(nocec.dirty$F_Temp))
cc <- as.data.frame(table(nocec.dirty$F_Sal))
dd <- as.data.frame(table(nocec.dirty$F_DO_pct))
ee <- as.data.frame(table(nocec.dirty$F_DO_mgl))
ff <- as.data.frame(table(nocec.dirty$F_pH))
gg <- as.data.frame(table(nocrc.dirty$F_Depth))
hh <- as.data.frame(table(nocrc.dirty$F_Temp))
ii <- as.data.frame(table(nocrc.dirty$F_Sal))
jj <- as.data.frame(table(nocrc.dirty$F_DO_pct))
kk <- as.data.frame(table(nocrc.dirty$F_DO_mgl))
ll <- as.data.frame(table(nocrc.dirty$F_pH))
x.depth.remove <- aa[c(1:34,43:56), 1]
x.temp.remove <- bb[c(1:23,26,40:42),1]
x.sal.remove <- cc[c(1:33,36,42,44,56:63),1]
x.do.pct.remove <- dd[c(1:30,33,41,43,51:63),1]
x.do.con.remove <- ee[c(1:37,40,48,50,57:69),1]
x.ph.remove <- ff[c(1:27,29,40,44:52),1]
z.depth.remove <- gg[c(1:31,36:50,53), 1]
z.temp.remove <- hh[c(1:26,33:34,36:41),1]
z.sal.remove <- ii[c(1:28,40:42,45:57),1]
z.do.pct.remove <- jj[c(1:37,43,45,49:51,54:70),1]
z.do.con.remove <- kk[c(1:38,44,46,50:52,54:70),1]
z.ph.remove <- ll[c(1:27,33,39:40,43:55),1]
nocec.dirty[nocec.dirty$F_Depth %in% x.depth.remove, "Depth"] <- NA
nocec.dirty[nocec.dirty$F_Temp %in% x.temp.remove, "Temp"] <- NA
nocec.dirty[nocec.dirty$F_Sal %in% x.sal.remove, "Sal"] <- NA
nocec.dirty[nocec.dirty$F_DO_pct %in% x.do.pct.remove, "DO_pct"] <- NA
nocec.dirty[nocec.dirty$F_DO_mgl %in% x.do.con.remove, "DO_mgl"] <- NA
nocec.dirty[nocec.dirty$F_pH %in% x.ph.remove, "pH"] <- NA
nocrc.dirty[nocrc.dirty$F_Depth %in% z.depth.remove, "Depth"] <- NA
nocrc.dirty[nocrc.dirty$F_Temp %in% z.temp.remove, "Temp"] <- NA
nocrc.dirty[nocrc.dirty$F_Sal %in% z.sal.remove, "Sal"] <- NA
nocrc.dirty[nocrc.dirty$F_DO_pct %in% z.do.pct.remove, "DO_pct"] <- NA
nocrc.dirty[nocrc.dirty$F_DO_mgl %in% z.do.con.remove, "DO_mgl"] <- NA
nocrc.dirty[nocrc.dirty$F_pH %in% z.ph.remove, "pH"] <- NA
nocec.clean <- nocec.dirty
nocrc.clean <- nocrc.dirty
nocec.clean$DO_mgl[nocec.clean$DO_mgl > 20] <- NA
nocrc.clean$DO_mgl[nocrc.clean$DO_mgl > 20] <- NA
nocec.clean$DO_mgl[nocec.clean$DO_mgl < 0] <- NA
nocrc.clean$DO_mgl[nocrc.clean$DO_mgl < 0] <- NA
nocec.clean$pH[nocec.clean$pH > 8.5] <- NA
nocrc.clean$pH[nocrc.clean$pH > 8.5] <- NA
nocec.clean$pH[nocec.clean$pH < 6] <- NA
nocrc.clean$pH[nocrc.clean$pH < 6] <- NA
nocec.clean$Sal[nocec.clean$Sal > 40] <- NA
nocrc.clean$Sal[nocrc.clean$Sal > 40] <- NA
nocec.clean$Sal[nocec.clean$Sal < 0] <- NA
nocrc.clean$Sal[nocrc.clean$Sal < 0] <- NA
nocec.clean$Temp[nocec.clean$Temp > 35] <- NA
nocrc.clean$Temp[nocrc.clean$Temp > 35] <- NA
nocec.clean$Depth[nocec.clean$Depth < -0.15] <- NA
nocrc.clean$Depth[nocrc.clean$Depth < -0.15] <- NA
nocec.clean$date <- nocec.clean$DateTimeStamp
nocec.clean <- nocec.clean[,c(1,15,3,5,7,9,11,13)]
nocec.clean$year <- year(nocec.clean$date)
nocec.clean <- nocec.clean[nocec.clean$year >= 1996 & nocec.clean$year <= 2019,]
nocec.clean.30m <- nocec.clean[18:186353,]
nocec.clean.15m <- nocec.clean[186432:652991,]
nocrc.clean$date <- nocrc.clean$DateTimeStamp
nocrc.clean <- nocrc.clean[,c(1,15,3,5,7,9,11,13)]
nocrc.clean$year <- year(nocrc.clean$date)
nocrc.clean <- nocrc.clean[nocrc.clean$year >= 1996 & nocrc.clean$year <= 2019,]
nocrc.clean.30m <- nocrc.clean[1:185139,]
nocrc.clean.15m <- nocrc.clean[185159:651752,]
a.30 <- as.data.frame(seq(from = min(nocec.clean.30m$date), to = max(nocec.clean.30m$date), by = 1800))
names(a.30)[1] <- "date"
a.15 <- as.data.frame(seq(from = min(nocec.clean.15m$date), to = max(nocec.clean.15m$date), by = 900))
names(a.15)[1] <- "date"
c.30 <- as.data.frame(seq(from = min(nocrc.clean.30m$date), to = max(nocrc.clean.30m$date), by = 1800))
names(c.30)[1] <- "date"
c.15 <- as.data.frame(seq(from = min(nocrc.clean.15m$date), to = max(nocrc.clean.15m$date), by = 900))
names(c.15)[1] <- "date"
nocec.clean.15min <- merge(nocec.clean.15m, a.15, by = "date", all = TRUE)
nocec.clean.30min <- merge(nocec.clean.30m, a.30, by = "date", all = TRUE)
nocrc.clean.15min <- merge(nocrc.clean.15m, c.15, by = "date", all = TRUE)
nocrc.clean.30min <- merge(nocrc.clean.30m, c.30, by = "date", all = TRUE)
nocec.clean.15min <- nocec.clean.15min[,c(2,1,3:8)]
nocec.clean.15min$pH <- as.numeric(nocec.clean.15min$pH)
nocec.clean.15min$Depth <- as.numeric(nocec.clean.15min$Depth)
nocec.clean.15min$Depth <- nocec.clean.15min$Depth + 0.15
nocec.clean.30min <- nocec.clean.30min[,c(2,1,3:8)]
nocec.clean.30min$pH <- as.numeric(nocec.clean.30min$pH)
nocec.clean.30min$Depth <- as.numeric(nocec.clean.30min$Depth)
nocec.clean.30min$Depth <- nocec.clean.30min$Depth + 0.15
nocrc.clean.15min <- nocrc.clean.15min[,c(2,1,3:8)]
nocrc.clean.15min$pH <- as.numeric(nocrc.clean.15min$pH)
nocrc.clean.15min$Depth <- as.numeric(nocrc.clean.15min$Depth)
nocrc.clean.15min$Depth <- nocrc.clean.15min$Depth + 0.15
nocrc.clean.30min <- nocrc.clean.30min[,c(2,1,3:8)]
nocrc.clean.30min$pH <- as.numeric(nocrc.clean.30min$pH)
nocrc.clean.30min$Depth <- as.numeric(nocrc.clean.30min$Depth)
nocrc.clean.30min$Depth <- nocrc.clean.30min$Depth + 0.15
nocec.hf <- rbind(nocec.clean.30min, nocec.clean.15min)
nocrc.hf <- rbind(nocrc.clean.30min, nocrc.clean.15min)
nocec.hf <- nocec.hf[,2:8]
nocrc.hf <- nocrc.hf[,2:8]
rm(list=setdiff(ls(), c("dat", "acesp.hf",
                        "apaeb.hf",
                        "apaes.hf",
                        "cbvtc.hf",
                        "delbl.hf",
                        "delsl.hf",
                        "elkap.hf",
                        "elksm.hf",
                        "grbgb.hf",
                        "hudsk.hf",
                        "hudts.hf",
                        "job09.hf",
                        "narpc.hf",
                        "nocec.hf",
                        "nocrc.hf")))

####

pdbby.dirty <- dat %>% filter(StationCode == "pdbbywq")
aa <- as.data.frame(table(pdbby.dirty$F_Depth))
bb <- as.data.frame(table(pdbby.dirty$F_Temp))
cc <- as.data.frame(table(pdbby.dirty$F_Sal))
dd <- as.data.frame(table(pdbby.dirty$F_DO_pct))
ee <- as.data.frame(table(pdbby.dirty$F_DO_mgl))
ff <- as.data.frame(table(pdbby.dirty$F_pH))
y.depth.remove <- aa[c(1:20,26:34), 1]
y.temp.remove <- bb[c(1:16,19),1]
y.sal.remove <- cc[c(1:23,27,32:33,35,43:46),1]
y.do.pct.remove <- dd[c(1:25,30,33:36,45:51),1]
y.do.con.remove <- ee[c(1:28,33,36:39,48:56),1]
y.ph.remove <- ff[c(1:29,42:43),1]
pdbby.dirty[pdbby.dirty$F_Depth %in% y.depth.remove, "Depth"] <- NA
pdbby.dirty[pdbby.dirty$F_Temp %in% y.temp.remove, "Temp"] <- NA
pdbby.dirty[pdbby.dirty$F_Sal %in% y.sal.remove, "Sal"] <- NA
pdbby.dirty[pdbby.dirty$F_DO_pct %in% y.do.pct.remove, "DO_pct"] <- NA
pdbby.dirty[pdbby.dirty$F_DO_mgl %in% y.do.con.remove, "DO_mgl"] <- NA
pdbby.dirty[pdbby.dirty$F_pH %in% y.ph.remove, "pH"] <- NA
pdbby.clean <- pdbby.dirty
pdbby.clean$DO_mgl[pdbby.clean$DO_mgl > 20] <- NA
pdbby.clean$DO_mgl[pdbby.clean$DO_mgl < 0] <- NA
pdbby.clean$pH[pdbby.clean$pH > 8.5] <- NA
pdbby.clean$pH[pdbby.clean$pH < 6] <- NA
pdbby.clean$Sal[pdbby.clean$Sal > 40] <- NA
pdbby.clean$Sal[pdbby.clean$Sal < 0] <- NA
pdbby.clean$Temp[pdbby.clean$Temp > 35] <- NA
pdbby.clean$Depth[pdbby.clean$Depth < -0.6] <- NA
pdbby.clean$date <- pdbby.clean$DateTimeStamp
pdbby.clean <- pdbby.clean[,c(1,15,3,5,7,9,11,13)]
pdbby.clean$year <- year(pdbby.clean$date)
pdbby.clean <- pdbby.clean[pdbby.clean$year >= 1996 & pdbby.clean$year <= 2019,]
pdbby.clean.30m.1 <- pdbby.clean[1:192367,]
pdbby.dirty.30m.2 <- pdbby.clean[192368:193230,]
pdbby.clean.30m.2 <- pdbby.dirty.30m.2[seq(1,nrow(pdbby.dirty.30m.2),2),]
pdbby.clean.30m <- rbind(pdbby.clean.30m.1,pdbby.clean.30m.2)
pdbby.clean.15m <- pdbby.clean[193328:NROW(pdbby.clean),]
b.30 <- as.data.frame(seq(from = min(pdbby.clean.30m$date), to = max(pdbby.clean.30m$date), by = 1800))
names(b.30)[1] <- "date"
b.15 <- as.data.frame(seq(from = min(pdbby.clean.15m$date), to = max(pdbby.clean.15m$date), by = 900))
names(b.15)[1] <- "date"
pdbby.clean.15min <- merge(pdbby.clean.15m, b.15, by = "date", all = TRUE)
pdbby.clean.30min <- merge(pdbby.clean.30m, b.30, by = "date", all = TRUE)
pdbby.clean.15min <- pdbby.clean.15min[,c(2,1,3:8)]
pdbby.clean.15min$pH <- as.numeric(pdbby.clean.15min$pH)
pdbby.clean.15min$Depth <- as.numeric(pdbby.clean.15min$Depth)
pdbby.clean.15min$Depth <- pdbby.clean.15min$Depth + 0.6
pdbby.clean.30min <- pdbby.clean.30min[,c(2,1,3:8)]
pdbby.clean.30min$pH <- as.numeric(pdbby.clean.30min$pH)
pdbby.clean.30min$Depth <- as.numeric(pdbby.clean.30min$Depth)
pdbby.clean.30min$Depth <- pdbby.clean.30min$Depth + 0.6
pdbby.hf <- rbind(pdbby.clean.30min, pdbby.clean.15min)
pdbby.hf <- pdbby.hf[,2:8]
rm(list=setdiff(ls(), c("dat", "acesp.hf",
                        "apaeb.hf",
                        "apaes.hf",
                        "cbvtc.hf",
                        "delbl.hf",
                        "delsl.hf",
                        "elkap.hf",
                        "elksm.hf",
                        "grbgb.hf",
                        "hudsk.hf",
                        "hudts.hf",
                        "job09.hf",
                        "narpc.hf",
                        "nocec.hf",
                        "nocrc.hf",
                        "pdbby.hf")))

####

welin.dirty <- dat %>% filter(StationCode == "welinwq")
aa <- as.data.frame(table(welin.dirty$F_Depth))
bb <- as.data.frame(table(welin.dirty$F_Temp))
cc <- as.data.frame(table(welin.dirty$F_Sal))
dd <- as.data.frame(table(welin.dirty$F_DO_pct))
ee <- as.data.frame(table(welin.dirty$F_DO_mgl))
ff <- as.data.frame(table(welin.dirty$F_pH))
y.depth.remove <- aa[c(1:20,25:33), 1]
y.temp.remove <- bb[1:9,1]
y.sal.remove <- cc[c(1:11,17,24:25),1]
y.do.pct.remove <- dd[c(1:21,30,32,38,42:47),1]
y.do.con.remove <- ee[c(1:21,31,37,41:46,48),1]
y.ph.remove <- ff[c(1:13,19,26:31,33),1]
welin.dirty[welin.dirty$F_Depth %in% y.depth.remove, "Depth"] <- NA
welin.dirty[welin.dirty$F_Temp %in% y.temp.remove, "Temp"] <- NA
welin.dirty[welin.dirty$F_Sal %in% y.sal.remove, "Sal"] <- NA
welin.dirty[welin.dirty$F_DO_pct %in% y.do.pct.remove, "DO_pct"] <- NA
welin.dirty[welin.dirty$F_DO_mgl %in% y.do.con.remove, "DO_mgl"] <- NA
welin.dirty[welin.dirty$F_pH %in% y.ph.remove, "pH"] <- NA
welin.clean <- welin.dirty
welin.clean$DO_mgl[welin.clean$DO_mgl > 20] <- NA
welin.clean$DO_mgl[welin.clean$DO_mgl < 0] <- NA
welin.clean$pH[welin.clean$pH > 8.5] <- NA
welin.clean$pH[welin.clean$pH < 6] <- NA
welin.clean$Sal[welin.clean$Sal > 40] <- NA
welin.clean$Sal[welin.clean$Sal < 0] <- NA
welin.clean$Temp[welin.clean$Temp > 35] <- NA
welin.clean$Depth[welin.clean$Depth < -1.0] <- NA
welin.clean$date <- welin.clean$DateTimeStamp
welin.clean <- welin.clean[,c(1,15,3,5,7,9,11,13)]
welin.clean$year <- year(welin.clean$date)
welin.clean <- welin.clean[welin.clean$year >= 1996 & welin.clean$year <= 2019,]
welin.clean.30m.1 <- welin.clean[1:192767,]
welin.dirty.30m.2 <- welin.clean[192768:193606,]
welin.clean.30m.2 <- welin.dirty.30m.2[seq(1,nrow(welin.dirty.30m.2),2),]
welin.clean.30m <- rbind(welin.clean.30m.1,welin.clean.30m.2)
welin.clean.15m <- welin.clean[194976:NROW(welin.clean),]
b.30 <- as.data.frame(seq(from = min(welin.clean.30m$date), to = max(welin.clean.30m$date), by = 1800))
names(b.30)[1] <- "date"
b.15 <- as.data.frame(seq(from = min(welin.clean.15m$date), to = max(welin.clean.15m$date), by = 900))
names(b.15)[1] <- "date"
welin.clean.15min <- merge(welin.clean.15m, b.15, by = "date", all = TRUE)
welin.clean.30min <- merge(welin.clean.30m, b.30, by = "date", all = TRUE)
welin.clean.15min <- welin.clean.15min[,c(2,1,3:8)]
welin.clean.15min$pH <- as.numeric(welin.clean.15min$pH)
welin.clean.15min$Depth <- as.numeric(welin.clean.15min$Depth)
welin.clean.15min$Depth <- welin.clean.15min$Depth + 1.0
welin.clean.30min <- welin.clean.30min[,c(2,1,3:8)]
welin.clean.30min$pH <- as.numeric(welin.clean.30min$pH)
welin.clean.30min$Depth <- as.numeric(welin.clean.30min$Depth)
welin.clean.30min$Depth <- welin.clean.30min$Depth + 1.0
welin.hf <- rbind(welin.clean.30min, welin.clean.15min)
welin.hf <- welin.hf[,2:8]
rm(list=setdiff(ls(), c("dat", "acesp.hf",
                        "apaeb.hf",
                        "apaes.hf",
                        "cbvtc.hf",
                        "delbl.hf",
                        "delsl.hf",
                        "elkap.hf",
                        "elksm.hf",
                        "grbgb.hf",
                        "hudsk.hf",
                        "hudts.hf",
                        "job09.hf",
                        "narpc.hf",
                        "nocec.hf",
                        "nocrc.hf",
                        "pdbby.hf",
                        "welin.hf")))

#remove duplicates in timeseries if there are any

acesp_remove_row <- as.numeric(which(duplicated(acesp.hf$date)))
cbvtc_remove_row <- as.numeric(which(duplicated(cbvtc.hf$date)))
delbl_remove_row <- as.numeric(which(duplicated(delbl.hf$date)))
delsl_remove_row <- as.numeric(which(duplicated(delsl.hf$date)))
elkap_remove_row <- as.numeric(which(duplicated(elkap.hf$date)))
elksm_remove_row <- as.numeric(which(duplicated(elksm.hf$date)))
grbgb_remove_row <- as.numeric(which(duplicated(grbgb.hf$date)))
hudsk_remove_row <- as.numeric(which(duplicated(hudsk.hf$date)))
hudts_remove_row <- as.numeric(which(duplicated(hudts.hf$date)))
job09_remove_row <- as.numeric(which(duplicated(job09.hf$date)))
narpc_remove_row <- as.numeric(which(duplicated(narpc.hf$date)))
nocec_remove_row <- as.numeric(which(duplicated(nocec.hf$date)))
nocrc_remove_row <- as.numeric(which(duplicated(nocrc.hf$date)))
pdbby_remove_row <- as.numeric(which(duplicated(pdbby.hf$date)))
welin_remove_row <- as.numeric(which(duplicated(welin.hf$date)))

acesp.hf <- acesp.hf[-c(acesp_remove_row)]
cbvtc.hf <- cbvtc.hf[-c(cbvtc_remove_row)]
delbl.hf <- delbl.hf[-c(delbl_remove_row)]
delsl.hf <- delsl.hf[-c(delsl_remove_row)]
elkap.hf <- elkap.hf[-c(elkap_remove_row)]
elksm.hf <- elksm.hf[-c(elksm_remove_row)]
grbgb.hf <- grbgb.hf[-c(grbgb_remove_row)]
hudsk.hf <- hudsk.hf[-c(hudsk_remove_row)]
hudts.hf <- hudts.hf[-c(hudts_remove_row)]
job09.hf <- job09.hf[-c(job09_remove_row)]
narpc.hf <- narpc.hf[-c(narpc_remove_row)]
nocec.hf <- nocec.hf[-c(nocec_remove_row)]
nocrc.hf <- nocrc.hf[-c(nocrc_remove_row)]
pdbby.hf <- pdbby.hf[-c(pdbby_remove_row)]
welin.hf <- welin.hf[-c(welin_remove_row)]

#custom functions from Pat Wiberg | this analysis removes the influence of tidal variation from the observed values

source('D:/School/NERRSdata/LowPassFilter/specclc.R')
source('D:/School/NERRSdata/LowPassFilter/lpfilt.R')

#breakdown data by 30 or 15 min intervals for each site (cbvtc data is all 15 min)

acesp_split30 <- acesp.hf %>%
  summarise(ind = which.max(abs(as.numeric(difftime(date, 
                                                    lag(date, default = date[2]), unit = 'min'))) < 30))
apaeb_split30 <- apaeb.hf %>%
  summarise(ind = which.max(abs(as.numeric(difftime(date, 
                                                    lag(date, default = date[2]), unit = 'min'))) < 30))
apaes_split30 <- apaes.hf %>%
  summarise(ind = which.max(abs(as.numeric(difftime(date, 
                                                    lag(date, default = date[2]), unit = 'min'))) < 30))
delbl_split30 <- delbl.hf %>%
  summarise(ind = which.max(abs(as.numeric(difftime(date, 
                                                    lag(date, default = date[2]), unit = 'min'))) < 30))
delsl_split30 <- delsl.hf %>%
  summarise(ind = which.max(abs(as.numeric(difftime(date, 
                                                    lag(date, default = date[2]), unit = 'min'))) < 30))
grbgb_split30 <- grbgb.hf %>%
  summarise(ind = which.max(abs(as.numeric(difftime(date, 
                                                    lag(date, default = date[2]), unit = 'min'))) < 30))
hudsk_split30 <- hudsk.hf %>%
  summarise(ind = which.max(abs(as.numeric(difftime(date, 
                                                    lag(date, default = date[2]), unit = 'min'))) < 30))
hudts_split30 <- hudts.hf %>%
  summarise(ind = which.max(abs(as.numeric(difftime(date, 
                                                    lag(date, default = date[2]), unit = 'min'))) < 30))
job09_split30 <- job09.hf %>%
  summarise(ind = which.max(abs(as.numeric(difftime(date, 
                                                    lag(date, default = date[2]), unit = 'min'))) < 30))
narpc_split30 <- narpc.hf %>%
  summarise(ind = which.max(abs(as.numeric(difftime(date, 
                                                    lag(date, default = date[2]), unit = 'min'))) < 30))
nocec_split30 <- nocec.hf %>%
  summarise(ind = which.max(abs(as.numeric(difftime(date, 
                                                    lag(date, default = date[2]), unit = 'min'))) < 30))
nocrc_split30 <- nocrc.hf %>%
  summarise(ind = which.max(abs(as.numeric(difftime(date, 
                                                    lag(date, default = date[2]), unit = 'min'))) < 30))
pdbby_split30 <- pdbby.hf %>%
  summarise(ind = which.max(abs(as.numeric(difftime(date, 
                                                    lag(date, default = date[2]), unit = 'min'))) < 30))
welin_split30 <- welin.hf %>%
  summarise(ind = which.max(abs(as.numeric(difftime(date, 
                                                    lag(date, default = date[2]), unit = 'min'))) < 30))

acesp_split30 <- as.numeric(acesp_split30)
apaeb_split30 <- as.numeric(apaeb_split30)
apaes_split30 <- as.numeric(apaes_split30)
delbl_split30 <- as.numeric(delbl_split30)
delsl_split30 <- as.numeric(delsl_split30)
grbgb_split30 <- as.numeric(grbgb_split30)
hudsk_split30 <- as.numeric(hudsk_split30)
hudts_split30 <- as.numeric(hudts_split30)
job09_split30 <- as.numeric(job09_split30)
narpc_split30 <- as.numeric(narpc_split30)
nocec_split30 <- as.numeric(nocec_split30)
nocrc_split30 <- as.numeric(nocrc_split30)
pdbby_split30 <- as.numeric(pdbby_split30)
welin_split30 <- as.numeric(welin_split30)

acesp_split30 <- acesp_split30-2
apaeb_split30 <- apaeb_split30-2
apaes_split30 <- apaes_split30-2
delbl_split30 <- delbl_split30-2
delsl_split30 <- delsl_split30-2
grbgb_split30 <- grbgb_split30-2
hudsk_split30 <- hudsk_split30-2
hudts_split30 <- hudts_split30-2
job09_split30 <- job09_split30-2
narpc_split30 <- narpc_split30-2
nocec_split30 <- nocec_split30-2
nocrc_split30 <- nocrc_split30-2
pdbby_split30 <- pdbby_split30-2
welin_split30 <- welin_split30-2

acesp_split15 <- acesp_split30+1
apaeb_split15 <- apaeb_split30+1
apaes_split15 <- apaes_split30+1
delbl_split15 <- delbl_split30+1
delsl_split15 <- delsl_split30+1
grbgb_split15 <- grbgb_split30+1
hudsk_split15 <- hudsk_split30+1
hudts_split15 <- hudts_split30+1
job09_split15 <- job09_split30+1
narpc_split15 <- narpc_split30+1
nocec_split15 <- nocec_split30+1
nocrc_split15 <- nocrc_split30+1
pdbby_split15 <- pdbby_split30+1
welin_split15 <- welin_split30+1

acesp_dat30 <- acesp.hf[1:acesp_split30,]
apaeb_dat30 <- apaeb.hf[1:apaeb_split30,]
apaes_dat30 <- apaes.hf[1:apaes_split30,]
delbl_dat30 <- delbl.hf[1:delbl_split30]
delsl_dat30 <- delsl.hf[1:delsl_split30]
elkap_dat30 <- elkap.hf[66049:225847,]
elksm_dat30 <- elksm.hf[63937:220368,]
grbgb_dat30 <- grbgb.hf[1:grbgb_split30,]
hudsk_dat30 <- hudsk.hf[1:hudsk_split30,]
hudts_dat30 <- hudts.hf[1:hudts_split30,]
job09_dat30 <- job09.hf[1:job09_split30,]
narpc_dat30 <- narpc.hf[1:narpc_split30,]
nocec_dat30 <- nocec.hf[1:nocec_split30,]
nocrc_dat30 <- nocrc.hf[1:nocrc_split30,]
pdbby_dat30 <- pdbby.hf[1:pdbby_split30,]
welin_dat30 <- welin.hf[1:welin_split30,]

acesp_dat15 <- acesp.hf[acesp_split15:NROW(acesp.hf),]
apaeb_dat15 <- apaeb.hf[apaeb_split15:NROW(apaeb.hf),]
apaes_dat15 <- apaes.hf[apaes_split15:NROW(apaes.hf),]
cbvtc_dat15 <- cbvtc.hf[1:NROW(cbvtc.hf)]
delbl_dat15 <- delbl.hf[delbl_split15:NROW(delbl.hf),]
delsl_dat15 <- delsl.hf[delsl_split15:NROW(delsl.hf),]
elkap_dat15_first <- elkap.hf[1:66048,]
elkap_dat15_second <- elkap.hf[227377:NROW(elkap.hf),]
elksm_dat15_first <- elksm.hf[1:63936,]
elksm_dat15_second <- elksm.hf[220369:NROW(elksm.hf),]
grbgb_dat15 <- grbgb.hf[186577:NROW(grbgb.hf),]
hudsk_dat15 <- hudsk.hf[hudsk_split15:NROW(hudsk.hf),]
hudts_dat15 <- hudts.hf[hudts_split15:NROW(hudts.hf),]
job09_dat15 <- job09.hf[job09_split15:NROW(job09.hf),]
narpc_dat15 <- narpc.hf[narpc_split15:NROW(narpc.hf),]
nocec_dat15 <- nocec.hf[nocec_split15:NROW(nocec.hf),]
nocrc_dat15 <- nocrc.hf[nocrc_split15:NROW(nocrc.hf),]
pdbby_dat15 <- pdbby.hf[pdbby_split15:NROW(pdbby.hf),]
welin_dat15 <- welin.hf[welin_split15:NROW(welin.hf),]

#format date/time
acesp_time30 <- acesp_dat30$date
apaeb_time30 <- apaeb_dat30$date
apaeb_time30_DO <- apaeb_dat30[1:185379,1]
apaeb_time30_DO <- as.POSIXct(apaeb_time30_DO$date, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
apaes_time30 <- apaes_dat30$date
apaes_time30_PH <- apaes_dat30[123:NROW(apaes_dat30),1]
apaes_time30_PH <- as.POSIXct(apaes_time30_PH$date, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
delbl_time30 <- delbl_dat30$date
delsl_time30 <- delsl_dat30$date
delsl_time30_DO <- delsl_dat30[1608:NROW(delsl_dat30),1]
delsl_time30_DO <- as.POSIXct(delsl_time30_DO$date, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
elkap_time30 <- elkap_dat30$date
elksm_time30 <- elksm_dat30$date
grbgb_time30 <- grbgb_dat30$date
hudsk_time30 <- hudsk_dat30$date
hudts_time30 <- hudts_dat30$date
job09_time30 <- job09_dat30$date
narpc_time30 <- narpc_dat30$date
nocec_time30 <- nocec_dat30$date
nocrc_time30 <- nocrc_dat30$date
pdbby_time30 <- pdbby_dat30$date
welin_time30 <- welin_dat30$date

acesp_time15 <- acesp_dat15$date
apaeb_time15 <- apaeb_dat15$date
apaes_time15 <- apaes_dat15$date
cbvtc_time15 <- cbvtc_dat15$date
delbl_time15 <- delbl_dat15$date
delsl_time15 <- delsl_dat15$date
elkap_time15_first <- elkap_dat15_first$date
elkap_time15_second <- elkap_dat15_second$date
elkap_time15_second_ph <- elkap_dat15_second[2493:NROW(elkap_dat15_second),1]
elkap_time15_second_ph <- as.POSIXct(elkap_time15_second_ph$date, tz = "Pacific/Pitcairn", "%Y-%m-%d %H:%M")
elksm_time15_first <- elksm_dat15_first$date
elksm_time15_first_do <- elksm_dat15_first[1:63794,1]
elksm_time15_first_do <- as.POSIXct(elksm_time15_first_do$date, tz = "Pacific/Pitcairn", "%Y-%m-%d %H:%M")
elksm_time15_second <- elksm_dat15_second$date
grbgb_time15 <- grbgb_dat15$date
hudsk_time15 <- hudsk_dat15$date
hudts_time15 <- hudts_dat15$date
job09_time15 <- job09_dat15$date
narpc_time15 <- narpc_dat15$date
nocec_time15 <- nocec_dat15$date
nocrc_time15 <- nocrc_dat15$date
pdbby_time15 <- pdbby_dat15$date
welin_time15 <- welin_dat15$date

#breakdown water temperature, dissolved oxygen, and pH by time intervals for each site
acesp_Wtemp30 <- acesp_dat30$Temp
apaeb_Wtemp30 <- apaeb_dat30$Temp
apaes_Wtemp30 <- apaes_dat30$Temp
delbl_Wtemp30 <- delbl_dat30$Temp
delsl_Wtemp30 <- delsl_dat30$Temp
elkap_Wtemp30 <- elkap_dat30$Temp
elksm_Wtemp30 <- elksm_dat30$Temp
grbgb_Wtemp30 <- grbgb_dat30$Temp
hudsk_Wtemp30 <- hudsk_dat30$Temp
hudts_Wtemp30 <- hudts_dat30$Temp
job09_Wtemp30 <- job09_dat30$Temp
narpc_Wtemp30 <- narpc_dat30$Temp
nocec_Wtemp30 <- nocec_dat30$Temp
nocrc_Wtemp30 <- nocrc_dat30$Temp
pdbby_Wtemp30 <- pdbby_dat30$Temp
welin_Wtemp30 <- welin_dat30$Temp

acesp_Wtemp15 <- acesp_dat15$Temp
apaeb_Wtemp15 <- apaeb_dat15$Temp
apaes_Wtemp15 <- apaes_dat15$Temp
cbvtc_Wtemp15 <- cbvtc_dat15$Temp
delbl_Wtemp15 <- delbl_dat15$Temp
delsl_Wtemp15 <- delsl_dat15$Temp
elkap_Wtemp15_first <- elkap_dat15_first$Temp
elkap_Wtemp15_second <- elkap_dat15_second$Temp
elksm_Wtemp15_first <- elksm_dat15_first$Temp
elksm_Wtemp15_second <- elksm_dat15_second$Temp
grbgb_Wtemp15 <- grbgb_dat15$Temp
hudsk_Wtemp15 <- hudsk_dat15$Temp
hudts_Wtemp15 <- hudts_dat15$Temp
job09_Wtemp15 <- job09_dat15$Temp
narpc_Wtemp15 <- narpc_dat15$Temp
nocec_Wtemp15 <- nocec_dat15$Temp
nocrc_Wtemp15 <- nocrc_dat15$Temp
pdbby_Wtemp15 <- pdbby_dat15$Temp
welin_Wtemp15 <- welin_dat15$Temp

acesp_DO30 <- acesp_dat30$DO_mgl
apaeb_DO30 <- apaeb_dat30[1:185379,5]
apaeb_DO30 <- as.numeric(apaeb_DO30$DO_mgl)
apaes_DO30 <- apaes_dat30$DO_mgl
delbl_DO30 <- delbl_dat30$DO_mgl
delsl_DO30 <- delsl_dat30[1608:NROW(delsl_dat30),5]
delsl_DO30 <- as.numeric(delsl_DO30$DO_mgl)
elkap_DO30 <- elkap_dat30$DO_mgl
elksm_DO30 <- elksm_dat30$DO_mgl
grbgb_DO30 <- grbgb_dat30$DO_mgl
hudsk_DO30 <- hudsk_dat30$DO_mgl
hudts_DO30 <- hudts_dat30$DO_mgl
job09_DO30 <- job09_dat30$DO_mgl
narpc_DO30 <- narpc_dat30$DO_mgl
nocec_DO30 <- nocec_dat30$DO_mgl
nocrc_DO30 <- nocrc_dat30$DO_mgl
pdbby_DO30 <- pdbby_dat30$DO_mgl
welin_DO30 <- welin_dat30$DO_mgl

acesp_DO15 <- acesp_dat15$DO_mgl
apaeb_DO15 <- apaeb_dat15$DO_mgl
apaes_DO15 <- apaes_dat15$DO_mgl
cbvtc_DO15 <- cbvtc_dat15$DO_mgl
delbl_DO15 <- delbl_dat15$DO_mgl
delsl_DO15 <- delsl_dat15$DO_mgl
elkap_DO15_first <- elkap_dat15_first$DO_mgl
elkap_DO15_second <- elkap_dat15_second$DO_mgl
elksm_DO15_first <- elksm_dat15_first[1:63794,5]
elksm_DO15_first <- as.numeric(elksm_DO15_first$DO_mgl)
elksm_DO15_second <- elksm_dat15_second$DO_mgl
grbgb_DO15 <- grbgb_dat15$DO_mgl
hudsk_DO15 <- hudsk_dat15$DO_mgl
hudts_DO15 <- hudts_dat15$DO_mgl
job09_DO15 <- job09_dat15$DO_mgl
narpc_DO15 <- narpc_dat15$DO_mgl
nocec_DO15 <- nocec_dat15$DO_mgl
nocrc_DO15 <- nocrc_dat15$DO_mgl
pdbby_DO15 <- pdbby_dat15$DO_mgl
welin_DO15 <- welin_dat15$DO_mgl

acesp_PH30 <- acesp_dat30$pH
apaeb_PH30 <- apaeb_dat30$pH
apaes_PH30 <- apaes_dat30[123:NROW(apaes_dat30),7]
apaes_PH30 <- as.numeric(apaes_PH30$pH)
delbl_PH30 <- delbl_dat30$pH
delsl_PH30 <- delsl_dat30$pH
elkap_PH30 <- elkap_dat30$pH
elksm_PH30 <- elksm_dat30$pH
grbgb_PH30 <- grbgb_dat30$pH
hudsk_PH30 <- hudsk_dat30$pH
hudts_PH30 <- hudts_dat30$pH
job09_PH30 <- job09_dat30$pH
narpc_PH30 <- narpc_dat30$pH
nocec_PH30 <- nocec_dat30$pH
nocrc_PH30 <- nocrc_dat30$pH
pdbby_PH30 <- pdbby_dat30$pH
welin_PH30 <- welin_dat30$pH

acesp_PH15 <- acesp_dat15$pH
apaeb_PH15 <- apaeb_dat15$pH
apaes_PH15 <- apaes_dat15$pH
cbvtc_PH15 <- cbvtc_dat15$pH
delbl_PH15 <- delbl_dat15$pH
delsl_PH15 <- delsl_dat15$pH
elkap_PH15_first <- elkap_dat15_first$pH
elkap_PH15_second <- elkap_dat15_second[2493:NROW(elkap_dat15_second),7]
elkap_PH15_second <- as.numeric(elkap_PH15_second$pH)
elksm_PH15_first <- elksm_dat15_first$pH
elksm_PH15_second <- elksm_dat15_second$pH
grbgb_PH15 <- grbgb_dat15$pH
hudsk_PH15 <- hudsk_dat15$pH
hudts_PH15 <- hudts_dat15$pH
job09_PH15 <- job09_dat15$pH
narpc_PH15 <- narpc_dat15$pH
nocec_PH15 <- nocec_dat15$pH
nocrc_PH15 <- nocrc_dat15$pH
pdbby_PH15 <- pdbby_dat15$pH
welin_PH15 <- welin_dat15$pH

#interpolate to fill gaps - define new temperature series
acesp_Wt30 = approx(acesp_time30,acesp_Wtemp30,acesp_time30)
acesp_Wt15 = approx(acesp_time15,acesp_Wtemp15,acesp_time15)
acesp_do30 = approx(acesp_time30,acesp_DO30,acesp_time30)
acesp_do15 = approx(acesp_time15,acesp_DO15,acesp_time15)
acesp_ph30 = approx(acesp_time30,acesp_PH30,acesp_time30)
acesp_ph15 = approx(acesp_time15,acesp_PH15,acesp_time15)
apaeb_Wt30 = approx(apaeb_time30,apaeb_Wtemp30,apaeb_time30)
apaeb_Wt15 = approx(apaeb_time15,apaeb_Wtemp15,apaeb_time15)
apaeb_do30 = approx(apaeb_time30_DO,apaeb_DO30,apaeb_time30_DO)
apaeb_do15 = approx(apaeb_time15,apaeb_DO15,apaeb_time15)
apaeb_ph30 = approx(apaeb_time30,apaeb_PH30,apaeb_time30)
apaeb_ph15 = approx(apaeb_time15,apaeb_PH15,apaeb_time15)
apaes_Wt30 = approx(apaes_time30,apaes_Wtemp30,apaes_time30)
apaes_Wt15 = approx(apaes_time15,apaes_Wtemp15,apaes_time15)
apaes_do30 = approx(apaes_time30,apaes_DO30,apaes_time30)
apaes_do15 = approx(apaes_time15,apaes_DO15,apaes_time15)
apaes_ph30 = approx(apaes_time30_PH,apaes_PH30,apaes_time30_PH)
apaes_ph15 = approx(apaes_time15,apaes_PH15,apaes_time15)
cbvtc_Wt15 = approx(cbvtc_time15,cbvtc_Wtemp15,cbvtc_time15)
cbvtc_do15 = approx(cbvtc_time15,cbvtc_DO15,cbvtc_time15)
cbvtc_ph15 = approx(cbvtc_time15,cbvtc_PH15,cbvtc_time15)
delbl_Wt30 = approx(delbl_time30,delbl_Wtemp30,delbl_time30)
delbl_Wt15 = approx(delbl_time15,delbl_Wtemp15,delbl_time15)
delbl_do30 = approx(delbl_time30,delbl_DO30,delbl_time30)
delbl_do15 = approx(delbl_time15,delbl_DO15,delbl_time15)
delbl_ph30 = approx(delbl_time30,delbl_PH30,delbl_time30)
delbl_ph15 = approx(delbl_time15,delbl_PH15,delbl_time15)
delsl_Wt30 = approx(delsl_time30,delsl_Wtemp30,delsl_time30)
delsl_Wt15 = approx(delsl_time15,delsl_Wtemp15,delsl_time15)
delsl_do30 = approx(delsl_time30_DO,delsl_DO30,delsl_time30_DO)
delsl_do15 = approx(delsl_time15,delsl_DO15,delsl_time15)
delsl_ph30 = approx(delsl_time30,delsl_PH30,delsl_time30)
delsl_ph15 = approx(delsl_time15,delsl_PH15,delsl_time15)
elkap_Wt15_first = approx(elkap_time15_first,elkap_Wtemp15_first,elkap_time15_first)
elkap_Wt30 = approx(elkap_time30,elkap_Wtemp30,elkap_time30)
elkap_Wt15_second = approx(elkap_time15_second,elkap_Wtemp15_second,elkap_time15_second)
elkap_do15_first = approx(elkap_time15_first,elkap_DO15_first,elkap_time15_first)
elkap_do30 = approx(elkap_time30,elkap_DO30,elkap_time30)
elkap_do15_second = approx(elkap_time15_second,elkap_DO15_second,elkap_time15_second)
elkap_ph15_first = approx(elkap_time15_first,elkap_PH15_first,elkap_time15_first)
elkap_ph30 = approx(elkap_time30,elkap_PH30,elkap_time30)
elkap_ph15_second = approx(elkap_time15_second_ph,elkap_PH15_second,elkap_time15_second_ph)
elksm_Wt15_first = approx(elksm_time15_first,elksm_Wtemp15_first,elksm_time15_first)
elksm_Wt30 = approx(elksm_time30,elksm_Wtemp30,elksm_time30)
elksm_Wt15_second = approx(elksm_time15_second,elksm_Wtemp15_second,elksm_time15_second)
elksm_do15_first = approx(elksm_time15_first_do,elksm_DO15_first,elksm_time15_first_do)
elksm_do30 = approx(elksm_time30,elksm_DO30,elksm_time30)
elksm_do15_second = approx(elksm_time15_second,elksm_DO15_second,elksm_time15_second)
elksm_ph15_first = approx(elksm_time15_first,elksm_PH15_first,elksm_time15_first)
elksm_ph30 = approx(elksm_time30,elksm_PH30,elksm_time30)
elksm_ph15_second = approx(elksm_time15_second,elksm_PH15_second,elksm_time15_second)
grbgb_Wt30 = approx(grbgb_time30,grbgb_Wtemp30,grbgb_time30)
grbgb_Wt15 = approx(grbgb_time15,grbgb_Wtemp15,grbgb_time15)
grbgb_do30 = approx(grbgb_time30,grbgb_DO30,grbgb_time30)
grbgb_do15 = approx(grbgb_time15,grbgb_DO15,grbgb_time15)
grbgb_ph30 = approx(grbgb_time30,grbgb_PH30,grbgb_time30)
grbgb_ph15 = approx(grbgb_time15,grbgb_PH15,grbgb_time15)
hudsk_Wt30 = approx(hudsk_time30,hudsk_Wtemp30,hudsk_time30)
hudsk_Wt15 = approx(hudsk_time15,hudsk_Wtemp15,hudsk_time15)
hudsk_do30 = approx(hudsk_time30,hudsk_DO30,hudsk_time30)
hudsk_do15 = approx(hudsk_time15,hudsk_DO15,hudsk_time15)
hudsk_ph30 = approx(hudsk_time30,hudsk_PH30,hudsk_time30)
hudsk_ph15 = approx(hudsk_time15,hudsk_PH15,hudsk_time15)
hudts_Wt30 = approx(hudts_time30,hudts_Wtemp30,hudts_time30)
hudts_Wt15 = approx(hudts_time15,hudts_Wtemp15,hudts_time15)
hudts_do30 = approx(hudts_time30,hudts_DO30,hudts_time30)
hudts_do15 = approx(hudts_time15,hudts_DO15,hudts_time15)
hudts_ph30 = approx(hudts_time30,hudts_PH30,hudts_time30)
hudts_ph15 = approx(hudts_time15,hudts_PH15,hudts_time15)
job09_Wt30 = approx(job09_time30,job09_Wtemp30,job09_time30)
job09_Wt15 = approx(job09_time15,job09_Wtemp15,job09_time15)
job09_do30 = approx(job09_time30,job09_DO30,job09_time30)
job09_do15 = approx(job09_time15,job09_DO15,job09_time15)
job09_ph30 = approx(job09_time30,job09_PH30,job09_time30)
job09_ph15 = approx(job09_time15,job09_PH15,job09_time15)
narpc_Wt30 = approx(narpc_time30,narpc_Wtemp30,narpc_time30)
narpc_Wt15 = approx(narpc_time15,narpc_Wtemp15,narpc_time15)
narpc_do30 = approx(narpc_time30,narpc_DO30,narpc_time30)
narpc_do15 = approx(narpc_time15,narpc_DO15,narpc_time15)
narpc_ph30 = approx(narpc_time30,narpc_PH30,narpc_time30)
narpc_ph15 = approx(narpc_time15,narpc_PH15,narpc_time15)
nocec_Wt30 = approx(nocec_time30,nocec_Wtemp30,nocec_time30)
nocec_Wt15 = approx(nocec_time15,nocec_Wtemp15,nocec_time15)
nocec_do30 = approx(nocec_time30,nocec_DO30,nocec_time30)
nocec_do15 = approx(nocec_time15,nocec_DO15,nocec_time15)
nocec_ph30 = approx(nocec_time30,nocec_PH30,nocec_time30)
nocec_ph15 = approx(nocec_time15,nocec_PH15,nocec_time15)
nocrc_Wt30 = approx(nocrc_time30,nocrc_Wtemp30,nocrc_time30)
nocrc_Wt15 = approx(nocrc_time15,nocrc_Wtemp15,nocrc_time15)
nocrc_do30 = approx(nocrc_time30,nocrc_DO30,nocrc_time30)
nocrc_do15 = approx(nocrc_time15,nocrc_DO15,nocrc_time15)
nocrc_ph30 = approx(nocrc_time30,nocrc_PH30,nocrc_time30)
nocrc_ph15 = approx(nocrc_time15,nocrc_PH15,nocrc_time15)
pdbby_Wt30 = approx(pdbby_time30,pdbby_Wtemp30,pdbby_time30)
pdbby_Wt15 = approx(pdbby_time15,pdbby_Wtemp15,pdbby_time15)
pdbby_do30 = approx(pdbby_time30,pdbby_DO30,pdbby_time30)
pdbby_do15 = approx(pdbby_time15,pdbby_DO15,pdbby_time15)
pdbby_ph30 = approx(pdbby_time30,pdbby_PH30,pdbby_time30)
pdbby_ph15 = approx(pdbby_time15,pdbby_PH15,pdbby_time15)
welin_Wt30 = approx(welin_time30,welin_Wtemp30,welin_time30)
welin_Wt15 = approx(welin_time15,welin_Wtemp15,welin_time15)
welin_do30 = approx(welin_time30,welin_DO30,welin_time30)
welin_do15 = approx(welin_time15,welin_DO15,welin_time15)
welin_ph30 = approx(welin_time30,welin_PH30,welin_time30)
welin_ph15 = approx(welin_time15,welin_PH15,welin_time15)

acesp_Wt2_30 = acesp_Wt30$y
acesp_Wt2_15 = acesp_Wt15$y
acesp_do2_30 = acesp_do30$y
acesp_do2_15 = acesp_do15$y
acesp_ph2_30 = acesp_ph30$y
acesp_ph2_15 = acesp_ph15$y
apaeb_Wt2_30 = apaeb_Wt30$y
apaeb_Wt2_15 = apaeb_Wt15$y
apaeb_do2_30 = apaeb_do30$y
apaeb_do2_15 = apaeb_do15$y
apaeb_ph2_30 = apaeb_ph30$y
apaeb_ph2_15 = apaeb_ph15$y
apaes_Wt2_30 = apaes_Wt30$y
apaes_Wt2_15 = apaes_Wt15$y
apaes_do2_30 = apaes_do30$y
apaes_do2_15 = apaes_do15$y
apaes_ph2_30 = apaes_ph30$y
apaes_ph2_15 = apaes_ph15$y
cbvtc_Wt2_15 = cbvtc_Wt15$y
cbvtc_do2_15 = cbvtc_do15$y
cbvtc_ph2_15 = cbvtc_ph15$y
delbl_Wt2_30 = delbl_Wt30$y
delbl_Wt2_15 = delbl_Wt15$y
delbl_do2_30 = delbl_do30$y
delbl_do2_15 = delbl_do15$y
delbl_ph2_30 = delbl_ph30$y
delbl_ph2_15 = delbl_ph15$y
delsl_Wt2_30 = delsl_Wt30$y
delsl_Wt2_15 = delsl_Wt15$y
delsl_do2_30 = delsl_do30$y
delsl_do2_15 = delsl_do15$y
delsl_ph2_30 = delsl_ph30$y
delsl_ph2_15 = delsl_ph15$y
elkap_Wt2_15_first = elkap_Wt15_first$y
elkap_do2_15_first = elkap_do15_first$y
elkap_ph2_15_first = elkap_ph15_first$y
elkap_Wt2_30 = elkap_Wt30$y
elkap_do2_30 = elkap_do30$y
elkap_ph2_30 = elkap_ph30$y
elkap_Wt2_15_second = elkap_Wt15_second$y
elkap_do2_15_second = elkap_do15_second$y
elkap_ph2_15_second = elkap_ph15_second$y
elksm_Wt2_15_first = elksm_Wt15_first$y
elksm_do2_15_first = elksm_do15_first$y
elksm_ph2_15_first = elksm_ph15_first$y
elksm_Wt2_30 = elksm_Wt30$y
elksm_do2_30 = elksm_do30$y
elksm_ph2_30 = elksm_ph30$y
elksm_Wt2_15_second = elksm_Wt15_second$y
elksm_do2_15_second = elksm_do15_second$y
elksm_ph2_15_second = elksm_ph15_second$y
grbgb_Wt2_30 = grbgb_Wt30$y
grbgb_Wt2_15 = grbgb_Wt15$y
grbgb_do2_30 = grbgb_do30$y
grbgb_do2_15 = grbgb_do15$y
grbgb_ph2_30 = grbgb_ph30$y
grbgb_ph2_15 = grbgb_ph15$y
hudsk_Wt2_30 = hudsk_Wt30$y
hudsk_Wt2_15 = hudsk_Wt15$y
hudsk_do2_30 = hudsk_do30$y
hudsk_do2_15 = hudsk_do15$y
hudsk_ph2_30 = hudsk_ph30$y
hudsk_ph2_15 = hudsk_ph15$y
hudts_Wt2_30 = hudts_Wt30$y
hudts_Wt2_15 = hudts_Wt15$y
hudts_do2_30 = hudts_do30$y
hudts_do2_15 = hudts_do15$y
hudts_ph2_30 = hudts_ph30$y
hudts_ph2_15 = hudts_ph15$y
job09_Wt2_30 = job09_Wt30$y
job09_Wt2_15 = job09_Wt15$y
job09_do2_30 = job09_do30$y
job09_do2_15 = job09_do15$y
job09_ph2_30 = job09_ph30$y
job09_ph2_15 = job09_ph15$y
narpc_Wt2_30 = narpc_Wt30$y
narpc_Wt2_15 = narpc_Wt15$y
narpc_do2_30 = narpc_do30$y
narpc_do2_15 = narpc_do15$y
narpc_ph2_30 = narpc_ph30$y
narpc_ph2_15 = narpc_ph15$y
nocec_Wt2_30 = nocec_Wt30$y
nocec_Wt2_15 = nocec_Wt15$y
nocec_do2_30 = nocec_do30$y
nocec_do2_15 = nocec_do15$y
nocec_ph2_30 = nocec_ph30$y
nocec_ph2_15 = nocec_ph15$y
nocrc_Wt2_30 = nocrc_Wt30$y
nocrc_Wt2_15 = nocrc_Wt15$y
nocrc_do2_30 = nocrc_do30$y
nocrc_do2_15 = nocrc_do15$y
nocrc_ph2_30 = nocrc_ph30$y
nocrc_ph2_15 = nocrc_ph15$y
pdbby_Wt2_30 = pdbby_Wt30$y
pdbby_Wt2_15 = pdbby_Wt15$y
pdbby_do2_30 = pdbby_do30$y
pdbby_do2_15 = pdbby_do15$y
pdbby_ph2_30 = pdbby_ph30$y
pdbby_ph2_15 = pdbby_ph15$y
welin_Wt2_30 = welin_Wt30$y
welin_Wt2_15 = welin_Wt15$y
welin_do2_30 = welin_do30$y
welin_do2_15 = welin_do15$y
welin_ph2_30 = welin_ph30$y
welin_ph2_15 = welin_ph15$y

#detrend temperature, DO, and pH series
acesp_Wfit30 = lm(acesp_Wt2_30~acesp_time30)
acesp_Wfit15 = lm(acesp_Wt2_15~acesp_time15)
acesp_dofit30 = lm(acesp_do2_30~acesp_time30)
acesp_dofit15 = lm(acesp_do2_15~acesp_time15)
acesp_phfit30 = lm(acesp_ph2_30~acesp_time30)
acesp_phfit15 = lm(acesp_ph2_15~acesp_time15)
apaeb_Wfit30 = lm(apaeb_Wt2_30~apaeb_time30)
apaeb_Wfit15 = lm(apaeb_Wt2_15~apaeb_time15)
apaeb_dofit30 = lm(apaeb_do2_30~apaeb_time30_DO)
apaeb_dofit15 = lm(apaeb_do2_15~apaeb_time15)
apaeb_phfit30 = lm(apaeb_ph2_30~apaeb_time30)
apaeb_phfit15 = lm(apaeb_ph2_15~apaeb_time15)
apaes_Wfit30 = lm(apaes_Wt2_30~apaes_time30)
apaes_Wfit15 = lm(apaes_Wt2_15~apaes_time15)
apaes_dofit30 = lm(apaes_do2_30~apaes_time30)
apaes_dofit15 = lm(apaes_do2_15~apaes_time15)
apaes_phfit30 = lm(apaes_ph2_30~apaes_time30_PH)
apaes_phfit15 = lm(apaes_ph2_15~apaes_time15)
cbvtc_Wfit15 = lm(cbvtc_Wt2_15~cbvtc_time15)
cbvtc_dofit15 = lm(cbvtc_do2_15~cbvtc_time15)
cbvtc_phfit15 = lm(cbvtc_ph2_15~cbvtc_time15)
delbl_Wfit30 = lm(delbl_Wt2_30~delbl_time30)
delbl_Wfit15 = lm(delbl_Wt2_15~delbl_time15)
delbl_dofit30 = lm(delbl_do2_30~delbl_time30)
delbl_dofit15 = lm(delbl_do2_15~delbl_time15)
delbl_phfit30 = lm(delbl_ph2_30~delbl_time30)
delbl_phfit15 = lm(delbl_ph2_15~delbl_time15)
delsl_Wfit30 = lm(delsl_Wt2_30~delsl_time30)
delsl_Wfit15 = lm(delsl_Wt2_15~delsl_time15)
delsl_dofit30 = lm(delsl_do2_30~delsl_time30_DO)
delsl_dofit15 = lm(delsl_do2_15~delsl_time15)
delsl_phfit30 = lm(delsl_ph2_30~delsl_time30)
delsl_phfit15 = lm(delsl_ph2_15~delsl_time15)
elkap_Wfit15_first = lm(elkap_Wt2_15_first~elkap_time15_first)
elkap_dofit15_first = lm(elkap_do2_15_first~elkap_time15_first)
elkap_phfit15_first = lm(elkap_ph2_15_first~elkap_time15_first)
elkap_Wfit30 = lm(elkap_Wt2_30~elkap_time30)
elkap_dofit30 = lm(elkap_do2_30~elkap_time30)
elkap_phfit30 = lm(elkap_ph2_30~elkap_time30)
elkap_Wfit15_second = lm(elkap_Wt2_15_second~elkap_time15_second)
elkap_dofit15_second = lm(elkap_do2_15_second~elkap_time15_second)
elkap_phfit15_second = lm(elkap_ph2_15_second~elkap_time15_second_ph)
elksm_Wfit15_first = lm(elksm_Wt2_15_first~elksm_time15_first)
elksm_dofit15_first = lm(elksm_do2_15_first~elksm_time15_first_do)
elksm_phfit15_first = lm(elksm_ph2_15_first~elksm_time15_first)
elksm_Wfit30 = lm(elksm_Wt2_30~elksm_time30)
elksm_dofit30 = lm(elksm_do2_30~elksm_time30)
elksm_phfit30 = lm(elksm_ph2_30~elksm_time30)
elksm_Wfit15_second = lm(elksm_Wt2_15_second~elksm_time15_second)
elksm_dofit15_second = lm(elksm_do2_15_second~elksm_time15_second)
elksm_phfit15_second = lm(elksm_ph2_15_second~elksm_time15_second)
grbgb_Wfit30 = lm(grbgb_Wt2_30~grbgb_time30)
grbgb_Wfit15 = lm(grbgb_Wt2_15~grbgb_time15)
grbgb_dofit30 = lm(grbgb_do2_30~grbgb_time30)
grbgb_dofit15 = lm(grbgb_do2_15~grbgb_time15)
grbgb_phfit30 = lm(grbgb_ph2_30~grbgb_time30)
grbgb_phfit15 = lm(grbgb_ph2_15~grbgb_time15)
hudsk_Wfit30 = lm(hudsk_Wt2_30~hudsk_time30)
hudsk_Wfit15 = lm(hudsk_Wt2_15~hudsk_time15)
hudsk_dofit30 = lm(hudsk_do2_30~hudsk_time30)
hudsk_dofit15 = lm(hudsk_do2_15~hudsk_time15)
hudsk_phfit30 = lm(hudsk_ph2_30~hudsk_time30)
hudsk_phfit15 = lm(hudsk_ph2_15~hudsk_time15)
hudts_Wfit30 = lm(hudts_Wt2_30~hudts_time30)
hudts_Wfit15 = lm(hudts_Wt2_15~hudts_time15)
hudts_dofit30 = lm(hudts_do2_30~hudts_time30)
hudts_dofit15 = lm(hudts_do2_15~hudts_time15)
hudts_phfit30 = lm(hudts_ph2_30~hudts_time30)
hudts_phfit15 = lm(hudts_ph2_15~hudts_time15)
job09_Wfit30 = lm(job09_Wt2_30~job09_time30)
job09_Wfit15 = lm(job09_Wt2_15~job09_time15)
job09_dofit30 = lm(job09_do2_30~job09_time30)
job09_dofit15 = lm(job09_do2_15~job09_time15)
job09_phfit30 = lm(job09_ph2_30~job09_time30)
job09_phfit15 = lm(job09_ph2_15~job09_time15)
narpc_Wfit30 = lm(narpc_Wt2_30~narpc_time30)
narpc_Wfit15 = lm(narpc_Wt2_15~narpc_time15)
narpc_dofit30 = lm(narpc_do2_30~narpc_time30)
narpc_dofit15 = lm(narpc_do2_15~narpc_time15)
narpc_phfit30 = lm(narpc_ph2_30~narpc_time30)
narpc_phfit15 = lm(narpc_ph2_15~narpc_time15)
nocec_Wfit30 = lm(nocec_Wt2_30~nocec_time30)
nocec_Wfit15 = lm(nocec_Wt2_15~nocec_time15)
nocec_dofit30 = lm(nocec_do2_30~nocec_time30)
nocec_dofit15 = lm(nocec_do2_15~nocec_time15)
nocec_phfit30 = lm(nocec_ph2_30~nocec_time30)
nocec_phfit15 = lm(nocec_ph2_15~nocec_time15)
nocrc_Wfit30 = lm(nocrc_Wt2_30~nocrc_time30)
nocrc_Wfit15 = lm(nocrc_Wt2_15~nocrc_time15)
nocrc_dofit30 = lm(nocrc_do2_30~nocrc_time30)
nocrc_dofit15 = lm(nocrc_do2_15~nocrc_time15)
nocrc_phfit30 = lm(nocrc_ph2_30~nocrc_time30)
nocrc_phfit15 = lm(nocrc_ph2_15~nocrc_time15)
pdbby_Wfit30 = lm(pdbby_Wt2_30~pdbby_time30)
pdbby_Wfit15 = lm(pdbby_Wt2_15~pdbby_time15)
pdbby_dofit30 = lm(pdbby_do2_30~pdbby_time30)
pdbby_dofit15 = lm(pdbby_do2_15~pdbby_time15)
pdbby_phfit30 = lm(pdbby_ph2_30~pdbby_time30)
pdbby_phfit15 = lm(pdbby_ph2_15~pdbby_time15)
welin_Wfit30 = lm(welin_Wt2_30~welin_time30)
welin_Wfit15 = lm(welin_Wt2_15~welin_time15)
welin_dofit30 = lm(welin_do2_30~welin_time30)
welin_dofit15 = lm(welin_do2_15~welin_time15)
welin_phfit30 = lm(welin_ph2_30~welin_time30)
welin_phfit15 = lm(welin_ph2_15~welin_time15)

acesp_WTdet_30 = acesp_Wt2_30-acesp_Wfit30$fitted.values
acesp_WTdet_15 = acesp_Wt2_15-acesp_Wfit15$fitted.values
acesp_DOdet_30 = acesp_do2_30-acesp_dofit30$fitted.values
acesp_DOdet_15 = acesp_do2_15-acesp_dofit15$fitted.values
acesp_PHdet_30 = acesp_ph2_30-acesp_phfit30$fitted.values
acesp_PHdet_15 = acesp_ph2_15-acesp_phfit15$fitted.values
apaeb_WTdet_30 = apaeb_Wt2_30-apaeb_Wfit30$fitted.values
apaeb_WTdet_15 = apaeb_Wt2_15-apaeb_Wfit15$fitted.values
apaeb_DOdet_30 = apaeb_do2_30-apaeb_dofit30$fitted.values
apaeb_DOdet_15 = apaeb_do2_15-apaeb_dofit15$fitted.values
apaeb_PHdet_30 = apaeb_ph2_30-apaeb_phfit30$fitted.values
apaeb_PHdet_15 = apaeb_ph2_15-apaeb_phfit15$fitted.values
apaes_WTdet_30 = apaes_Wt2_30-apaes_Wfit30$fitted.values
apaes_WTdet_15 = apaes_Wt2_15-apaes_Wfit15$fitted.values
apaes_DOdet_30 = apaes_do2_30-apaes_dofit30$fitted.values
apaes_DOdet_15 = apaes_do2_15-apaes_dofit15$fitted.values
apaes_PHdet_30 = apaes_ph2_30-apaes_phfit30$fitted.values
apaes_PHdet_15 = apaes_ph2_15-apaes_phfit15$fitted.values
cbvtc_WTdet_15 = cbvtc_Wt2_15-cbvtc_Wfit15$fitted.values
cbvtc_DOdet_15 = cbvtc_do2_15-cbvtc_dofit15$fitted.values
cbvtc_PHdet_15 = cbvtc_ph2_15-cbvtc_phfit15$fitted.values
delbl_WTdet_30 = delbl_Wt2_30-delbl_Wfit30$fitted.values
delbl_WTdet_15 = delbl_Wt2_15-delbl_Wfit15$fitted.values
delbl_DOdet_30 = delbl_do2_30-delbl_dofit30$fitted.values
delbl_DOdet_15 = delbl_do2_15-delbl_dofit15$fitted.values
delbl_PHdet_30 = delbl_ph2_30-delbl_phfit30$fitted.values
delbl_PHdet_15 = delbl_ph2_15-delbl_phfit15$fitted.values
delsl_WTdet_30 = delsl_Wt2_30-delsl_Wfit30$fitted.values
delsl_WTdet_15 = delsl_Wt2_15-delsl_Wfit15$fitted.values
delsl_DOdet_30 = delsl_do2_30-delsl_dofit30$fitted.values
delsl_DOdet_15 = delsl_do2_15-delsl_dofit15$fitted.values
delsl_PHdet_30 = delsl_ph2_30-delsl_phfit30$fitted.values
delsl_PHdet_15 = delsl_ph2_15-delsl_phfit15$fitted.values
elkap_WTdet_15_first = elkap_Wt2_15_first-elkap_Wfit15_first$fitted.values
elkap_DOdet_15_first = elkap_do2_15_first-elkap_dofit15_first$fitted.values
elkap_PHdet_15_first = elkap_ph2_15_first-elkap_phfit15_first$fitted.values
elkap_WTdet_30 = elkap_Wt2_30-elkap_Wfit30$fitted.values
elkap_DOdet_30 = elkap_do2_30-elkap_dofit30$fitted.values
elkap_PHdet_30 = elkap_ph2_30-elkap_phfit30$fitted.values
elkap_WTdet_15_second = elkap_Wt2_15_second-elkap_Wfit15_second$fitted.values
elkap_DOdet_15_second = elkap_do2_15_second-elkap_dofit15_second$fitted.values
elkap_PHdet_15_second = elkap_ph2_15_second-elkap_phfit15_second$fitted.values
elksm_WTdet_15_first = elksm_Wt2_15_first-elksm_Wfit15_first$fitted.values
elksm_DOdet_15_first = elksm_do2_15_first-elksm_dofit15_first$fitted.values
elksm_PHdet_15_first = elksm_ph2_15_first-elksm_phfit15_first$fitted.values
elksm_WTdet_30 = elksm_Wt2_30-elksm_Wfit30$fitted.values
elksm_DOdet_30 = elksm_do2_30-elksm_dofit30$fitted.values
elksm_PHdet_30 = elksm_ph2_30-elksm_phfit30$fitted.values
elksm_WTdet_15_second = elksm_Wt2_15_second-elksm_Wfit15_second$fitted.values
elksm_DOdet_15_second = elksm_do2_15_second-elksm_dofit15_second$fitted.values
elksm_PHdet_15_second = elksm_ph2_15_second-elksm_phfit15_second$fitted.values
grbgb_WTdet_30 = grbgb_Wt2_30-grbgb_Wfit30$fitted.values
grbgb_WTdet_15 = grbgb_Wt2_15-grbgb_Wfit15$fitted.values
grbgb_DOdet_30 = grbgb_do2_30-grbgb_dofit30$fitted.values
grbgb_DOdet_15 = grbgb_do2_15-grbgb_dofit15$fitted.values
grbgb_PHdet_30 = grbgb_ph2_30-grbgb_phfit30$fitted.values
grbgb_PHdet_15 = grbgb_ph2_15-grbgb_phfit15$fitted.values
hudsk_WTdet_30 = hudsk_Wt2_30-hudsk_Wfit30$fitted.values
hudsk_WTdet_15 = hudsk_Wt2_15-hudsk_Wfit15$fitted.values
hudsk_DOdet_30 = hudsk_do2_30-hudsk_dofit30$fitted.values
hudsk_DOdet_15 = hudsk_do2_15-hudsk_dofit15$fitted.values
hudsk_PHdet_30 = hudsk_ph2_30-hudsk_phfit30$fitted.values
hudsk_PHdet_15 = hudsk_ph2_15-hudsk_phfit15$fitted.values
hudts_WTdet_30 = hudts_Wt2_30-hudts_Wfit30$fitted.values
hudts_WTdet_15 = hudts_Wt2_15-hudts_Wfit15$fitted.values
hudts_DOdet_30 = hudts_do2_30-hudts_dofit30$fitted.values
hudts_DOdet_15 = hudts_do2_15-hudts_dofit15$fitted.values
hudts_PHdet_30 = hudts_ph2_30-hudts_phfit30$fitted.values
hudts_PHdet_15 = hudts_ph2_15-hudts_phfit15$fitted.values
job09_WTdet_30 = job09_Wt2_30-job09_Wfit30$fitted.values
job09_WTdet_15 = job09_Wt2_15-job09_Wfit15$fitted.values
job09_DOdet_30 = job09_do2_30-job09_dofit30$fitted.values
job09_DOdet_15 = job09_do2_15-job09_dofit15$fitted.values
job09_PHdet_30 = job09_ph2_30-job09_phfit30$fitted.values
job09_PHdet_15 = job09_ph2_15-job09_phfit15$fitted.values
narpc_WTdet_30 = narpc_Wt2_30-narpc_Wfit30$fitted.values
narpc_WTdet_15 = narpc_Wt2_15-narpc_Wfit15$fitted.values
narpc_DOdet_30 = narpc_do2_30-narpc_dofit30$fitted.values
narpc_DOdet_15 = narpc_do2_15-narpc_dofit15$fitted.values
narpc_PHdet_30 = narpc_ph2_30-narpc_phfit30$fitted.values
narpc_PHdet_15 = narpc_ph2_15-narpc_phfit15$fitted.values
nocec_WTdet_30 = nocec_Wt2_30-nocec_Wfit30$fitted.values
nocec_WTdet_15 = nocec_Wt2_15-nocec_Wfit15$fitted.values
nocec_DOdet_30 = nocec_do2_30-nocec_dofit30$fitted.values
nocec_DOdet_15 = nocec_do2_15-nocec_dofit15$fitted.values
nocec_PHdet_30 = nocec_ph2_30-nocec_phfit30$fitted.values
nocec_PHdet_15 = nocec_ph2_15-nocec_phfit15$fitted.values
nocrc_WTdet_30 = nocrc_Wt2_30-nocrc_Wfit30$fitted.values
nocrc_WTdet_15 = nocrc_Wt2_15-nocrc_Wfit15$fitted.values
nocrc_DOdet_30 = nocrc_do2_30-nocrc_dofit30$fitted.values
nocrc_DOdet_15 = nocrc_do2_15-nocrc_dofit15$fitted.values
nocrc_PHdet_30 = nocrc_ph2_30-nocrc_phfit30$fitted.values
nocrc_PHdet_15 = nocrc_ph2_15-nocrc_phfit15$fitted.values
pdbby_WTdet_30 = pdbby_Wt2_30-pdbby_Wfit30$fitted.values
pdbby_WTdet_15 = pdbby_Wt2_15-pdbby_Wfit15$fitted.values
pdbby_DOdet_30 = pdbby_do2_30-pdbby_dofit30$fitted.values
pdbby_DOdet_15 = pdbby_do2_15-pdbby_dofit15$fitted.values
pdbby_PHdet_30 = pdbby_ph2_30-pdbby_phfit30$fitted.values
pdbby_PHdet_15 = pdbby_ph2_15-pdbby_phfit15$fitted.values
welin_WTdet_30 = welin_Wt2_30-welin_Wfit30$fitted.values
welin_WTdet_15 = welin_Wt2_15-welin_Wfit15$fitted.values
welin_DOdet_30 = welin_do2_30-welin_dofit30$fitted.values
welin_DOdet_15 = welin_do2_15-welin_dofit15$fitted.values
welin_PHdet_30 = welin_ph2_30-welin_phfit30$fitted.values
welin_PHdet_15 = welin_ph2_15-welin_phfit15$fitted.values

#power spectral density function to determine dominant frequencies over which data varies
acesp_Spec_30_temp = specclc(acesp_WTdet_30, 48)
acesp_Spec_15_temp = specclc(acesp_WTdet_15, 96)
acesp_Spec_30_do = specclc(acesp_DOdet_30, 48)
acesp_Spec_15_do = specclc(acesp_DOdet_15, 96)
acesp_Spec_30_ph = specclc(acesp_PHdet_30, 48)
acesp_Spec_15_ph = specclc(acesp_PHdet_15, 96)
apaeb_Spec_30_temp = specclc(apaeb_WTdet_30, 48)
apaeb_Spec_15_temp = specclc(apaeb_WTdet_15, 96)
apaeb_Spec_30_do = specclc(apaeb_DOdet_30, 48)
apaeb_Spec_15_do = specclc(apaeb_DOdet_15, 96)
apaeb_Spec_30_ph = specclc(apaeb_PHdet_30, 48)
apaeb_Spec_15_ph = specclc(apaeb_PHdet_15, 96)
apaes_Spec_30_temp = specclc(apaes_WTdet_30, 48)
apaes_Spec_15_temp = specclc(apaes_WTdet_15, 96)
apaes_Spec_30_do = specclc(apaes_DOdet_30, 48)
apaes_Spec_15_do = specclc(apaes_DOdet_15, 96)
apaes_Spec_30_ph = specclc(apaes_PHdet_30, 48)
apaes_Spec_15_ph = specclc(apaes_PHdet_15, 96)
cbvtc_Spec_15_temp = specclc(cbvtc_WTdet_15, 96)
cbvtc_Spec_15_do = specclc(cbvtc_DOdet_15, 96)
cbvtc_Spec_15_ph = specclc(cbvtc_PHdet_15, 96)
delbl_Spec_30_temp = specclc(delbl_WTdet_30, 48)
delbl_Spec_15_temp = specclc(delbl_WTdet_15, 96)
delbl_Spec_30_do = specclc(delbl_DOdet_30, 48)
delbl_Spec_15_do = specclc(delbl_DOdet_15, 96)
delbl_Spec_30_ph = specclc(delbl_PHdet_30, 48)
delbl_Spec_15_ph = specclc(delbl_PHdet_15, 96)
delsl_Spec_30_temp = specclc(delsl_WTdet_30, 48)
delsl_Spec_15_temp = specclc(delsl_WTdet_15, 96)
delsl_Spec_30_do = specclc(delsl_DOdet_30, 48)
delsl_Spec_15_do = specclc(delsl_DOdet_15, 96)
delsl_Spec_30_ph = specclc(delsl_PHdet_30, 48)
delsl_Spec_15_ph = specclc(delsl_PHdet_15, 96)
elkap_Spec_15_temp_first = specclc(elkap_WTdet_15_first, 96)
elkap_Spec_15_do_first = specclc(elkap_DOdet_15_first, 96)
elkap_Spec_15_ph_first = specclc(elkap_PHdet_15_first, 96)
elkap_Spec_30_temp = specclc(elkap_WTdet_30, 48)
elkap_Spec_30_do = specclc(elkap_DOdet_30, 48)
elkap_Spec_30_ph = specclc(elkap_PHdet_30, 48)
elkap_Spec_15_temp_second = specclc(elkap_WTdet_15_second, 96)
elkap_Spec_15_do_second = specclc(elkap_DOdet_15_second, 96)
elkap_Spec_15_ph_second = specclc(elkap_PHdet_15_second, 96)
elksm_Spec_15_temp_first = specclc(elksm_WTdet_15_first, 96)
elksm_Spec_15_do_first = specclc(elksm_DOdet_15_first, 96)
elksm_Spec_15_ph_first = specclc(elksm_PHdet_15_first, 96)
elksm_Spec_30_temp = specclc(elksm_WTdet_30, 48)
elksm_Spec_30_do = specclc(elksm_DOdet_30, 48)
elksm_Spec_30_ph = specclc(elksm_PHdet_30, 48)
elksm_Spec_15_temp_second = specclc(elksm_WTdet_15_second, 96)
elksm_Spec_15_do_second = specclc(elksm_DOdet_15_second, 96)
elksm_Spec_15_ph_second = specclc(elksm_PHdet_15_second, 96)
grbgb_Spec_30_temp = specclc(grbgb_WTdet_30, 48)
grbgb_Spec_15_temp = specclc(grbgb_WTdet_15, 96)
grbgb_Spec_30_do = specclc(grbgb_DOdet_30, 48)
grbgb_Spec_15_do = specclc(grbgb_DOdet_15, 96)
grbgb_Spec_30_ph = specclc(grbgb_PHdet_30, 48)
grbgb_Spec_15_ph = specclc(grbgb_PHdet_15, 96)
hudsk_Spec_30_temp = specclc(hudsk_WTdet_30, 48)
hudsk_Spec_15_temp = specclc(hudsk_WTdet_15, 96)
hudsk_Spec_30_do = specclc(hudsk_DOdet_30, 48)
hudsk_Spec_15_do = specclc(hudsk_DOdet_15, 96)
hudsk_Spec_30_ph = specclc(hudsk_PHdet_30, 48)
hudsk_Spec_15_ph = specclc(hudsk_PHdet_15, 96)
hudts_Spec_30_temp = specclc(hudts_WTdet_30, 48)
hudts_Spec_15_temp = specclc(hudts_WTdet_15, 96)
hudts_Spec_30_do = specclc(hudts_DOdet_30, 48)
hudts_Spec_15_do = specclc(hudts_DOdet_15, 96)
hudts_Spec_30_ph = specclc(hudts_PHdet_30, 48)
hudts_Spec_15_ph = specclc(hudts_PHdet_15, 96)
job09_Spec_30_temp = specclc(job09_WTdet_30, 48)
job09_Spec_15_temp = specclc(job09_WTdet_15, 96)
job09_Spec_30_do = specclc(job09_DOdet_30, 48)
job09_Spec_15_do = specclc(job09_DOdet_15, 96)
job09_Spec_30_ph = specclc(job09_PHdet_30, 48)
job09_Spec_15_ph = specclc(job09_PHdet_15, 96)
narpc_Spec_30_temp = specclc(narpc_WTdet_30, 48)
narpc_Spec_15_temp = specclc(narpc_WTdet_15, 96)
narpc_Spec_30_do = specclc(narpc_DOdet_30, 48)
narpc_Spec_15_do = specclc(narpc_DOdet_15, 96)
narpc_Spec_30_ph = specclc(narpc_PHdet_30, 48)
narpc_Spec_15_ph = specclc(narpc_PHdet_15, 96)
nocec_Spec_30_temp = specclc(nocec_WTdet_30, 48)
nocec_Spec_15_temp = specclc(nocec_WTdet_15, 96)
nocec_Spec_30_do = specclc(nocec_DOdet_30, 48)
nocec_Spec_15_do = specclc(nocec_DOdet_15, 96)
nocec_Spec_30_ph = specclc(nocec_PHdet_30, 48)
nocec_Spec_15_ph = specclc(nocec_PHdet_15, 96)
nocrc_Spec_30_temp = specclc(nocrc_WTdet_30, 48)
nocrc_Spec_15_temp = specclc(nocrc_WTdet_15, 96)
nocrc_Spec_30_do = specclc(nocrc_DOdet_30, 48)
nocrc_Spec_15_do = specclc(nocrc_DOdet_15, 96)
nocrc_Spec_30_ph = specclc(nocrc_PHdet_30, 48)
nocrc_Spec_15_ph = specclc(nocrc_PHdet_15, 96)
pdbby_Spec_30_temp = specclc(pdbby_WTdet_30, 48)
pdbby_Spec_15_temp = specclc(pdbby_WTdet_15, 96)
pdbby_Spec_30_do = specclc(pdbby_DOdet_30, 48)
pdbby_Spec_15_do = specclc(pdbby_DOdet_15, 96)
pdbby_Spec_30_ph = specclc(pdbby_PHdet_30, 48)
pdbby_Spec_15_ph = specclc(pdbby_PHdet_15, 96)
welin_Spec_30_temp = specclc(welin_WTdet_30, 48)
welin_Spec_15_temp = specclc(welin_WTdet_15, 96)
welin_Spec_30_do = specclc(welin_DOdet_30, 48)
welin_Spec_15_do = specclc(welin_DOdet_15, 96)
welin_Spec_30_ph = specclc(welin_PHdet_30, 48)
welin_Spec_15_ph = specclc(welin_PHdet_15, 96)

px_acesp_30_temp = acesp_Spec_30_temp[,1]; fx_acesp_30_temp = acesp_Spec_30_temp[,2]
px_acesp_15_temp = acesp_Spec_15_temp[,1]; fx_acesp_15_temp = acesp_Spec_15_temp[,2]
px_acesp_30_do = acesp_Spec_30_do[,1]; fx_acesp_30_do = acesp_Spec_30_do[,2]
px_acesp_15_do = acesp_Spec_15_do[,1]; fx_acesp_15_do = acesp_Spec_15_do[,2]
px_acesp_30_ph = acesp_Spec_30_ph[,1]; fx_acesp_30_ph = acesp_Spec_30_ph[,2]
px_acesp_15_ph = acesp_Spec_15_ph[,1]; fx_acesp_15_ph = acesp_Spec_15_ph[,2]
px_apaeb_30_temp = apaeb_Spec_30_temp[,1]; fx_apaeb_30_temp = apaeb_Spec_30_temp[,2]
px_apaeb_15_temp = apaeb_Spec_15_temp[,1]; fx_apaeb_15_temp = apaeb_Spec_15_temp[,2]
px_apaeb_30_do = apaeb_Spec_30_do[,1]; fx_apaeb_30_do = apaeb_Spec_30_do[,2]
px_apaeb_15_do = apaeb_Spec_15_do[,1]; fx_apaeb_15_do = apaeb_Spec_15_do[,2]
px_apaeb_30_ph = apaeb_Spec_30_ph[,1]; fx_apaeb_30_ph = apaeb_Spec_30_ph[,2]
px_apaeb_15_ph = apaeb_Spec_15_ph[,1]; fx_apaeb_15_ph = apaeb_Spec_15_ph[,2]
px_apaes_30_temp = apaes_Spec_30_temp[,1]; fx_apaes_30_temp = apaes_Spec_30_temp[,2]
px_apaes_15_temp = apaes_Spec_15_temp[,1]; fx_apaes_15_temp = apaes_Spec_15_temp[,2]
px_apaes_30_do = apaes_Spec_30_do[,1]; fx_apaes_30_do = apaes_Spec_30_do[,2]
px_apaes_15_do = apaes_Spec_15_do[,1]; fx_apaes_15_do = apaes_Spec_15_do[,2]
px_apaes_30_ph = apaes_Spec_30_ph[,1]; fx_apaes_30_ph = apaes_Spec_30_ph[,2]
px_apaes_15_ph = apaes_Spec_15_ph[,1]; fx_apaes_15_ph = apaes_Spec_15_ph[,2]
px_cbvtc_15_temp = cbvtc_Spec_15_temp[,1]; fx_cbvtc_15_temp = cbvtc_Spec_15_temp[,2]
px_cbvtc_15_do = cbvtc_Spec_15_do[,1]; fx_cbvtc_15_do = cbvtc_Spec_15_do[,2]
px_cbvtc_15_ph = cbvtc_Spec_15_ph[,1]; fx_cbvtc_15_ph = cbvtc_Spec_15_ph[,2]
px_delbl_30_temp = delbl_Spec_30_temp[,1]; fx_delbl_30_temp = delbl_Spec_30_temp[,2]
px_delbl_15_temp = delbl_Spec_15_temp[,1]; fx_delbl_15_temp = delbl_Spec_15_temp[,2]
px_delbl_30_do = delbl_Spec_30_do[,1]; fx_delbl_30_do = delbl_Spec_30_do[,2]
px_delbl_15_do = delbl_Spec_15_do[,1]; fx_delbl_15_do = delbl_Spec_15_do[,2]
px_delbl_30_ph = delbl_Spec_30_ph[,1]; fx_delbl_30_ph = delbl_Spec_30_ph[,2]
px_delbl_15_ph = delbl_Spec_15_ph[,1]; fx_delbl_15_ph = delbl_Spec_15_ph[,2]
px_delsl_30_temp = delsl_Spec_30_temp[,1]; fx_delsl_30_temp = delsl_Spec_30_temp[,2]
px_delsl_15_temp = delsl_Spec_15_temp[,1]; fx_delsl_15_temp = delsl_Spec_15_temp[,2]
px_delsl_30_do = delsl_Spec_30_do[,1]; fx_delsl_30_do = delsl_Spec_30_do[,2]
px_delsl_15_do = delsl_Spec_15_do[,1]; fx_delsl_15_do = delsl_Spec_15_do[,2]
px_delsl_30_ph = delsl_Spec_30_ph[,1]; fx_delsl_30_ph = delsl_Spec_30_ph[,2]
px_delsl_15_ph = delsl_Spec_15_ph[,1]; fx_delsl_15_ph = delsl_Spec_15_ph[,2]
px_elkap_15_temp_first = elkap_Spec_15_temp_first[,1]; fx_elkap_15_temp_first = elkap_Spec_15_temp_first[,2]
px_elkap_15_do_first = elkap_Spec_15_do_first[,1]; fx_elkap_15_do_first = elkap_Spec_15_do_first[,2]
px_elkap_15_ph_first = elkap_Spec_15_ph_first[,1]; fx_elkap_15_ph_first = elkap_Spec_15_ph_first[,2]
px_elkap_30_temp = elkap_Spec_30_temp[,1]; fx_elkap_30_temp = elkap_Spec_30_temp[,2]
px_elkap_30_do = elkap_Spec_30_do[,1]; fx_elkap_30_do = elkap_Spec_30_do[,2]
px_elkap_30_ph = elkap_Spec_30_ph[,1]; fx_elkap_30_ph = elkap_Spec_30_ph[,2]
px_elkap_15_temp_second = elkap_Spec_15_temp_second[,1]; fx_elkap_15_temp_second = elkap_Spec_15_temp_second[,2]
px_elkap_15_do_second = elkap_Spec_15_do_second[,1]; fx_elkap_15_do_second = elkap_Spec_15_do_second[,2]
px_elkap_15_ph_second = elkap_Spec_15_ph_second[,1]; fx_elkap_15_ph_second = elkap_Spec_15_ph_second[,2]
px_elksm_15_temp_first = elksm_Spec_15_temp_first[,1]; fx_elksm_15_temp_first = elksm_Spec_15_temp_first[,2]
px_elksm_15_do_first = elksm_Spec_15_do_first[,1]; fx_elksm_15_do_first = elksm_Spec_15_do_first[,2]
px_elksm_15_ph_first = elksm_Spec_15_ph_first[,1]; fx_elksm_15_ph_first = elksm_Spec_15_ph_first[,2]
px_elksm_30_temp = elksm_Spec_30_temp[,1]; fx_elksm_30_temp = elksm_Spec_30_temp[,2]
px_elksm_30_do = elksm_Spec_30_do[,1]; fx_elksm_30_do = elksm_Spec_30_do[,2]
px_elksm_30_ph = elksm_Spec_30_ph[,1]; fx_elksm_30_ph = elksm_Spec_30_ph[,2]
px_elksm_15_temp_second = elksm_Spec_15_temp_second[,1]; fx_elksm_15_temp_second = elksm_Spec_15_temp_second[,2]
px_elksm_15_do_second = elksm_Spec_15_do_second[,1]; fx_elksm_15_do_second = elksm_Spec_15_do_second[,2]
px_elksm_15_ph_second = elksm_Spec_15_ph_second[,1]; fx_elksm_15_ph_second = elksm_Spec_15_ph_second[,2]
px_grbgb_30_temp = grbgb_Spec_30_temp[,1]; fx_grbgb_30_temp = grbgb_Spec_30_temp[,2]
px_grbgb_15_temp = grbgb_Spec_15_temp[,1]; fx_grbgb_15_temp = grbgb_Spec_15_temp[,2]
px_grbgb_30_do = grbgb_Spec_30_do[,1]; fx_grbgb_30_do = grbgb_Spec_30_do[,2]
px_grbgb_15_do = grbgb_Spec_15_do[,1]; fx_grbgb_15_do = grbgb_Spec_15_do[,2]
px_grbgb_30_ph = grbgb_Spec_30_ph[,1]; fx_grbgb_30_ph = grbgb_Spec_30_ph[,2]
px_grbgb_15_ph = grbgb_Spec_15_ph[,1]; fx_grbgb_15_ph = grbgb_Spec_15_ph[,2]
px_hudsk_30_temp = hudsk_Spec_30_temp[,1]; fx_hudsk_30_temp = hudsk_Spec_30_temp[,2]
px_hudsk_15_temp = hudsk_Spec_15_temp[,1]; fx_hudsk_15_temp = hudsk_Spec_15_temp[,2]
px_hudsk_30_do = hudsk_Spec_30_do[,1]; fx_hudsk_30_do = hudsk_Spec_30_do[,2]
px_hudsk_15_do = hudsk_Spec_15_do[,1]; fx_hudsk_15_do = hudsk_Spec_15_do[,2]
px_hudsk_30_ph = hudsk_Spec_30_ph[,1]; fx_hudsk_30_ph = hudsk_Spec_30_ph[,2]
px_hudsk_15_ph = hudsk_Spec_15_ph[,1]; fx_hudsk_15_ph = hudsk_Spec_15_ph[,2]
px_hudts_30_temp = hudts_Spec_30_temp[,1]; fx_hudts_30_temp = hudts_Spec_30_temp[,2]
px_hudts_15_temp = hudts_Spec_15_temp[,1]; fx_hudts_15_temp = hudts_Spec_15_temp[,2]
px_hudts_30_do = hudts_Spec_30_do[,1]; fx_hudts_30_do = hudts_Spec_30_do[,2]
px_hudts_15_do = hudts_Spec_15_do[,1]; fx_hudts_15_do = hudts_Spec_15_do[,2]
px_hudts_30_ph = hudts_Spec_30_ph[,1]; fx_hudts_30_ph = hudts_Spec_30_ph[,2]
px_hudts_15_ph = hudts_Spec_15_ph[,1]; fx_hudts_15_ph = hudts_Spec_15_ph[,2]
px_job09_30_temp = job09_Spec_30_temp[,1]; fx_job09_30_temp = job09_Spec_30_temp[,2]
px_job09_15_temp = job09_Spec_15_temp[,1]; fx_job09_15_temp = job09_Spec_15_temp[,2]
px_job09_30_do = job09_Spec_30_do[,1]; fx_job09_30_do = job09_Spec_30_do[,2]
px_job09_15_do = job09_Spec_15_do[,1]; fx_job09_15_do = job09_Spec_15_do[,2]
px_job09_30_ph = job09_Spec_30_ph[,1]; fx_job09_30_ph = job09_Spec_30_ph[,2]
px_job09_15_ph = job09_Spec_15_ph[,1]; fx_job09_15_ph = job09_Spec_15_ph[,2]
px_narpc_30_temp = narpc_Spec_30_temp[,1]; fx_narpc_30_temp = narpc_Spec_30_temp[,2]
px_narpc_15_temp = narpc_Spec_15_temp[,1]; fx_narpc_15_temp = narpc_Spec_15_temp[,2]
px_narpc_30_do = narpc_Spec_30_do[,1]; fx_narpc_30_do = narpc_Spec_30_do[,2]
px_narpc_15_do = narpc_Spec_15_do[,1]; fx_narpc_15_do = narpc_Spec_15_do[,2]
px_narpc_30_ph = narpc_Spec_30_ph[,1]; fx_narpc_30_ph = narpc_Spec_30_ph[,2]
px_narpc_15_ph = narpc_Spec_15_ph[,1]; fx_narpc_15_ph = narpc_Spec_15_ph[,2]
px_nocec_30_temp = nocec_Spec_30_temp[,1]; fx_nocec_30_temp = nocec_Spec_30_temp[,2]
px_nocec_15_temp = nocec_Spec_15_temp[,1]; fx_nocec_15_temp = nocec_Spec_15_temp[,2]
px_nocec_30_do = nocec_Spec_30_do[,1]; fx_nocec_30_do = nocec_Spec_30_do[,2]
px_nocec_15_do = nocec_Spec_15_do[,1]; fx_nocec_15_do = nocec_Spec_15_do[,2]
px_nocec_30_ph = nocec_Spec_30_ph[,1]; fx_nocec_30_ph = nocec_Spec_30_ph[,2]
px_nocec_15_ph = nocec_Spec_15_ph[,1]; fx_nocec_15_ph = nocec_Spec_15_ph[,2]
px_nocrc_30_temp = nocrc_Spec_30_temp[,1]; fx_nocrc_30_temp = nocrc_Spec_30_temp[,2]
px_nocrc_15_temp = nocrc_Spec_15_temp[,1]; fx_nocrc_15_temp = nocrc_Spec_15_temp[,2]
px_nocrc_30_do = nocrc_Spec_30_do[,1]; fx_nocrc_30_do = nocrc_Spec_30_do[,2]
px_nocrc_15_do = nocrc_Spec_15_do[,1]; fx_nocrc_15_do = nocrc_Spec_15_do[,2]
px_nocrc_30_ph = nocrc_Spec_30_ph[,1]; fx_nocrc_30_ph = nocrc_Spec_30_ph[,2]
px_nocrc_15_ph = nocrc_Spec_15_ph[,1]; fx_nocrc_15_ph = nocrc_Spec_15_ph[,2]
px_pdbby_30_temp = pdbby_Spec_30_temp[,1]; fx_pdbby_30_temp = pdbby_Spec_30_temp[,2]
px_pdbby_15_temp = pdbby_Spec_15_temp[,1]; fx_pdbby_15_temp = pdbby_Spec_15_temp[,2]
px_pdbby_30_do = pdbby_Spec_30_do[,1]; fx_pdbby_30_do = pdbby_Spec_30_do[,2]
px_pdbby_15_do = pdbby_Spec_15_do[,1]; fx_pdbby_15_do = pdbby_Spec_15_do[,2]
px_pdbby_30_ph = pdbby_Spec_30_ph[,1]; fx_pdbby_30_ph = pdbby_Spec_30_ph[,2]
px_pdbby_15_ph = pdbby_Spec_15_ph[,1]; fx_pdbby_15_ph = pdbby_Spec_15_ph[,2]
px_welin_30_temp = welin_Spec_30_temp[,1]; fx_welin_30_temp = welin_Spec_30_temp[,2]
px_welin_15_temp = welin_Spec_15_temp[,1]; fx_welin_15_temp = welin_Spec_15_temp[,2]
px_welin_30_do = welin_Spec_30_do[,1]; fx_welin_30_do = welin_Spec_30_do[,2]
px_welin_15_do = welin_Spec_15_do[,1]; fx_welin_15_do = welin_Spec_15_do[,2]
px_welin_30_ph = welin_Spec_30_ph[,1]; fx_welin_30_ph = welin_Spec_30_ph[,2]
px_welin_15_ph = welin_Spec_15_ph[,1]; fx_welin_15_ph = welin_Spec_15_ph[,2]

#low pass filter -- see lpfilt.R for details but this sets the data, the 1/24 sets a cycle (data is hourly- this sets each observation as 1/24th of a cycle -- for 15 min data this would be adjusted), and 0.5 sets the cut off for frequency. This frequency (0.5) filters out all variability occuring at frequencies less than 24 hours, 1 filters out variability occuring less than every 12 hours. So using 0.5 will be equivalent to a daily average, removing both tidal and diurnal variation. 1 will filter out only tidal variation, and will keep diurnal variation.
#remove tidal
acesp_Filt2_30_temp = lpfilt(acesp_WTdet_30,1/48,1)
acesp_Filt2_15_temp = lpfilt(acesp_WTdet_15,1/96,1)
acesp_Filt2_30_do = lpfilt(acesp_DOdet_30,1/48,1)
acesp_Filt2_15_do = lpfilt(acesp_DOdet_15,1/96,1)
acesp_Filt2_30_ph = lpfilt(acesp_PHdet_30,1/48,1)
acesp_Filt2_15_ph = lpfilt(acesp_PHdet_15,1/96,1)
apaeb_Filt2_30_temp = lpfilt(apaeb_WTdet_30,1/48,1)
apaeb_Filt2_15_temp = lpfilt(apaeb_WTdet_15,1/96,1)
apaeb_Filt2_30_do = lpfilt(apaeb_DOdet_30,1/48,1)
apaeb_Filt2_15_do = lpfilt(apaeb_DOdet_15,1/96,1)
apaeb_Filt2_30_ph = lpfilt(apaeb_PHdet_30,1/48,1)
apaeb_Filt2_15_ph = lpfilt(apaeb_PHdet_15,1/96,1)
apaes_Filt2_30_temp = lpfilt(apaes_WTdet_30,1/48,1)
apaes_Filt2_15_temp = lpfilt(apaes_WTdet_15,1/96,1)
apaes_Filt2_30_do = lpfilt(apaes_DOdet_30,1/48,1)
apaes_Filt2_15_do = lpfilt(apaes_DOdet_15,1/96,1)
apaes_Filt2_30_ph = lpfilt(apaes_PHdet_30,1/48,1)
apaes_Filt2_15_ph = lpfilt(apaes_PHdet_15,1/96,1)
cbvtc_Filt2_15_temp = lpfilt(cbvtc_WTdet_15,1/96,1)
cbvtc_Filt2_15_do = lpfilt(cbvtc_DOdet_15,1/96,1)
cbvtc_Filt2_15_ph = lpfilt(cbvtc_PHdet_15,1/96,1)
delbl_Filt2_30_temp = lpfilt(delbl_WTdet_30,1/48,1)
delbl_Filt2_15_temp = lpfilt(delbl_WTdet_15,1/96,1)
delbl_Filt2_30_do = lpfilt(delbl_DOdet_30,1/48,1)
delbl_Filt2_15_do = lpfilt(delbl_DOdet_15,1/96,1)
delbl_Filt2_30_ph = lpfilt(delbl_PHdet_30,1/48,1)
delbl_Filt2_15_ph = lpfilt(delbl_PHdet_15,1/96,1)
delsl_Filt2_30_temp = lpfilt(delsl_WTdet_30,1/48,1)
delsl_Filt2_15_temp = lpfilt(delsl_WTdet_15,1/96,1)
delsl_Filt2_30_do = lpfilt(delsl_DOdet_30,1/48,1)
delsl_Filt2_15_do = lpfilt(delsl_DOdet_15,1/96,1)
delsl_Filt2_30_ph = lpfilt(delsl_PHdet_30,1/48,1)
delsl_Filt2_15_ph = lpfilt(delsl_PHdet_15,1/96,1)
elkap_Filt2_15_temp_first = lpfilt(elkap_WTdet_15_first,1/96,1)
elkap_Filt2_15_do_first = lpfilt(elkap_DOdet_15_first,1/96,1)
elkap_Filt2_15_ph_first = lpfilt(elkap_PHdet_15_first,1/96,1)
elkap_Filt2_30_temp = lpfilt(elkap_WTdet_30,1/48,1)
elkap_Filt2_30_do = lpfilt(elkap_DOdet_30,1/48,1)
elkap_Filt2_30_ph = lpfilt(elkap_PHdet_30,1/48,1)
elkap_Filt2_15_temp_second = lpfilt(elkap_WTdet_15_second,1/96,1)
elkap_Filt2_15_do_second = lpfilt(elkap_DOdet_15_second,1/96,1)
elkap_Filt2_15_ph_second = lpfilt(elkap_PHdet_15_second,1/96,1)
elksm_Filt2_15_temp_first = lpfilt(elksm_WTdet_15_first,1/96,1)
elksm_Filt2_15_do_first = lpfilt(elksm_DOdet_15_first,1/96,1)
elksm_Filt2_15_ph_first = lpfilt(elksm_PHdet_15_first,1/96,1)
elksm_Filt2_30_temp = lpfilt(elksm_WTdet_30,1/48,1)
elksm_Filt2_30_do = lpfilt(elksm_DOdet_30,1/48,1)
elksm_Filt2_30_ph = lpfilt(elksm_PHdet_30,1/48,1)
elksm_Filt2_15_temp_second = lpfilt(elksm_WTdet_15_second,1/96,1)
elksm_Filt2_15_do_second = lpfilt(elksm_DOdet_15_second,1/96,1)
elksm_Filt2_15_ph_second = lpfilt(elksm_PHdet_15_second,1/96,1)
grbgb_Filt2_30_temp = lpfilt(grbgb_WTdet_30,1/48,1)
grbgb_Filt2_15_temp = lpfilt(grbgb_WTdet_15,1/96,1)
grbgb_Filt2_30_do = lpfilt(grbgb_DOdet_30,1/48,1)
grbgb_Filt2_15_do = lpfilt(grbgb_DOdet_15,1/96,1)
grbgb_Filt2_30_ph = lpfilt(grbgb_PHdet_30,1/48,1)
grbgb_Filt2_15_ph = lpfilt(grbgb_PHdet_15,1/96,1)
hudsk_Filt2_30_temp = lpfilt(hudsk_WTdet_30,1/48,1)
hudsk_Filt2_15_temp = lpfilt(hudsk_WTdet_15,1/96,1)
hudsk_Filt2_30_do = lpfilt(hudsk_DOdet_30,1/48,1)
hudsk_Filt2_15_do = lpfilt(hudsk_DOdet_15,1/96,1)
hudsk_Filt2_30_ph = lpfilt(hudsk_PHdet_30,1/48,1)
hudsk_Filt2_15_ph = lpfilt(hudsk_PHdet_15,1/96,1)
hudts_Filt2_30_temp = lpfilt(hudts_WTdet_30,1/48,1)
hudts_Filt2_15_temp = lpfilt(hudts_WTdet_15,1/96,1)
hudts_Filt2_30_do = lpfilt(hudts_DOdet_30,1/48,1)
hudts_Filt2_15_do = lpfilt(hudts_DOdet_15,1/96,1)
hudts_Filt2_30_ph = lpfilt(hudts_PHdet_30,1/48,1)
hudts_Filt2_15_ph = lpfilt(hudts_PHdet_15,1/96,1)
job09_Filt2_30_temp = lpfilt(job09_WTdet_30,1/48,1)
job09_Filt2_15_temp = lpfilt(job09_WTdet_15,1/96,1)
job09_Filt2_30_do = lpfilt(job09_DOdet_30,1/48,1)
job09_Filt2_15_do = lpfilt(job09_DOdet_15,1/96,1)
job09_Filt2_30_ph = lpfilt(job09_PHdet_30,1/48,1)
job09_Filt2_15_ph = lpfilt(job09_PHdet_15,1/96,1)
narpc_Filt2_30_temp = lpfilt(narpc_WTdet_30,1/48,1)
narpc_Filt2_15_temp = lpfilt(narpc_WTdet_15,1/96,1)
narpc_Filt2_30_do = lpfilt(narpc_DOdet_30,1/48,1)
narpc_Filt2_15_do = lpfilt(narpc_DOdet_15,1/96,1)
narpc_Filt2_30_ph = lpfilt(narpc_PHdet_30,1/48,1)
narpc_Filt2_15_ph = lpfilt(narpc_PHdet_15,1/96,1)
nocec_Filt2_30_temp = lpfilt(nocec_WTdet_30,1/48,1)
nocec_Filt2_15_temp = lpfilt(nocec_WTdet_15,1/96,1)
nocec_Filt2_30_do = lpfilt(nocec_DOdet_30,1/48,1)
nocec_Filt2_15_do = lpfilt(nocec_DOdet_15,1/96,1)
nocec_Filt2_30_ph = lpfilt(nocec_PHdet_30,1/48,1)
nocec_Filt2_15_ph = lpfilt(nocec_PHdet_15,1/96,1)
nocrc_Filt2_30_temp = lpfilt(nocrc_WTdet_30,1/48,1)
nocrc_Filt2_15_temp = lpfilt(nocrc_WTdet_15,1/96,1)
nocrc_Filt2_30_do = lpfilt(nocrc_DOdet_30,1/48,1)
nocrc_Filt2_15_do = lpfilt(nocrc_DOdet_15,1/96,1)
nocrc_Filt2_30_ph = lpfilt(nocrc_PHdet_30,1/48,1)
nocrc_Filt2_15_ph = lpfilt(nocrc_PHdet_15,1/96,1)
pdbby_Filt2_30_temp = lpfilt(pdbby_WTdet_30,1/48,1)
pdbby_Filt2_15_temp = lpfilt(pdbby_WTdet_15,1/96,1)
pdbby_Filt2_30_do = lpfilt(pdbby_DOdet_30,1/48,1)
pdbby_Filt2_15_do = lpfilt(pdbby_DOdet_15,1/96,1)
pdbby_Filt2_30_ph = lpfilt(pdbby_PHdet_30,1/48,1)
pdbby_Filt2_15_ph = lpfilt(pdbby_PHdet_15,1/96,1)
welin_Filt2_30_temp = lpfilt(welin_WTdet_30,1/48,1)
welin_Filt2_15_temp = lpfilt(welin_WTdet_15,1/96,1)
welin_Filt2_30_do = lpfilt(welin_DOdet_30,1/48,1)
welin_Filt2_15_do = lpfilt(welin_DOdet_15,1/96,1)
welin_Filt2_30_ph = lpfilt(welin_PHdet_30,1/48,1)
welin_Filt2_15_ph = lpfilt(welin_PHdet_15,1/96,1)

acesp_WTdat30_2 <- as.data.frame(acesp_Filt2_30_temp)
acesp_WTdat15_2 <- as.data.frame(acesp_Filt2_15_temp)
acesp_DOdat30_2 <- as.data.frame(acesp_Filt2_30_do)
acesp_DOdat15_2 <- as.data.frame(acesp_Filt2_15_do)
acesp_PHdat30_2 <- as.data.frame(acesp_Filt2_30_ph)
acesp_PHdat15_2 <- as.data.frame(acesp_Filt2_15_ph)
apaeb_WTdat30_2 <- as.data.frame(apaeb_Filt2_30_temp)
apaeb_WTdat15_2 <- as.data.frame(apaeb_Filt2_15_temp)
apaeb_DOdat30_2 <- as.data.frame(apaeb_Filt2_30_do)
apaeb_DOdat15_2 <- as.data.frame(apaeb_Filt2_15_do)
apaeb_PHdat30_2 <- as.data.frame(apaeb_Filt2_30_ph)
apaeb_PHdat15_2 <- as.data.frame(apaeb_Filt2_15_ph)
apaes_WTdat30_2 <- as.data.frame(apaes_Filt2_30_temp)
apaes_WTdat15_2 <- as.data.frame(apaes_Filt2_15_temp)
apaes_DOdat30_2 <- as.data.frame(apaes_Filt2_30_do)
apaes_DOdat15_2 <- as.data.frame(apaes_Filt2_15_do)
apaes_PHdat30_2 <- as.data.frame(apaes_Filt2_30_ph)
apaes_PHdat15_2 <- as.data.frame(apaes_Filt2_15_ph)
cbvtc_WTdat15_2 <- as.data.frame(cbvtc_Filt2_15_temp)
cbvtc_DOdat15_2 <- as.data.frame(cbvtc_Filt2_15_do)
cbvtc_PHdat15_2 <- as.data.frame(cbvtc_Filt2_15_ph)
delbl_WTdat30_2 <- as.data.frame(delbl_Filt2_30_temp)
delbl_WTdat15_2 <- as.data.frame(delbl_Filt2_15_temp)
delbl_DOdat30_2 <- as.data.frame(delbl_Filt2_30_do)
delbl_DOdat15_2 <- as.data.frame(delbl_Filt2_15_do)
delbl_PHdat30_2 <- as.data.frame(delbl_Filt2_30_ph)
delbl_PHdat15_2 <- as.data.frame(delbl_Filt2_15_ph)
delsl_WTdat30_2 <- as.data.frame(delsl_Filt2_30_temp)
delsl_WTdat15_2 <- as.data.frame(delsl_Filt2_15_temp)
delsl_DOdat30_2 <- as.data.frame(delsl_Filt2_30_do)
delsl_DOdat15_2 <- as.data.frame(delsl_Filt2_15_do)
delsl_PHdat30_2 <- as.data.frame(delsl_Filt2_30_ph)
delsl_PHdat15_2 <- as.data.frame(delsl_Filt2_15_ph)
elkap_WTdat15_2_first <- as.data.frame(elkap_Filt2_15_temp_first)
elkap_DOdat15_2_first <- as.data.frame(elkap_Filt2_15_do_first)
elkap_PHdat15_2_first <- as.data.frame(elkap_Filt2_15_ph_first)
elkap_WTdat30_2 <- as.data.frame(elkap_Filt2_30_temp)
elkap_DOdat30_2 <- as.data.frame(elkap_Filt2_30_do)
elkap_PHdat30_2 <- as.data.frame(elkap_Filt2_30_ph)
elkap_WTdat15_2_second <- as.data.frame(elkap_Filt2_15_temp_second)
elkap_DOdat15_2_second <- as.data.frame(elkap_Filt2_15_do_second)
elkap_PHdat15_2_second <- as.data.frame(elkap_Filt2_15_ph_second)
elksm_WTdat15_2_first <- as.data.frame(elksm_Filt2_15_temp_first)
elksm_DOdat15_2_first <- as.data.frame(elksm_Filt2_15_do_first)
elksm_PHdat15_2_first <- as.data.frame(elksm_Filt2_15_ph_first)
elksm_WTdat30_2 <- as.data.frame(elksm_Filt2_30_temp)
elksm_DOdat30_2 <- as.data.frame(elksm_Filt2_30_do)
elksm_PHdat30_2 <- as.data.frame(elksm_Filt2_30_ph)
elksm_WTdat15_2_second <- as.data.frame(elksm_Filt2_15_temp_second)
elksm_DOdat15_2_second <- as.data.frame(elksm_Filt2_15_do_second)
elksm_PHdat15_2_second <- as.data.frame(elksm_Filt2_15_ph_second)
grbgb_WTdat30_2 <- as.data.frame(grbgb_Filt2_30_temp)
grbgb_WTdat15_2 <- as.data.frame(grbgb_Filt2_15_temp)
grbgb_DOdat30_2 <- as.data.frame(grbgb_Filt2_30_do)
grbgb_DOdat15_2 <- as.data.frame(grbgb_Filt2_15_do)
grbgb_PHdat30_2 <- as.data.frame(grbgb_Filt2_30_ph)
grbgb_PHdat15_2 <- as.data.frame(grbgb_Filt2_15_ph)
hudsk_WTdat30_2 <- as.data.frame(hudsk_Filt2_30_temp)
hudsk_WTdat15_2 <- as.data.frame(hudsk_Filt2_15_temp)
hudsk_DOdat30_2 <- as.data.frame(hudsk_Filt2_30_do)
hudsk_DOdat15_2 <- as.data.frame(hudsk_Filt2_15_do)
hudsk_PHdat30_2 <- as.data.frame(hudsk_Filt2_30_ph)
hudsk_PHdat15_2 <- as.data.frame(hudsk_Filt2_15_ph)
hudts_WTdat30_2 <- as.data.frame(hudts_Filt2_30_temp)
hudts_WTdat15_2 <- as.data.frame(hudts_Filt2_15_temp)
hudts_DOdat30_2 <- as.data.frame(hudts_Filt2_30_do)
hudts_DOdat15_2 <- as.data.frame(hudts_Filt2_15_do)
hudts_PHdat30_2 <- as.data.frame(hudts_Filt2_30_ph)
hudts_PHdat15_2 <- as.data.frame(hudts_Filt2_15_ph)
job09_WTdat30_2 <- as.data.frame(job09_Filt2_30_temp)
job09_WTdat15_2 <- as.data.frame(job09_Filt2_15_temp)
job09_DOdat30_2 <- as.data.frame(job09_Filt2_30_do)
job09_DOdat15_2 <- as.data.frame(job09_Filt2_15_do)
job09_PHdat30_2 <- as.data.frame(job09_Filt2_30_ph)
job09_PHdat15_2 <- as.data.frame(job09_Filt2_15_ph)
narpc_WTdat30_2 <- as.data.frame(narpc_Filt2_30_temp)
narpc_WTdat15_2 <- as.data.frame(narpc_Filt2_15_temp)
narpc_DOdat30_2 <- as.data.frame(narpc_Filt2_30_do)
narpc_DOdat15_2 <- as.data.frame(narpc_Filt2_15_do)
narpc_PHdat30_2 <- as.data.frame(narpc_Filt2_30_ph)
narpc_PHdat15_2 <- as.data.frame(narpc_Filt2_15_ph)
nocec_WTdat30_2 <- as.data.frame(nocec_Filt2_30_temp)
nocec_WTdat15_2 <- as.data.frame(nocec_Filt2_15_temp)
nocec_DOdat30_2 <- as.data.frame(nocec_Filt2_30_do)
nocec_DOdat15_2 <- as.data.frame(nocec_Filt2_15_do)
nocec_PHdat30_2 <- as.data.frame(nocec_Filt2_30_ph)
nocec_PHdat15_2 <- as.data.frame(nocec_Filt2_15_ph)
nocrc_WTdat30_2 <- as.data.frame(nocrc_Filt2_30_temp)
nocrc_WTdat15_2 <- as.data.frame(nocrc_Filt2_15_temp)
nocrc_DOdat30_2 <- as.data.frame(nocrc_Filt2_30_do)
nocrc_DOdat15_2 <- as.data.frame(nocrc_Filt2_15_do)
nocrc_PHdat30_2 <- as.data.frame(nocrc_Filt2_30_ph)
nocrc_PHdat15_2 <- as.data.frame(nocrc_Filt2_15_ph)
pdbby_WTdat30_2 <- as.data.frame(pdbby_Filt2_30_temp)
pdbby_WTdat15_2 <- as.data.frame(pdbby_Filt2_15_temp)
pdbby_DOdat30_2 <- as.data.frame(pdbby_Filt2_30_do)
pdbby_DOdat15_2 <- as.data.frame(pdbby_Filt2_15_do)
pdbby_PHdat30_2 <- as.data.frame(pdbby_Filt2_30_ph)
pdbby_PHdat15_2 <- as.data.frame(pdbby_Filt2_15_ph)
welin_WTdat30_2 <- as.data.frame(welin_Filt2_30_temp)
welin_WTdat15_2 <- as.data.frame(welin_Filt2_15_temp)
welin_DOdat30_2 <- as.data.frame(welin_Filt2_30_do)
welin_DOdat15_2 <- as.data.frame(welin_Filt2_15_do)
welin_PHdat30_2 <- as.data.frame(welin_Filt2_30_ph)
welin_PHdat15_2 <- as.data.frame(welin_Filt2_15_ph)

names(acesp_WTdat30_2)[names(acesp_WTdat30_2) == "acesp_Filt2_30_temp"] <- "noTide_Temp"
names(acesp_WTdat15_2)[names(acesp_WTdat15_2) == "acesp_Filt2_15_temp"] <- "noTide_Temp"
names(acesp_DOdat30_2)[names(acesp_DOdat30_2) == "acesp_Filt2_30_do"] <- "noTide_DO"
names(acesp_DOdat15_2)[names(acesp_DOdat15_2) == "acesp_Filt2_15_do"] <- "noTide_DO"
names(acesp_PHdat30_2)[names(acesp_PHdat30_2) == "acesp_Filt2_30_ph"] <- "noTide_pH"
names(acesp_PHdat15_2)[names(acesp_PHdat15_2) == "acesp_Filt2_15_ph"] <- "noTide_pH"
names(apaeb_WTdat30_2)[names(apaeb_WTdat30_2) == "apaeb_Filt2_30_temp"] <- "noTide_Temp"
names(apaeb_WTdat15_2)[names(apaeb_WTdat15_2) == "apaeb_Filt2_15_temp"] <- "noTide_Temp"
names(apaeb_DOdat30_2)[names(apaeb_DOdat30_2) == "apaeb_Filt2_30_do"] <- "noTide_DO"
names(apaeb_DOdat15_2)[names(apaeb_DOdat15_2) == "apaeb_Filt2_15_do"] <- "noTide_DO"
names(apaeb_PHdat30_2)[names(apaeb_PHdat30_2) == "apaeb_Filt2_30_ph"] <- "noTide_pH"
names(apaeb_PHdat15_2)[names(apaeb_PHdat15_2) == "apaeb_Filt2_15_ph"] <- "noTide_pH"
names(apaes_WTdat30_2)[names(apaes_WTdat30_2) == "apaes_Filt2_30_temp"] <- "noTide_Temp"
names(apaes_WTdat15_2)[names(apaes_WTdat15_2) == "apaes_Filt2_15_temp"] <- "noTide_Temp"
names(apaes_DOdat30_2)[names(apaes_DOdat30_2) == "apaes_Filt2_30_do"] <- "noTide_DO"
names(apaes_DOdat15_2)[names(apaes_DOdat15_2) == "apaes_Filt2_15_do"] <- "noTide_DO"
names(apaes_PHdat30_2)[names(apaes_PHdat30_2) == "apaes_Filt2_30_ph"] <- "noTide_pH"
names(apaes_PHdat15_2)[names(apaes_PHdat15_2) == "apaes_Filt2_15_ph"] <- "noTide_pH"
names(cbvtc_WTdat15_2)[names(cbvtc_WTdat15_2) == "cbvtc_Filt2_15_temp"] <- "noTide_Temp"
names(cbvtc_DOdat15_2)[names(cbvtc_DOdat15_2) == "cbvtc_Filt2_15_do"] <- "noTide_DO"
names(cbvtc_PHdat15_2)[names(cbvtc_PHdat15_2) == "cbvtc_Filt2_15_ph"] <- "noTide_pH"
names(delbl_WTdat30_2)[names(delbl_WTdat30_2) == "delbl_Filt2_30_temp"] <- "noTide_Temp"
names(delbl_WTdat15_2)[names(delbl_WTdat15_2) == "delbl_Filt2_15_temp"] <- "noTide_Temp"
names(delbl_DOdat30_2)[names(delbl_DOdat30_2) == "delbl_Filt2_30_do"] <- "noTide_DO"
names(delbl_DOdat15_2)[names(delbl_DOdat15_2) == "delbl_Filt2_15_do"] <- "noTide_DO"
names(delbl_PHdat30_2)[names(delbl_PHdat30_2) == "delbl_Filt2_30_ph"] <- "noTide_pH"
names(delbl_PHdat15_2)[names(delbl_PHdat15_2) == "delbl_Filt2_15_ph"] <- "noTide_pH"
names(delsl_WTdat30_2)[names(delsl_WTdat30_2) == "delsl_Filt2_30_temp"] <- "noTide_Temp"
names(delsl_WTdat15_2)[names(delsl_WTdat15_2) == "delsl_Filt2_15_temp"] <- "noTide_Temp"
names(delsl_DOdat30_2)[names(delsl_DOdat30_2) == "delsl_Filt2_30_do"] <- "noTide_DO"
names(delsl_DOdat15_2)[names(delsl_DOdat15_2) == "delsl_Filt2_15_do"] <- "noTide_DO"
names(delsl_PHdat30_2)[names(delsl_PHdat30_2) == "delsl_Filt2_30_ph"] <- "noTide_pH"
names(delsl_PHdat15_2)[names(delsl_PHdat15_2) == "delsl_Filt2_15_ph"] <- "noTide_pH"
names(elkap_WTdat15_2_first)[names(elkap_WTdat15_2_first) == "elkap_Filt2_15_temp_first"] <- "noTide_Temp"
names(elkap_DOdat15_2_first)[names(elkap_DOdat15_2_first) == "elkap_Filt2_15_do_first"] <- "noTide_DO"
names(elkap_PHdat15_2_first)[names(elkap_PHdat15_2_first) == "elkap_Filt2_15_ph_first"] <- "noTide_pH"
names(elkap_WTdat30_2)[names(elkap_WTdat30_2) == "elkap_Filt2_30_temp"] <- "noTide_Temp"
names(elkap_DOdat30_2)[names(elkap_DOdat30_2) == "elkap_Filt2_30_do"] <- "noTide_DO"
names(elkap_PHdat30_2)[names(elkap_PHdat30_2) == "elkap_Filt2_30_ph"] <- "noTide_pH"
names(elkap_WTdat15_2_second)[names(elkap_WTdat15_2_second) == "elkap_Filt2_15_temp_second"] <- "noTide_Temp"
names(elkap_DOdat15_2_second)[names(elkap_DOdat15_2_second) == "elkap_Filt2_15_do_second"] <- "noTide_DO"
names(elkap_PHdat15_2_second)[names(elkap_PHdat15_2_second) == "elkap_Filt2_15_ph_second"] <- "noTide_pH"
names(elksm_WTdat15_2_first)[names(elksm_WTdat15_2_first) == "elksm_Filt2_15_temp_first"] <- "noTide_Temp"
names(elksm_DOdat15_2_first)[names(elksm_DOdat15_2_first) == "elksm_Filt2_15_do_first"] <- "noTide_DO"
names(elksm_PHdat15_2_first)[names(elksm_PHdat15_2_first) == "elksm_Filt2_15_ph_first"] <- "noTide_pH"
names(elksm_WTdat30_2)[names(elksm_WTdat30_2) == "elksm_Filt2_30_temp"] <- "noTide_Temp"
names(elksm_DOdat30_2)[names(elksm_DOdat30_2) == "elksm_Filt2_30_do"] <- "noTide_DO"
names(elksm_PHdat30_2)[names(elksm_PHdat30_2) == "elksm_Filt2_30_ph"] <- "noTide_pH"
names(elksm_WTdat15_2_second)[names(elksm_WTdat15_2_second) == "elksm_Filt2_15_temp_second"] <- "noTide_Temp"
names(elksm_DOdat15_2_second)[names(elksm_DOdat15_2_second) == "elksm_Filt2_15_do_second"] <- "noTide_DO"
names(elksm_PHdat15_2_second)[names(elksm_PHdat15_2_second) == "elksm_Filt2_15_ph_second"] <- "noTide_pH"
names(grbgb_WTdat30_2)[names(grbgb_WTdat30_2) == "grbgb_Filt2_30_temp"] <- "noTide_Temp"
names(grbgb_WTdat15_2)[names(grbgb_WTdat15_2) == "grbgb_Filt2_15_temp"] <- "noTide_Temp"
names(grbgb_DOdat30_2)[names(grbgb_DOdat30_2) == "grbgb_Filt2_30_do"] <- "noTide_DO"
names(grbgb_DOdat15_2)[names(grbgb_DOdat15_2) == "grbgb_Filt2_15_do"] <- "noTide_DO"
names(grbgb_PHdat30_2)[names(grbgb_PHdat30_2) == "grbgb_Filt2_30_ph"] <- "noTide_pH"
names(grbgb_PHdat15_2)[names(grbgb_PHdat15_2) == "grbgb_Filt2_15_ph"] <- "noTide_pH"
names(hudsk_WTdat30_2)[names(hudsk_WTdat30_2) == "hudsk_Filt2_30_temp"] <- "noTide_Temp"
names(hudsk_WTdat15_2)[names(hudsk_WTdat15_2) == "hudsk_Filt2_15_temp"] <- "noTide_Temp"
names(hudsk_DOdat30_2)[names(hudsk_DOdat30_2) == "hudsk_Filt2_30_do"] <- "noTide_DO"
names(hudsk_DOdat15_2)[names(hudsk_DOdat15_2) == "hudsk_Filt2_15_do"] <- "noTide_DO"
names(hudsk_PHdat30_2)[names(hudsk_PHdat30_2) == "hudsk_Filt2_30_ph"] <- "noTide_pH"
names(hudsk_PHdat15_2)[names(hudsk_PHdat15_2) == "hudsk_Filt2_15_ph"] <- "noTide_pH"
names(hudts_WTdat30_2)[names(hudts_WTdat30_2) == "hudts_Filt2_30_temp"] <- "noTide_Temp"
names(hudts_WTdat15_2)[names(hudts_WTdat15_2) == "hudts_Filt2_15_temp"] <- "noTide_Temp"
names(hudts_DOdat30_2)[names(hudts_DOdat30_2) == "hudts_Filt2_30_do"] <- "noTide_DO"
names(hudts_DOdat15_2)[names(hudts_DOdat15_2) == "hudts_Filt2_15_do"] <- "noTide_DO"
names(hudts_PHdat30_2)[names(hudts_PHdat30_2) == "hudts_Filt2_30_ph"] <- "noTide_pH"
names(hudts_PHdat15_2)[names(hudts_PHdat15_2) == "hudts_Filt2_15_ph"] <- "noTide_pH"
names(job09_WTdat30_2)[names(job09_WTdat30_2) == "job09_Filt2_30_temp"] <- "noTide_Temp"
names(job09_WTdat15_2)[names(job09_WTdat15_2) == "job09_Filt2_15_temp"] <- "noTide_Temp"
names(job09_DOdat30_2)[names(job09_DOdat30_2) == "job09_Filt2_30_do"] <- "noTide_DO"
names(job09_DOdat15_2)[names(job09_DOdat15_2) == "job09_Filt2_15_do"] <- "noTide_DO"
names(job09_PHdat30_2)[names(job09_PHdat30_2) == "job09_Filt2_30_ph"] <- "noTide_pH"
names(job09_PHdat15_2)[names(job09_PHdat15_2) == "job09_Filt2_15_ph"] <- "noTide_pH"
names(narpc_WTdat30_2)[names(narpc_WTdat30_2) == "narpc_Filt2_30_temp"] <- "noTide_Temp"
names(narpc_WTdat15_2)[names(narpc_WTdat15_2) == "narpc_Filt2_15_temp"] <- "noTide_Temp"
names(narpc_DOdat30_2)[names(narpc_DOdat30_2) == "narpc_Filt2_30_do"] <- "noTide_DO"
names(narpc_DOdat15_2)[names(narpc_DOdat15_2) == "narpc_Filt2_15_do"] <- "noTide_DO"
names(narpc_PHdat30_2)[names(narpc_PHdat30_2) == "narpc_Filt2_30_ph"] <- "noTide_pH"
names(narpc_PHdat15_2)[names(narpc_PHdat15_2) == "narpc_Filt2_15_ph"] <- "noTide_pH"
names(nocec_WTdat30_2)[names(nocec_WTdat30_2) == "nocec_Filt2_30_temp"] <- "noTide_Temp"
names(nocec_WTdat15_2)[names(nocec_WTdat15_2) == "nocec_Filt2_15_temp"] <- "noTide_Temp"
names(nocec_DOdat30_2)[names(nocec_DOdat30_2) == "nocec_Filt2_30_do"] <- "noTide_DO"
names(nocec_DOdat15_2)[names(nocec_DOdat15_2) == "nocec_Filt2_15_do"] <- "noTide_DO"
names(nocec_PHdat30_2)[names(nocec_PHdat30_2) == "nocec_Filt2_30_ph"] <- "noTide_pH"
names(nocec_PHdat15_2)[names(nocec_PHdat15_2) == "nocec_Filt2_15_ph"] <- "noTide_pH"
names(nocrc_WTdat30_2)[names(nocrc_WTdat30_2) == "nocrc_Filt2_30_temp"] <- "noTide_Temp"
names(nocrc_WTdat15_2)[names(nocrc_WTdat15_2) == "nocrc_Filt2_15_temp"] <- "noTide_Temp"
names(nocrc_DOdat30_2)[names(nocrc_DOdat30_2) == "nocrc_Filt2_30_do"] <- "noTide_DO"
names(nocrc_DOdat15_2)[names(nocrc_DOdat15_2) == "nocrc_Filt2_15_do"] <- "noTide_DO"
names(nocrc_PHdat30_2)[names(nocrc_PHdat30_2) == "nocrc_Filt2_30_ph"] <- "noTide_pH"
names(nocrc_PHdat15_2)[names(nocrc_PHdat15_2) == "nocrc_Filt2_15_ph"] <- "noTide_pH"
names(pdbby_WTdat30_2)[names(pdbby_WTdat30_2) == "pdbby_Filt2_30_temp"] <- "noTide_Temp"
names(pdbby_WTdat15_2)[names(pdbby_WTdat15_2) == "pdbby_Filt2_15_temp"] <- "noTide_Temp"
names(pdbby_DOdat30_2)[names(pdbby_DOdat30_2) == "pdbby_Filt2_30_do"] <- "noTide_DO"
names(pdbby_DOdat15_2)[names(pdbby_DOdat15_2) == "pdbby_Filt2_15_do"] <- "noTide_DO"
names(pdbby_PHdat30_2)[names(pdbby_PHdat30_2) == "pdbby_Filt2_30_ph"] <- "noTide_pH"
names(pdbby_PHdat15_2)[names(pdbby_PHdat15_2) == "pdbby_Filt2_15_ph"] <- "noTide_pH"
names(welin_WTdat30_2)[names(welin_WTdat30_2) == "welin_Filt2_30_temp"] <- "noTide_Temp"
names(welin_WTdat15_2)[names(welin_WTdat15_2) == "welin_Filt2_15_temp"] <- "noTide_Temp"
names(welin_DOdat30_2)[names(welin_DOdat30_2) == "welin_Filt2_30_do"] <- "noTide_DO"
names(welin_DOdat15_2)[names(welin_DOdat15_2) == "welin_Filt2_15_do"] <- "noTide_DO"
names(welin_PHdat30_2)[names(welin_PHdat30_2) == "welin_Filt2_30_ph"] <- "noTide_pH"
names(welin_PHdat15_2)[names(welin_PHdat15_2) == "welin_Filt2_15_ph"] <- "noTide_pH"

acesp_WTdat30_2$date <- acesp_time30
acesp_WTdat15_2$date <- acesp_time15
acesp_DOdat30_2$date <- acesp_time30
acesp_DOdat15_2$date <- acesp_time15
acesp_PHdat30_2$date <- acesp_time30
acesp_PHdat15_2$date <- acesp_time15
apaeb_WTdat30_2$date <- apaeb_time30
apaeb_WTdat15_2$date <- apaeb_time15
apaeb_DOdat30_2$date <- apaeb_time30_DO
apaeb_DOdat15_2$date <- apaeb_time15
apaeb_PHdat30_2$date <- apaeb_time30
apaeb_PHdat15_2$date <- apaeb_time15
apaes_WTdat30_2$date <- apaes_time30
apaes_WTdat15_2$date <- apaes_time15
apaes_DOdat30_2$date <- apaes_time30
apaes_DOdat15_2$date <- apaes_time15
apaes_PHdat30_2$date <- apaes_time30_PH
apaes_PHdat15_2$date <- apaes_time15
cbvtc_WTdat15_2$date <- cbvtc_time15
cbvtc_DOdat15_2$date <- cbvtc_time15
cbvtc_PHdat15_2$date <- cbvtc_time15
delbl_WTdat30_2$date <- delbl_time30
delbl_WTdat15_2$date <- delbl_time15
delbl_DOdat30_2$date <- delbl_time30
delbl_DOdat15_2$date <- delbl_time15
delbl_PHdat30_2$date <- delbl_time30
delbl_PHdat15_2$date <- delbl_time15
delsl_WTdat30_2$date <- delsl_time30
delsl_WTdat15_2$date <- delsl_time15
delsl_DOdat30_2$date <- delsl_time30_DO
delsl_DOdat15_2$date <- delsl_time15
delsl_PHdat30_2$date <- delsl_time30
delsl_PHdat15_2$date <- delsl_time15
elkap_WTdat30_2$date <- elkap_time30
elkap_DOdat30_2$date <- elkap_time30
elkap_PHdat30_2$date <- elkap_time30
elkap_WTdat15_2_first$date <- elkap_time15_first
elkap_DOdat15_2_first$date <- elkap_time15_first
elkap_PHdat15_2_first$date <- elkap_time15_first
elkap_WTdat15_2_second$date <- elkap_time15_second
elkap_DOdat15_2_second$date <- elkap_time15_second
elkap_PHdat15_2_second$date <- elkap_time15_second_ph
elksm_WTdat30_2$date <- elksm_time30
elksm_DOdat30_2$date <- elksm_time30
elksm_PHdat30_2$date <- elksm_time30
elksm_WTdat15_2_first$date <- elksm_time15_first
elksm_DOdat15_2_first$date <- elksm_time15_first_do
elksm_PHdat15_2_first$date <- elksm_time15_first
elksm_WTdat15_2_second$date <- elksm_time15_second
elksm_DOdat15_2_second$date <- elksm_time15_second
elksm_PHdat15_2_second$date <- elksm_time15_second
grbgb_WTdat30_2$date <- grbgb_time30
grbgb_WTdat15_2$date <- grbgb_time15
grbgb_DOdat30_2$date <- grbgb_time30
grbgb_DOdat15_2$date <- grbgb_time15
grbgb_PHdat30_2$date <- grbgb_time30
grbgb_PHdat15_2$date <- grbgb_time15
hudsk_WTdat30_2$date <- hudsk_time30
hudsk_WTdat15_2$date <- hudsk_time15
hudsk_DOdat30_2$date <- hudsk_time30
hudsk_DOdat15_2$date <- hudsk_time15
hudsk_PHdat30_2$date <- hudsk_time30
hudsk_PHdat15_2$date <- hudsk_time15
hudts_WTdat30_2$date <- hudts_time30
hudts_WTdat15_2$date <- hudts_time15
hudts_DOdat30_2$date <- hudts_time30
hudts_DOdat15_2$date <- hudts_time15
hudts_PHdat30_2$date <- hudts_time30
hudts_PHdat15_2$date <- hudts_time15
job09_WTdat30_2$date <- job09_time30
job09_WTdat15_2$date <- job09_time15
job09_DOdat30_2$date <- job09_time30
job09_DOdat15_2$date <- job09_time15
job09_PHdat30_2$date <- job09_time30
job09_PHdat15_2$date <- job09_time15
narpc_WTdat30_2$date <- narpc_time30
narpc_WTdat15_2$date <- narpc_time15
narpc_DOdat30_2$date <- narpc_time30
narpc_DOdat15_2$date <- narpc_time15
narpc_PHdat30_2$date <- narpc_time30
narpc_PHdat15_2$date <- narpc_time15
nocec_WTdat30_2$date <- nocec_time30
nocec_WTdat15_2$date <- nocec_time15
nocec_DOdat30_2$date <- nocec_time30
nocec_DOdat15_2$date <- nocec_time15
nocec_PHdat30_2$date <- nocec_time30
nocec_PHdat15_2$date <- nocec_time15
nocrc_WTdat30_2$date <- nocrc_time30
nocrc_WTdat15_2$date <- nocrc_time15
nocrc_DOdat30_2$date <- nocrc_time30
nocrc_DOdat15_2$date <- nocrc_time15
nocrc_PHdat30_2$date <- nocrc_time30
nocrc_PHdat15_2$date <- nocrc_time15
pdbby_WTdat30_2$date <- pdbby_time30
pdbby_WTdat15_2$date <- pdbby_time15
pdbby_DOdat30_2$date <- pdbby_time30
pdbby_DOdat15_2$date <- pdbby_time15
pdbby_PHdat30_2$date <- pdbby_time30
pdbby_PHdat15_2$date <- pdbby_time15
welin_WTdat30_2$date <- welin_time30
welin_WTdat15_2$date <- welin_time15
welin_DOdat30_2$date <- welin_time30
welin_DOdat15_2$date <- welin_time15
welin_PHdat30_2$date <- welin_time30
welin_PHdat15_2$date <- welin_time15

acesp_WTdat30_2$noTide_corTemp <- acesp_WTdat30_2$noTide_Temp + mean(acesp_dat30$Temp, na.rm = TRUE)
acesp_WTdat15_2$noTide_corTemp <- acesp_WTdat15_2$noTide_Temp + mean(acesp_dat15$Temp, na.rm = TRUE)
acesp_DOdat30_2$noTide_corDO <- acesp_DOdat30_2$noTide_DO + mean(acesp_dat30$DO_mgl, na.rm = TRUE)
acesp_DOdat15_2$noTide_corDO <- acesp_DOdat15_2$noTide_DO + mean(acesp_dat15$DO_mgl, na.rm = TRUE)
acesp_PHdat30_2$noTide_corPH <- acesp_PHdat30_2$noTide_pH + mean(acesp_dat30$pH, na.rm = TRUE)
acesp_PHdat15_2$noTide_corPH <- acesp_PHdat15_2$noTide_pH + mean(acesp_dat15$pH, na.rm = TRUE)
apaeb_WTdat30_2$noTide_corTemp <- apaeb_WTdat30_2$noTide_Temp + mean(apaeb_dat30$Temp, na.rm = TRUE)
apaeb_WTdat15_2$noTide_corTemp <- apaeb_WTdat15_2$noTide_Temp + mean(apaeb_dat15$Temp, na.rm = TRUE)
apaeb_DOdat30_2$noTide_corDO <- apaeb_DOdat30_2$noTide_DO + mean(apaeb_dat30$DO_mgl, na.rm = TRUE)
apaeb_DOdat15_2$noTide_corDO <- apaeb_DOdat15_2$noTide_DO + mean(apaeb_dat15$DO_mgl, na.rm = TRUE)
apaeb_PHdat30_2$noTide_corPH <- apaeb_PHdat30_2$noTide_pH + mean(apaeb_dat30$pH, na.rm = TRUE)
apaeb_PHdat15_2$noTide_corPH <- apaeb_PHdat15_2$noTide_pH + mean(apaeb_dat15$pH, na.rm = TRUE)
apaes_WTdat30_2$noTide_corTemp <- apaes_WTdat30_2$noTide_Temp + mean(apaes_dat30$Temp, na.rm = TRUE)
apaes_WTdat15_2$noTide_corTemp <- apaes_WTdat15_2$noTide_Temp + mean(apaes_dat15$Temp, na.rm = TRUE)
apaes_DOdat30_2$noTide_corDO <- apaes_DOdat30_2$noTide_DO + mean(apaes_dat30$DO_mgl, na.rm = TRUE)
apaes_DOdat15_2$noTide_corDO <- apaes_DOdat15_2$noTide_DO + mean(apaes_dat15$DO_mgl, na.rm = TRUE)
apaes_PHdat30_2$noTide_corPH <- apaes_PHdat30_2$noTide_pH + mean(apaes_dat30$pH, na.rm = TRUE)
apaes_PHdat15_2$noTide_corPH <- apaes_PHdat15_2$noTide_pH + mean(apaes_dat15$pH, na.rm = TRUE)
cbvtc_WTdat15_2$noTide_corTemp <- cbvtc_WTdat15_2$noTide_Temp + mean(cbvtc_dat15$Temp, na.rm = TRUE)
cbvtc_DOdat15_2$noTide_corDO <- cbvtc_DOdat15_2$noTide_DO + mean(cbvtc_dat15$DO_mgl, na.rm = TRUE)
cbvtc_PHdat15_2$noTide_corPH <- cbvtc_PHdat15_2$noTide_pH + mean(cbvtc_dat15$pH, na.rm = TRUE)
delbl_WTdat30_2$noTide_corTemp <- delbl_WTdat30_2$noTide_Temp + mean(delbl_dat30$Temp, na.rm = TRUE)
delbl_WTdat15_2$noTide_corTemp <- delbl_WTdat15_2$noTide_Temp + mean(delbl_dat15$Temp, na.rm = TRUE)
delbl_DOdat30_2$noTide_corDO <- delbl_DOdat30_2$noTide_DO + mean(delbl_dat30$DO_mgl, na.rm = TRUE)
delbl_DOdat15_2$noTide_corDO <- delbl_DOdat15_2$noTide_DO + mean(delbl_dat15$DO_mgl, na.rm = TRUE)
delbl_PHdat30_2$noTide_corPH <- delbl_PHdat30_2$noTide_pH + mean(delbl_dat30$pH, na.rm = TRUE)
delbl_PHdat15_2$noTide_corPH <- delbl_PHdat15_2$noTide_pH + mean(delbl_dat15$pH, na.rm = TRUE)
delsl_WTdat30_2$noTide_corTemp <- delsl_WTdat30_2$noTide_Temp + mean(delsl_dat30$Temp, na.rm = TRUE)
delsl_WTdat15_2$noTide_corTemp <- delsl_WTdat15_2$noTide_Temp + mean(delsl_dat15$Temp, na.rm = TRUE)
delsl_DOdat30_2$noTide_corDO <- delsl_DOdat30_2$noTide_DO + mean(delsl_dat30$DO_mgl, na.rm = TRUE)
delsl_DOdat15_2$noTide_corDO <- delsl_DOdat15_2$noTide_DO + mean(delsl_dat15$DO_mgl, na.rm = TRUE)
delsl_PHdat30_2$noTide_corPH <- delsl_PHdat30_2$noTide_pH + mean(delsl_dat30$pH, na.rm = TRUE)
delsl_PHdat15_2$noTide_corPH <- delsl_PHdat15_2$noTide_pH + mean(delsl_dat15$pH, na.rm = TRUE)
elkap_WTdat15_2_first$noTide_corTemp <- elkap_WTdat15_2_first$noTide_Temp + mean(elkap_dat15_first$Temp, na.rm = TRUE)
elkap_DOdat15_2_first$noTide_corDO <- elkap_DOdat15_2_first$noTide_DO + mean(elkap_dat15_first$DO_mgl, na.rm = TRUE)
elkap_PHdat15_2_first$noTide_corPH <- elkap_PHdat15_2_first$noTide_pH + mean(elkap_dat15_first$pH, na.rm = TRUE)
elkap_WTdat30_2$noTide_corTemp <- elkap_WTdat30_2$noTide_Temp + mean(elkap_dat30$Temp, na.rm = TRUE)
elkap_DOdat30_2$noTide_corDO <- elkap_DOdat30_2$noTide_DO + mean(elkap_dat30$DO_mgl, na.rm = TRUE)
elkap_PHdat30_2$noTide_corPH <- elkap_PHdat30_2$noTide_pH + mean(elkap_dat30$pH, na.rm = TRUE)
elkap_WTdat15_2_second$noTide_corTemp <- elkap_WTdat15_2_second$noTide_Temp + mean(elkap_dat15_second$Temp, na.rm = TRUE)
elkap_DOdat15_2_second$noTide_corDO <- elkap_DOdat15_2_second$noTide_DO + mean(elkap_dat15_second$DO_mgl, na.rm = TRUE)
elkap_PHdat15_2_second$noTide_corPH <- elkap_PHdat15_2_second$noTide_pH + mean(elkap_dat15_second$pH, na.rm = TRUE)
elksm_WTdat15_2_first$noTide_corTemp <- elksm_WTdat15_2_first$noTide_Temp + mean(elksm_dat15_first$Temp, na.rm = TRUE)
elksm_DOdat15_2_first$noTide_corDO <- elksm_DOdat15_2_first$noTide_DO + mean(elksm_dat15_first$DO_mgl, na.rm = TRUE)
elksm_PHdat15_2_first$noTide_corPH <- elksm_PHdat15_2_first$noTide_pH + mean(elksm_dat15_first$pH, na.rm = TRUE)
elksm_WTdat30_2$noTide_corTemp <- elksm_WTdat30_2$noTide_Temp + mean(elksm_dat30$Temp, na.rm = TRUE)
elksm_DOdat30_2$noTide_corDO <- elksm_DOdat30_2$noTide_DO + mean(elksm_dat30$DO_mgl, na.rm = TRUE)
elksm_PHdat30_2$noTide_corPH <- elksm_PHdat30_2$noTide_pH + mean(elksm_dat30$pH, na.rm = TRUE)
elksm_WTdat15_2_second$noTide_corTemp <- elksm_WTdat15_2_second$noTide_Temp + mean(elksm_dat15_second$Temp, na.rm = TRUE)
elksm_DOdat15_2_second$noTide_corDO <- elksm_DOdat15_2_second$noTide_DO + mean(elksm_dat15_second$DO_mgl, na.rm = TRUE)
elksm_PHdat15_2_second$noTide_corPH <- elksm_PHdat15_2_second$noTide_pH + mean(elksm_dat15_second$pH, na.rm = TRUE)
grbgb_WTdat30_2$noTide_corTemp <- grbgb_WTdat30_2$noTide_Temp + mean(grbgb_dat30$Temp, na.rm = TRUE)
grbgb_WTdat15_2$noTide_corTemp <- grbgb_WTdat15_2$noTide_Temp + mean(grbgb_dat15$Temp, na.rm = TRUE)
grbgb_DOdat30_2$noTide_corDO <- grbgb_DOdat30_2$noTide_DO + mean(grbgb_dat30$DO_mgl, na.rm = TRUE)
grbgb_DOdat15_2$noTide_corDO <- grbgb_DOdat15_2$noTide_DO + mean(grbgb_dat15$DO_mgl, na.rm = TRUE)
grbgb_PHdat30_2$noTide_corPH <- grbgb_PHdat30_2$noTide_pH + mean(grbgb_dat30$pH, na.rm = TRUE)
grbgb_PHdat15_2$noTide_corPH <- grbgb_PHdat15_2$noTide_pH + mean(grbgb_dat15$pH, na.rm = TRUE)
hudsk_WTdat30_2$noTide_corTemp <- hudsk_WTdat30_2$noTide_Temp + mean(hudsk_dat30$Temp, na.rm = TRUE)
hudsk_WTdat15_2$noTide_corTemp <- hudsk_WTdat15_2$noTide_Temp + mean(hudsk_dat15$Temp, na.rm = TRUE)
hudsk_DOdat30_2$noTide_corDO <- hudsk_DOdat30_2$noTide_DO + mean(hudsk_dat30$DO_mgl, na.rm = TRUE)
hudsk_DOdat15_2$noTide_corDO <- hudsk_DOdat15_2$noTide_DO + mean(hudsk_dat15$DO_mgl, na.rm = TRUE)
hudsk_PHdat30_2$noTide_corPH <- hudsk_PHdat30_2$noTide_pH + mean(hudsk_dat30$pH, na.rm = TRUE)
hudsk_PHdat15_2$noTide_corPH <- hudsk_PHdat15_2$noTide_pH + mean(hudsk_dat15$pH, na.rm = TRUE)
hudts_WTdat30_2$noTide_corTemp <- hudts_WTdat30_2$noTide_Temp + mean(hudts_dat30$Temp, na.rm = TRUE)
hudts_WTdat15_2$noTide_corTemp <- hudts_WTdat15_2$noTide_Temp + mean(hudts_dat15$Temp, na.rm = TRUE)
hudts_DOdat30_2$noTide_corDO <- hudts_DOdat30_2$noTide_DO + mean(hudts_dat30$DO_mgl, na.rm = TRUE)
hudts_DOdat15_2$noTide_corDO <- hudts_DOdat15_2$noTide_DO + mean(hudts_dat15$DO_mgl, na.rm = TRUE)
hudts_PHdat30_2$noTide_corPH <- hudts_PHdat30_2$noTide_pH + mean(hudts_dat30$pH, na.rm = TRUE)
hudts_PHdat15_2$noTide_corPH <- hudts_PHdat15_2$noTide_pH + mean(hudts_dat15$pH, na.rm = TRUE)
job09_WTdat30_2$noTide_corTemp <- job09_WTdat30_2$noTide_Temp + mean(job09_dat30$Temp, na.rm = TRUE)
job09_WTdat15_2$noTide_corTemp <- job09_WTdat15_2$noTide_Temp + mean(job09_dat15$Temp, na.rm = TRUE)
job09_DOdat30_2$noTide_corDO <- job09_DOdat30_2$noTide_DO + mean(job09_dat30$DO_mgl, na.rm = TRUE)
job09_DOdat15_2$noTide_corDO <- job09_DOdat15_2$noTide_DO + mean(job09_dat15$DO_mgl, na.rm = TRUE)
job09_PHdat30_2$noTide_corPH <- job09_PHdat30_2$noTide_pH + mean(job09_dat30$pH, na.rm = TRUE)
job09_PHdat15_2$noTide_corPH <- job09_PHdat15_2$noTide_pH + mean(job09_dat15$pH, na.rm = TRUE)
narpc_WTdat30_2$noTide_corTemp <- narpc_WTdat30_2$noTide_Temp + mean(narpc_dat30$Temp, na.rm = TRUE)
narpc_WTdat15_2$noTide_corTemp <- narpc_WTdat15_2$noTide_Temp + mean(narpc_dat15$Temp, na.rm = TRUE)
narpc_DOdat30_2$noTide_corDO <- narpc_DOdat30_2$noTide_DO + mean(narpc_dat30$DO_mgl, na.rm = TRUE)
narpc_DOdat15_2$noTide_corDO <- narpc_DOdat15_2$noTide_DO + mean(narpc_dat15$DO_mgl, na.rm = TRUE)
narpc_PHdat30_2$noTide_corPH <- narpc_PHdat30_2$noTide_pH + mean(narpc_dat30$pH, na.rm = TRUE)
narpc_PHdat15_2$noTide_corPH <- narpc_PHdat15_2$noTide_pH + mean(narpc_dat15$pH, na.rm = TRUE)
nocec_WTdat30_2$noTide_corTemp <- nocec_WTdat30_2$noTide_Temp + mean(nocec_dat30$Temp, na.rm = TRUE)
nocec_WTdat15_2$noTide_corTemp <- nocec_WTdat15_2$noTide_Temp + mean(nocec_dat15$Temp, na.rm = TRUE)
nocec_DOdat30_2$noTide_corDO <- nocec_DOdat30_2$noTide_DO + mean(nocec_dat30$DO_mgl, na.rm = TRUE)
nocec_DOdat15_2$noTide_corDO <- nocec_DOdat15_2$noTide_DO + mean(nocec_dat15$DO_mgl, na.rm = TRUE)
nocec_PHdat30_2$noTide_corPH <- nocec_PHdat30_2$noTide_pH + mean(nocec_dat30$pH, na.rm = TRUE)
nocec_PHdat15_2$noTide_corPH <- nocec_PHdat15_2$noTide_pH + mean(nocec_dat15$pH, na.rm = TRUE)
nocrc_WTdat30_2$noTide_corTemp <- nocrc_WTdat30_2$noTide_Temp + mean(nocrc_dat30$Temp, na.rm = TRUE)
nocrc_WTdat15_2$noTide_corTemp <- nocrc_WTdat15_2$noTide_Temp + mean(nocrc_dat15$Temp, na.rm = TRUE)
nocrc_DOdat30_2$noTide_corDO <- nocrc_DOdat30_2$noTide_DO + mean(nocrc_dat30$DO_mgl, na.rm = TRUE)
nocrc_DOdat15_2$noTide_corDO <- nocrc_DOdat15_2$noTide_DO + mean(nocrc_dat15$DO_mgl, na.rm = TRUE)
nocrc_PHdat30_2$noTide_corPH <- nocrc_PHdat30_2$noTide_pH + mean(nocrc_dat30$pH, na.rm = TRUE)
nocrc_PHdat15_2$noTide_corPH <- nocrc_PHdat15_2$noTide_pH + mean(nocrc_dat15$pH, na.rm = TRUE)
pdbby_WTdat30_2$noTide_corTemp <- pdbby_WTdat30_2$noTide_Temp + mean(pdbby_dat30$Temp, na.rm = TRUE)
pdbby_WTdat15_2$noTide_corTemp <- pdbby_WTdat15_2$noTide_Temp + mean(pdbby_dat15$Temp, na.rm = TRUE)
pdbby_DOdat30_2$noTide_corDO <- pdbby_DOdat30_2$noTide_DO + mean(pdbby_dat30$DO_mgl, na.rm = TRUE)
pdbby_DOdat15_2$noTide_corDO <- pdbby_DOdat15_2$noTide_DO + mean(pdbby_dat15$DO_mgl, na.rm = TRUE)
pdbby_PHdat30_2$noTide_corPH <- pdbby_PHdat30_2$noTide_pH + mean(pdbby_dat30$pH, na.rm = TRUE)
pdbby_PHdat15_2$noTide_corPH <- pdbby_PHdat15_2$noTide_pH + mean(pdbby_dat15$pH, na.rm = TRUE)
welin_WTdat30_2$noTide_corTemp <- welin_WTdat30_2$noTide_Temp + mean(welin_dat30$Temp, na.rm = TRUE)
welin_WTdat15_2$noTide_corTemp <- welin_WTdat15_2$noTide_Temp + mean(welin_dat15$Temp, na.rm = TRUE)
welin_DOdat30_2$noTide_corDO <- welin_DOdat30_2$noTide_DO + mean(welin_dat30$DO_mgl, na.rm = TRUE)
welin_DOdat15_2$noTide_corDO <- welin_DOdat15_2$noTide_DO + mean(welin_dat15$DO_mgl, na.rm = TRUE)
welin_PHdat30_2$noTide_corPH <- welin_PHdat30_2$noTide_pH + mean(welin_dat30$pH, na.rm = TRUE)
welin_PHdat15_2$noTide_corPH <- welin_PHdat15_2$noTide_pH + mean(welin_dat15$pH, na.rm = TRUE)

acesp_WTdat30_2$obsTemp <- acesp_Wtemp30
acesp_WTdat15_2$obsTemp <- acesp_Wtemp15
acesp_DOdat30_2$obsDO <- acesp_DO30
acesp_DOdat15_2$obsDO <- acesp_DO15
acesp_PHdat30_2$obsPH <- acesp_PH30
acesp_PHdat15_2$obsPH <- acesp_PH15
acesp_PHdat30_2$obsPH <- as.numeric(acesp_PHdat30_2$obsPH)
acesp_PHdat15_2$obsPH <- as.numeric(acesp_PHdat15_2$obsPH)
apaeb_WTdat30_2$obsTemp <- apaeb_Wtemp30
apaeb_WTdat15_2$obsTemp <- apaeb_Wtemp15
apaeb_DOdat30_2$obsDO <- apaeb_DO30
apaeb_DOdat15_2$obsDO <- apaeb_DO15
apaeb_PHdat30_2$obsPH <- apaeb_PH30
apaeb_PHdat15_2$obsPH <- apaeb_PH15
apaeb_PHdat30_2$obsPH <- as.numeric(apaeb_PHdat30_2$obsPH)
apaeb_PHdat15_2$obsPH <- as.numeric(apaeb_PHdat15_2$obsPH)
apaes_WTdat30_2$obsTemp <- apaes_Wtemp30
apaes_WTdat15_2$obsTemp <- apaes_Wtemp15
apaes_DOdat30_2$obsDO <- apaes_DO30
apaes_DOdat15_2$obsDO <- apaes_DO15
apaes_PHdat30_2$obsPH <- apaes_PH30
apaes_PHdat15_2$obsPH <- apaes_PH15
apaes_PHdat30_2$obsPH <- as.numeric(apaes_PHdat30_2$obsPH)
apaes_PHdat15_2$obsPH <- as.numeric(apaes_PHdat15_2$obsPH)
cbvtc_WTdat15_2$obsTemp <- cbvtc_Wtemp15
cbvtc_DOdat15_2$obsDO <- cbvtc_DO15
cbvtc_PHdat15_2$obsPH <- cbvtc_PH15
cbvtc_PHdat15_2$obsPH <- as.numeric(cbvtc_PHdat15_2$obsPH)
delbl_WTdat30_2$obsTemp <- delbl_Wtemp30
delbl_WTdat15_2$obsTemp <- delbl_Wtemp15
delbl_DOdat30_2$obsDO <- delbl_DO30
delbl_DOdat15_2$obsDO <- delbl_DO15
delbl_PHdat30_2$obsPH <- delbl_PH30
delbl_PHdat15_2$obsPH <- delbl_PH15
delbl_PHdat30_2$obsPH <- as.numeric(delbl_PHdat30_2$obsPH)
delbl_PHdat15_2$obsPH <- as.numeric(delbl_PHdat15_2$obsPH)
delsl_WTdat30_2$obsTemp <- delsl_Wtemp30
delsl_WTdat15_2$obsTemp <- delsl_Wtemp15
delsl_DOdat30_2$obsDO <- delsl_DO30
delsl_DOdat15_2$obsDO <- delsl_DO15
delsl_PHdat30_2$obsPH <- delsl_PH30
delsl_PHdat15_2$obsPH <- delsl_PH15
delsl_PHdat30_2$obsPH <- as.numeric(delsl_PHdat30_2$obsPH)
delsl_PHdat15_2$obsPH <- as.numeric(delsl_PHdat15_2$obsPH)
elkap_WTdat15_2_first$obsTemp <- elkap_Wtemp15_first
elkap_DOdat15_2_first$obsDO <- elkap_DO15_first
elkap_PHdat15_2_first$obsPH <- elkap_PH15_first
elkap_WTdat30_2$obsTemp <- elkap_Wtemp30
elkap_DOdat30_2$obsDO <- elkap_DO30
elkap_PHdat30_2$obsPH <- elkap_PH30
elkap_WTdat15_2_second$obsTemp <- elkap_Wtemp15_second
elkap_DOdat15_2_second$obsDO <- elkap_DO15_second
elkap_PHdat15_2_second$obsPH <- elkap_PH15_second
elkap_PHdat15_2_first$obsPH <- as.numeric(elkap_PHdat15_2_first$obsPH)
elkap_PHdat30_2$obsPH <- as.numeric(elkap_PHdat30_2$obsPH)
elkap_PHdat15_2_second$obsPH <- as.numeric(elkap_PHdat15_2_second$obsPH)
elksm_WTdat15_2_first$obsTemp <- elksm_Wtemp15_first
elksm_DOdat15_2_first$obsDO <- elksm_DO15_first
elksm_PHdat15_2_first$obsPH <- elksm_PH15_first
elksm_WTdat30_2$obsTemp <- elksm_Wtemp30
elksm_DOdat30_2$obsDO <- elksm_DO30
elksm_PHdat30_2$obsPH <- elksm_PH30
elksm_WTdat15_2_second$obsTemp <- elksm_Wtemp15_second
elksm_DOdat15_2_second$obsDO <- elksm_DO15_second
elksm_PHdat15_2_second$obsPH <- elksm_PH15_second
elksm_PHdat15_2_first$obsPH <- as.numeric(elksm_PHdat15_2_first$obsPH)
elksm_PHdat30_2$obsPH <- as.numeric(elksm_PHdat30_2$obsPH)
elksm_PHdat15_2_second$obsPH <- as.numeric(elksm_PHdat15_2_second$obsPH)
grbgb_WTdat30_2$obsTemp <- grbgb_Wtemp30
grbgb_WTdat15_2$obsTemp <- grbgb_Wtemp15
grbgb_DOdat30_2$obsDO <- grbgb_DO30
grbgb_DOdat15_2$obsDO <- grbgb_DO15
grbgb_PHdat30_2$obsPH <- grbgb_PH30
grbgb_PHdat15_2$obsPH <- grbgb_PH15
grbgb_PHdat30_2$obsPH <- as.numeric(grbgb_PHdat30_2$obsPH)
grbgb_PHdat15_2$obsPH <- as.numeric(grbgb_PHdat15_2$obsPH)
hudsk_WTdat30_2$obsTemp <- hudsk_Wtemp30
hudsk_WTdat15_2$obsTemp <- hudsk_Wtemp15
hudsk_DOdat30_2$obsDO <- hudsk_DO30
hudsk_DOdat15_2$obsDO <- hudsk_DO15
hudsk_PHdat30_2$obsPH <- hudsk_PH30
hudsk_PHdat15_2$obsPH <- hudsk_PH15
hudsk_PHdat30_2$obsPH <- as.numeric(hudsk_PHdat30_2$obsPH)
hudsk_PHdat15_2$obsPH <- as.numeric(hudsk_PHdat15_2$obsPH)
hudts_WTdat30_2$obsTemp <- hudts_Wtemp30
hudts_WTdat15_2$obsTemp <- hudts_Wtemp15
hudts_DOdat30_2$obsDO <- hudts_DO30
hudts_DOdat15_2$obsDO <- hudts_DO15
hudts_PHdat30_2$obsPH <- hudts_PH30
hudts_PHdat15_2$obsPH <- hudts_PH15
hudts_PHdat30_2$obsPH <- as.numeric(hudts_PHdat30_2$obsPH)
hudts_PHdat15_2$obsPH <- as.numeric(hudts_PHdat15_2$obsPH)
job09_WTdat30_2$obsTemp <- job09_Wtemp30
job09_WTdat15_2$obsTemp <- job09_Wtemp15
job09_DOdat30_2$obsDO <- job09_DO30
job09_DOdat15_2$obsDO <- job09_DO15
job09_PHdat30_2$obsPH <- job09_PH30
job09_PHdat15_2$obsPH <- job09_PH15
job09_PHdat30_2$obsPH <- as.numeric(job09_PHdat30_2$obsPH)
job09_PHdat15_2$obsPH <- as.numeric(job09_PHdat15_2$obsPH)
narpc_WTdat30_2$obsTemp <- narpc_Wtemp30
narpc_WTdat15_2$obsTemp <- narpc_Wtemp15
narpc_DOdat30_2$obsDO <- narpc_DO30
narpc_DOdat15_2$obsDO <- narpc_DO15
narpc_PHdat30_2$obsPH <- narpc_PH30
narpc_PHdat15_2$obsPH <- narpc_PH15
narpc_PHdat30_2$obsPH <- as.numeric(narpc_PHdat30_2$obsPH)
narpc_PHdat15_2$obsPH <- as.numeric(narpc_PHdat15_2$obsPH)
nocec_WTdat30_2$obsTemp <- nocec_Wtemp30
nocec_WTdat15_2$obsTemp <- nocec_Wtemp15
nocec_DOdat30_2$obsDO <- nocec_DO30
nocec_DOdat15_2$obsDO <- nocec_DO15
nocec_PHdat30_2$obsPH <- nocec_PH30
nocec_PHdat15_2$obsPH <- nocec_PH15
nocec_PHdat30_2$obsPH <- as.numeric(nocec_PHdat30_2$obsPH)
nocec_PHdat15_2$obsPH <- as.numeric(nocec_PHdat15_2$obsPH)
nocrc_WTdat30_2$obsTemp <- nocrc_Wtemp30
nocrc_WTdat15_2$obsTemp <- nocrc_Wtemp15
nocrc_DOdat30_2$obsDO <- nocrc_DO30
nocrc_DOdat15_2$obsDO <- nocrc_DO15
nocrc_PHdat30_2$obsPH <- nocrc_PH30
nocrc_PHdat15_2$obsPH <- nocrc_PH15
nocrc_PHdat30_2$obsPH <- as.numeric(nocrc_PHdat30_2$obsPH)
nocrc_PHdat15_2$obsPH <- as.numeric(nocrc_PHdat15_2$obsPH)
pdbby_WTdat30_2$obsTemp <- pdbby_Wtemp30
pdbby_WTdat15_2$obsTemp <- pdbby_Wtemp15
pdbby_DOdat30_2$obsDO <- pdbby_DO30
pdbby_DOdat15_2$obsDO <- pdbby_DO15
pdbby_PHdat30_2$obsPH <- pdbby_PH30
pdbby_PHdat15_2$obsPH <- pdbby_PH15
pdbby_PHdat30_2$obsPH <- as.numeric(pdbby_PHdat30_2$obsPH)
pdbby_PHdat15_2$obsPH <- as.numeric(pdbby_PHdat15_2$obsPH)
welin_WTdat30_2$obsTemp <- welin_Wtemp30
welin_WTdat15_2$obsTemp <- welin_Wtemp15
welin_DOdat30_2$obsDO <- welin_DO30
welin_DOdat15_2$obsDO <- welin_DO15
welin_PHdat30_2$obsPH <- welin_PH30
welin_PHdat15_2$obsPH <- welin_PH15
welin_PHdat30_2$obsPH <- as.numeric(welin_PHdat30_2$obsPH)
welin_PHdat15_2$obsPH <- as.numeric(welin_PHdat15_2$obsPH)

rm(list=setdiff(ls(), c("dat", "acesp.hf","acesp_WTdat30_2","acesp_WTdat15_2","acesp_DOdat30_2","acesp_DOdat15_2","acesp_PHdat30_2","acesp_PHdat15_2",
                        "apaeb.hf","apaeb_WTdat30_2","apaeb_WTdat15_2","apaeb_DOdat30_2","apaeb_DOdat15_2","apaeb_PHdat30_2","apaeb_PHdat15_2",
                        "apaes.hf","apaes_WTdat30_2","apaes_WTdat15_2","apaes_DOdat30_2","apaes_DOdat15_2","apaes_PHdat30_2","apaes_PHdat15_2",
                        "cbvtc.hf","cbvtc_WTdat15_2","cbvtc_DOdat15_2","cbvtc_PHdat15_2",
                        "delbl.hf","delbl_WTdat30_2","delbl_WTdat15_2","delbl_DOdat30_2","delbl_DOdat15_2","delbl_PHdat30_2","delbl_PHdat15_2",
                        "delsl.hf","delsl_WTdat30_2","delsl_WTdat15_2","delsl_DOdat30_2","delsl_DOdat15_2","delsl_PHdat30_2","delsl_PHdat15_2",
                        "elkap.hf","elkap_WTdat30_2","elkap_DOdat30_2","elkap_PHdat30_2","elkap_WTdat15_2_first","elkap_DOdat15_2_first","elkap_PHdat15_2_first","elkap_WTdat15_2_second","elkap_DOdat15_2_second","elkap_PHdat15_2_second",
                        "elksm.hf","elksm_WTdat30_2","elksm_DOdat30_2","elksm_PHdat30_2","elksm_WTdat15_2_first","elksm_DOdat15_2_first","elksm_PHdat15_2_first","elksm_WTdat15_2_second","elksm_DOdat15_2_second","elksm_PHdat15_2_second",
                        "grbgb.hf","grbgb_WTdat30_2","grbgb_WTdat15_2","grbgb_DOdat30_2","grbgb_DOdat15_2","grbgb_PHdat30_2","grbgb_PHdat15_2",
                        "hudsk.hf","hudsk_WTdat30_2","hudsk_WTdat15_2","hudsk_DOdat30_2","hudsk_DOdat15_2","hudsk_PHdat30_2","hudsk_PHdat15_2",
                        "hudts.hf","hudts_WTdat30_2","hudts_WTdat15_2","hudts_DOdat30_2","hudts_DOdat15_2","hudts_PHdat30_2","hudts_PHdat15_2",
                        "job09.hf","job09_WTdat30_2","job09_WTdat15_2","job09_DOdat30_2","job09_DOdat15_2","job09_PHdat30_2","job09_PHdat15_2",
                        "narpc.hf","narpc_WTdat30_2","narpc_WTdat15_2","narpc_DOdat30_2","narpc_DOdat15_2","narpc_PHdat30_2","narpc_PHdat15_2",
                        "nocec.hf","nocec_WTdat30_2","nocec_WTdat15_2","nocec_DOdat30_2","nocec_DOdat15_2","nocec_PHdat30_2","nocec_PHdat15_2",
                        "nocrc.hf","nocrc_WTdat30_2","nocrc_WTdat15_2","nocrc_DOdat30_2","nocrc_DOdat15_2","nocrc_PHdat30_2","nocrc_PHdat15_2",
                        "pdbby.hf","pdbby_WTdat30_2","pdbby_WTdat15_2","pdbby_DOdat30_2","pdbby_DOdat15_2","pdbby_PHdat30_2","pdbby_PHdat15_2",
                        "welin.hf","welin_WTdat30_2","welin_WTdat15_2","welin_DOdat30_2","welin_DOdat15_2","welin_PHdat30_2","welin_PHdat15_2")))

#calculate daily averages
acesp_lowpass.WTdailyAVG30 <- timeAverage(mydata = acesp_WTdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
acesp_lowpass.WTdailyAVG15 <- timeAverage(mydata = acesp_WTdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
acesp_lowpass.DOdailyAVG30 <- timeAverage(mydata = acesp_DOdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
acesp_lowpass.DOdailyAVG15 <- timeAverage(mydata = acesp_DOdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
acesp_lowpass.PHdailyAVG30 <- timeAverage(mydata = acesp_PHdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
acesp_lowpass.PHdailyAVG15 <- timeAverage(mydata = acesp_PHdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
apaeb_lowpass.WTdailyAVG30 <- timeAverage(mydata = apaeb_WTdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
apaeb_lowpass.WTdailyAVG15 <- timeAverage(mydata = apaeb_WTdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
apaeb_lowpass.DOdailyAVG30 <- timeAverage(mydata = apaeb_DOdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
apaeb_lowpass.DOdailyAVG15 <- timeAverage(mydata = apaeb_DOdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
apaeb_lowpass.PHdailyAVG30 <- timeAverage(mydata = apaeb_PHdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
apaeb_lowpass.PHdailyAVG15 <- timeAverage(mydata = apaeb_PHdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
apaes_lowpass.WTdailyAVG30 <- timeAverage(mydata = apaes_WTdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
apaes_lowpass.WTdailyAVG15 <- timeAverage(mydata = apaes_WTdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
apaes_lowpass.DOdailyAVG30 <- timeAverage(mydata = apaes_DOdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
apaes_lowpass.DOdailyAVG15 <- timeAverage(mydata = apaes_DOdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
apaes_lowpass.PHdailyAVG30 <- timeAverage(mydata = apaes_PHdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
apaes_lowpass.PHdailyAVG15 <- timeAverage(mydata = apaes_PHdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
cbvtc_lowpass.WTdailyAVG15 <- timeAverage(mydata = cbvtc_WTdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
cbvtc_lowpass.DOdailyAVG15 <- timeAverage(mydata = cbvtc_DOdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
cbvtc_lowpass.PHdailyAVG15 <- timeAverage(mydata = cbvtc_PHdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
delbl_lowpass.WTdailyAVG30 <- timeAverage(mydata = delbl_WTdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
delbl_lowpass.WTdailyAVG15 <- timeAverage(mydata = delbl_WTdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
delbl_lowpass.DOdailyAVG30 <- timeAverage(mydata = delbl_DOdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
delbl_lowpass.DOdailyAVG15 <- timeAverage(mydata = delbl_DOdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
delbl_lowpass.PHdailyAVG30 <- timeAverage(mydata = delbl_PHdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
delbl_lowpass.PHdailyAVG15 <- timeAverage(mydata = delbl_PHdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
delsl_lowpass.WTdailyAVG30 <- timeAverage(mydata = delsl_WTdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
delsl_lowpass.WTdailyAVG15 <- timeAverage(mydata = delsl_WTdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
delsl_lowpass.DOdailyAVG30 <- timeAverage(mydata = delsl_DOdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
delsl_lowpass.DOdailyAVG15 <- timeAverage(mydata = delsl_DOdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
delsl_lowpass.PHdailyAVG30 <- timeAverage(mydata = delsl_PHdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
delsl_lowpass.PHdailyAVG15 <- timeAverage(mydata = delsl_PHdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
elkap_lowpass.WTdailyAVG15_first <- timeAverage(mydata = elkap_WTdat15_2_first,
                                                avg.time = "day",
                                                statistic = "mean",
                                                data.thresh = 75)
elkap_lowpass.DOdailyAVG15_first <- timeAverage(mydata = elkap_DOdat15_2_first,
                                                avg.time = "day",
                                                statistic = "mean",
                                                data.thresh = 75)
elkap_lowpass.PHdailyAVG15_first <- timeAverage(mydata = elkap_PHdat15_2_first,
                                                avg.time = "day",
                                                statistic = "mean",
                                                data.thresh = 75)
elkap_lowpass.WTdailyAVG30 <- timeAverage(mydata = elkap_WTdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
elkap_lowpass.DOdailyAVG30 <- timeAverage(mydata = elkap_DOdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
elkap_lowpass.PHdailyAVG30 <- timeAverage(mydata = elkap_PHdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
elkap_lowpass.WTdailyAVG15_second <- timeAverage(mydata = elkap_WTdat15_2_second,
                                                 avg.time = "day",
                                                 statistic = "mean",
                                                 data.thresh = 75)
elkap_lowpass.DOdailyAVG15_second <- timeAverage(mydata = elkap_DOdat15_2_second,
                                                 avg.time = "day",
                                                 statistic = "mean",
                                                 data.thresh = 75)
elkap_lowpass.PHdailyAVG15_second <- timeAverage(mydata = elkap_PHdat15_2_second,
                                                 avg.time = "day",
                                                 statistic = "mean",
                                                 data.thresh = 75)
elksm_lowpass.WTdailyAVG15_first <- timeAverage(mydata = elksm_WTdat15_2_first,
                                                avg.time = "day",
                                                statistic = "mean",
                                                data.thresh = 75)
elksm_lowpass.DOdailyAVG15_first <- timeAverage(mydata = elksm_DOdat15_2_first,
                                                avg.time = "day",
                                                statistic = "mean",
                                                data.thresh = 75)
elksm_lowpass.PHdailyAVG15_first <- timeAverage(mydata = elksm_PHdat15_2_first,
                                                avg.time = "day",
                                                statistic = "mean",
                                                data.thresh = 75)
elksm_lowpass.WTdailyAVG30 <- timeAverage(mydata = elksm_WTdat30_2,
                                                avg.time = "day",
                                                statistic = "mean",
                                                data.thresh = 75)
elksm_lowpass.DOdailyAVG30 <- timeAverage(mydata = elksm_DOdat30_2,
                                                avg.time = "day",
                                                statistic = "mean",
                                                data.thresh = 75)
elksm_lowpass.PHdailyAVG30 <- timeAverage(mydata = elksm_PHdat30_2,
                                                avg.time = "day",
                                                statistic = "mean",
                                                data.thresh = 75)
elksm_lowpass.WTdailyAVG15_second <- timeAverage(mydata = elksm_WTdat15_2_second,
                                                avg.time = "day",
                                                statistic = "mean",
                                                data.thresh = 75)
elksm_lowpass.DOdailyAVG15_second <- timeAverage(mydata = elksm_DOdat15_2_second,
                                                avg.time = "day",
                                                statistic = "mean",
                                                data.thresh = 75)
elksm_lowpass.PHdailyAVG15_second <- timeAverage(mydata = elksm_PHdat15_2_second,
                                                avg.time = "day",
                                                statistic = "mean",
                                                data.thresh = 75)
grbgb_lowpass.WTdailyAVG30 <- timeAverage(mydata = grbgb_WTdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
grbgb_lowpass.WTdailyAVG15 <- timeAverage(mydata = grbgb_WTdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
grbgb_lowpass.DOdailyAVG30 <- timeAverage(mydata = grbgb_DOdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
grbgb_lowpass.DOdailyAVG15 <- timeAverage(mydata = grbgb_DOdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
grbgb_lowpass.PHdailyAVG30 <- timeAverage(mydata = grbgb_PHdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
grbgb_lowpass.PHdailyAVG15 <- timeAverage(mydata = grbgb_PHdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
hudsk_lowpass.WTdailyAVG30 <- timeAverage(mydata = hudsk_WTdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
hudsk_lowpass.WTdailyAVG15 <- timeAverage(mydata = hudsk_WTdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
hudsk_lowpass.DOdailyAVG30 <- timeAverage(mydata = hudsk_DOdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
hudsk_lowpass.DOdailyAVG15 <- timeAverage(mydata = hudsk_DOdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
hudsk_lowpass.PHdailyAVG30 <- timeAverage(mydata = hudsk_PHdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
hudsk_lowpass.PHdailyAVG15 <- timeAverage(mydata = hudsk_PHdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
hudts_lowpass.WTdailyAVG30 <- timeAverage(mydata = hudts_WTdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
hudts_lowpass.WTdailyAVG15 <- timeAverage(mydata = hudts_WTdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
hudts_lowpass.DOdailyAVG30 <- timeAverage(mydata = hudts_DOdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
hudts_lowpass.DOdailyAVG15 <- timeAverage(mydata = hudts_DOdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
hudts_lowpass.PHdailyAVG30 <- timeAverage(mydata = hudts_PHdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
hudts_lowpass.PHdailyAVG15 <- timeAverage(mydata = hudts_PHdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
job09_lowpass.WTdailyAVG30 <- timeAverage(mydata = job09_WTdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
job09_lowpass.WTdailyAVG15 <- timeAverage(mydata = job09_WTdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
job09_lowpass.DOdailyAVG30 <- timeAverage(mydata = job09_DOdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
job09_lowpass.DOdailyAVG15 <- timeAverage(mydata = job09_DOdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
job09_lowpass.PHdailyAVG30 <- timeAverage(mydata = job09_PHdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
job09_lowpass.PHdailyAVG15 <- timeAverage(mydata = job09_PHdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
narpc_lowpass.WTdailyAVG30 <- timeAverage(mydata = narpc_WTdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
narpc_lowpass.WTdailyAVG15 <- timeAverage(mydata = narpc_WTdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
narpc_lowpass.DOdailyAVG30 <- timeAverage(mydata = narpc_DOdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
narpc_lowpass.DOdailyAVG15 <- timeAverage(mydata = narpc_DOdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
narpc_lowpass.PHdailyAVG30 <- timeAverage(mydata = narpc_PHdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
narpc_lowpass.PHdailyAVG15 <- timeAverage(mydata = narpc_PHdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
nocec_lowpass.WTdailyAVG30 <- timeAverage(mydata = nocec_WTdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
nocec_lowpass.WTdailyAVG15 <- timeAverage(mydata = nocec_WTdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
nocec_lowpass.DOdailyAVG30 <- timeAverage(mydata = nocec_DOdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
nocec_lowpass.DOdailyAVG15 <- timeAverage(mydata = nocec_DOdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
nocec_lowpass.PHdailyAVG30 <- timeAverage(mydata = nocec_PHdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
nocec_lowpass.PHdailyAVG15 <- timeAverage(mydata = nocec_PHdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
nocrc_lowpass.WTdailyAVG30 <- timeAverage(mydata = nocrc_WTdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
nocrc_lowpass.WTdailyAVG15 <- timeAverage(mydata = nocrc_WTdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
nocrc_lowpass.DOdailyAVG30 <- timeAverage(mydata = nocrc_DOdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
nocrc_lowpass.DOdailyAVG15 <- timeAverage(mydata = nocrc_DOdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
nocrc_lowpass.PHdailyAVG30 <- timeAverage(mydata = nocrc_PHdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
nocrc_lowpass.PHdailyAVG15 <- timeAverage(mydata = nocrc_PHdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
pdbby_lowpass.WTdailyAVG30 <- timeAverage(mydata = pdbby_WTdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
pdbby_lowpass.WTdailyAVG15 <- timeAverage(mydata = pdbby_WTdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
pdbby_lowpass.DOdailyAVG30 <- timeAverage(mydata = pdbby_DOdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
pdbby_lowpass.DOdailyAVG15 <- timeAverage(mydata = pdbby_DOdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
pdbby_lowpass.PHdailyAVG30 <- timeAverage(mydata = pdbby_PHdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
pdbby_lowpass.PHdailyAVG15 <- timeAverage(mydata = pdbby_PHdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
welin_lowpass.WTdailyAVG30 <- timeAverage(mydata = welin_WTdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
welin_lowpass.WTdailyAVG15 <- timeAverage(mydata = welin_WTdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
welin_lowpass.DOdailyAVG30 <- timeAverage(mydata = welin_DOdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
welin_lowpass.DOdailyAVG15 <- timeAverage(mydata = welin_DOdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
welin_lowpass.PHdailyAVG30 <- timeAverage(mydata = welin_PHdat30_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)
welin_lowpass.PHdailyAVG15 <- timeAverage(mydata = welin_PHdat15_2,
                                          avg.time = "day",
                                          statistic = "mean",
                                          data.thresh = 75)

acesp_WTall.dailyAVG <- rbind(acesp_lowpass.WTdailyAVG30, acesp_lowpass.WTdailyAVG15)
acesp_DOall.dailyAVG <- rbind(acesp_lowpass.DOdailyAVG30, acesp_lowpass.DOdailyAVG15)
acesp_PHall.dailyAVG <- rbind(acesp_lowpass.PHdailyAVG30, acesp_lowpass.PHdailyAVG15)
apaeb_WTall.dailyAVG <- rbind(apaeb_lowpass.WTdailyAVG30, apaeb_lowpass.WTdailyAVG15)
apaeb_DOall.dailyAVG <- rbind(apaeb_lowpass.DOdailyAVG30, apaeb_lowpass.DOdailyAVG15)
apaeb_PHall.dailyAVG <- rbind(apaeb_lowpass.PHdailyAVG30, apaeb_lowpass.PHdailyAVG15)
apaes_WTall.dailyAVG <- rbind(apaes_lowpass.WTdailyAVG30, apaes_lowpass.WTdailyAVG15)
apaes_DOall.dailyAVG <- rbind(apaes_lowpass.DOdailyAVG30, apaes_lowpass.DOdailyAVG15)
apaes_PHall.dailyAVG <- rbind(apaes_lowpass.PHdailyAVG30, apaes_lowpass.PHdailyAVG15)
cbvtc_WTall.dailyAVG <- cbvtc_lowpass.WTdailyAVG15
cbvtc_DOall.dailyAVG <- cbvtc_lowpass.DOdailyAVG15
cbvtc_PHall.dailyAVG <- cbvtc_lowpass.PHdailyAVG15
delbl_WTall.dailyAVG <- rbind(delbl_lowpass.WTdailyAVG30, delbl_lowpass.WTdailyAVG15)
delbl_DOall.dailyAVG <- rbind(delbl_lowpass.DOdailyAVG30, delbl_lowpass.DOdailyAVG15)
delbl_PHall.dailyAVG <- rbind(delbl_lowpass.PHdailyAVG30, delbl_lowpass.PHdailyAVG15)
delsl_WTall.dailyAVG <- rbind(delsl_lowpass.WTdailyAVG30, delsl_lowpass.WTdailyAVG15)
delsl_DOall.dailyAVG <- rbind(delsl_lowpass.DOdailyAVG30, delsl_lowpass.DOdailyAVG15)
delsl_PHall.dailyAVG <- rbind(delsl_lowpass.PHdailyAVG30, delsl_lowpass.PHdailyAVG15)
elkap_WTall.dailyAVG <- rbind(elkap_lowpass.WTdailyAVG15_first, elkap_lowpass.WTdailyAVG30, elkap_lowpass.WTdailyAVG15_second)
elkap_DOall.dailyAVG <- rbind(elkap_lowpass.DOdailyAVG15_first, elkap_lowpass.DOdailyAVG30, elkap_lowpass.DOdailyAVG15_second)
elkap_PHall.dailyAVG <- rbind(elkap_lowpass.PHdailyAVG15_first, elkap_lowpass.PHdailyAVG30, elkap_lowpass.PHdailyAVG15_second)
elksm_WTall.dailyAVG <- rbind(elksm_lowpass.WTdailyAVG15_first, elksm_lowpass.WTdailyAVG30, elksm_lowpass.WTdailyAVG15_second)
elksm_DOall.dailyAVG <- rbind(elksm_lowpass.DOdailyAVG15_first, elksm_lowpass.DOdailyAVG30, elksm_lowpass.DOdailyAVG15_second)
elksm_PHall.dailyAVG <- rbind(elksm_lowpass.PHdailyAVG15_first, elksm_lowpass.PHdailyAVG30, elksm_lowpass.PHdailyAVG15_second)
grbgb_WTall.dailyAVG <- rbind(grbgb_lowpass.WTdailyAVG30, grbgb_lowpass.WTdailyAVG15)
grbgb_DOall.dailyAVG <- rbind(grbgb_lowpass.DOdailyAVG30, grbgb_lowpass.DOdailyAVG15)
grbgb_PHall.dailyAVG <- rbind(grbgb_lowpass.PHdailyAVG30, grbgb_lowpass.PHdailyAVG15)
hudsk_WTall.dailyAVG <- rbind(hudsk_lowpass.WTdailyAVG30, hudsk_lowpass.WTdailyAVG15)
hudsk_DOall.dailyAVG <- rbind(hudsk_lowpass.DOdailyAVG30, hudsk_lowpass.DOdailyAVG15)
hudsk_PHall.dailyAVG <- rbind(hudsk_lowpass.PHdailyAVG30, hudsk_lowpass.PHdailyAVG15)
hudts_WTall.dailyAVG <- rbind(hudts_lowpass.WTdailyAVG30, hudts_lowpass.WTdailyAVG15)
hudts_DOall.dailyAVG <- rbind(hudts_lowpass.DOdailyAVG30, hudts_lowpass.DOdailyAVG15)
hudts_PHall.dailyAVG <- rbind(hudts_lowpass.PHdailyAVG30, hudts_lowpass.PHdailyAVG15)
job09_WTall.dailyAVG <- rbind(job09_lowpass.WTdailyAVG30, job09_lowpass.WTdailyAVG15)
job09_DOall.dailyAVG <- rbind(job09_lowpass.DOdailyAVG30, job09_lowpass.DOdailyAVG15)
job09_PHall.dailyAVG <- rbind(job09_lowpass.PHdailyAVG30, job09_lowpass.PHdailyAVG15)
narpc_WTall.dailyAVG <- rbind(narpc_lowpass.WTdailyAVG30, narpc_lowpass.WTdailyAVG15)
narpc_DOall.dailyAVG <- rbind(narpc_lowpass.DOdailyAVG30, narpc_lowpass.DOdailyAVG15)
narpc_PHall.dailyAVG <- rbind(narpc_lowpass.PHdailyAVG30, narpc_lowpass.PHdailyAVG15)
nocec_WTall.dailyAVG <- rbind(nocec_lowpass.WTdailyAVG30, nocec_lowpass.WTdailyAVG15)
nocec_DOall.dailyAVG <- rbind(nocec_lowpass.DOdailyAVG30, nocec_lowpass.DOdailyAVG15)
nocec_PHall.dailyAVG <- rbind(nocec_lowpass.PHdailyAVG30, nocec_lowpass.PHdailyAVG15)
nocrc_WTall.dailyAVG <- rbind(nocrc_lowpass.WTdailyAVG30, nocrc_lowpass.WTdailyAVG15)
nocrc_DOall.dailyAVG <- rbind(nocrc_lowpass.DOdailyAVG30, nocrc_lowpass.DOdailyAVG15)
nocrc_PHall.dailyAVG <- rbind(nocrc_lowpass.PHdailyAVG30, nocrc_lowpass.PHdailyAVG15)
pdbby_WTall.dailyAVG <- rbind(pdbby_lowpass.WTdailyAVG30, pdbby_lowpass.WTdailyAVG15)
pdbby_DOall.dailyAVG <- rbind(pdbby_lowpass.DOdailyAVG30, pdbby_lowpass.DOdailyAVG15)
pdbby_PHall.dailyAVG <- rbind(pdbby_lowpass.PHdailyAVG30, pdbby_lowpass.PHdailyAVG15)
welin_WTall.dailyAVG <- rbind(welin_lowpass.WTdailyAVG30, welin_lowpass.WTdailyAVG15)
welin_DOall.dailyAVG <- rbind(welin_lowpass.DOdailyAVG30, welin_lowpass.DOdailyAVG15)
welin_PHall.dailyAVG <- rbind(welin_lowpass.PHdailyAVG30, welin_lowpass.PHdailyAVG15)

# Create NA in low pass daily averages where they are in observed daily averages

acesp_WTall.dailyAVG.NA <- acesp_WTall.dailyAVG
acesp_DOall.dailyAVG.NA <- acesp_DOall.dailyAVG
acesp_PHall.dailyAVG.NA <- acesp_PHall.dailyAVG
apaeb_WTall.dailyAVG.NA <- apaeb_WTall.dailyAVG
apaeb_DOall.dailyAVG.NA <- apaeb_DOall.dailyAVG
apaeb_PHall.dailyAVG.NA <- apaeb_PHall.dailyAVG
apaes_WTall.dailyAVG.NA <- apaes_WTall.dailyAVG
apaes_DOall.dailyAVG.NA <- apaes_DOall.dailyAVG
apaes_PHall.dailyAVG.NA <- apaes_PHall.dailyAVG
cbvtc_WTall.dailyAVG.NA <- cbvtc_WTall.dailyAVG
cbvtc_DOall.dailyAVG.NA <- cbvtc_DOall.dailyAVG
cbvtc_PHall.dailyAVG.NA <- cbvtc_PHall.dailyAVG
delbl_WTall.dailyAVG.NA <- delbl_WTall.dailyAVG
delbl_DOall.dailyAVG.NA <- delbl_DOall.dailyAVG
delbl_PHall.dailyAVG.NA <- delbl_PHall.dailyAVG
delsl_WTall.dailyAVG.NA <- delsl_WTall.dailyAVG
delsl_DOall.dailyAVG.NA <- delsl_DOall.dailyAVG
delsl_PHall.dailyAVG.NA <- delsl_PHall.dailyAVG
elkap_WTall.dailyAVG.NA <- elkap_WTall.dailyAVG
elkap_DOall.dailyAVG.NA <- elkap_DOall.dailyAVG
elkap_PHall.dailyAVG.NA <- elkap_PHall.dailyAVG
elksm_WTall.dailyAVG.NA <- elksm_WTall.dailyAVG
elksm_DOall.dailyAVG.NA <- elksm_DOall.dailyAVG
elksm_PHall.dailyAVG.NA <- elksm_PHall.dailyAVG
grbgb_WTall.dailyAVG.NA <- grbgb_WTall.dailyAVG
grbgb_DOall.dailyAVG.NA <- grbgb_DOall.dailyAVG
grbgb_PHall.dailyAVG.NA <- grbgb_PHall.dailyAVG
hudsk_WTall.dailyAVG.NA <- hudsk_WTall.dailyAVG
hudsk_DOall.dailyAVG.NA <- hudsk_DOall.dailyAVG
hudsk_PHall.dailyAVG.NA <- hudsk_PHall.dailyAVG
hudts_WTall.dailyAVG.NA <- hudts_WTall.dailyAVG
hudts_DOall.dailyAVG.NA <- hudts_DOall.dailyAVG
hudts_PHall.dailyAVG.NA <- hudts_PHall.dailyAVG
job09_WTall.dailyAVG.NA <- job09_WTall.dailyAVG
job09_DOall.dailyAVG.NA <- job09_DOall.dailyAVG
job09_PHall.dailyAVG.NA <- job09_PHall.dailyAVG
narpc_WTall.dailyAVG.NA <- narpc_WTall.dailyAVG
narpc_DOall.dailyAVG.NA <- narpc_DOall.dailyAVG
narpc_PHall.dailyAVG.NA <- narpc_PHall.dailyAVG
nocec_WTall.dailyAVG.NA <- nocec_WTall.dailyAVG
nocec_DOall.dailyAVG.NA <- nocec_DOall.dailyAVG
nocec_PHall.dailyAVG.NA <- nocec_PHall.dailyAVG
nocrc_WTall.dailyAVG.NA <- nocrc_WTall.dailyAVG
nocrc_DOall.dailyAVG.NA <- nocrc_DOall.dailyAVG
nocrc_PHall.dailyAVG.NA <- nocrc_PHall.dailyAVG
pdbby_WTall.dailyAVG.NA <- pdbby_WTall.dailyAVG
pdbby_DOall.dailyAVG.NA <- pdbby_DOall.dailyAVG
pdbby_PHall.dailyAVG.NA <- pdbby_PHall.dailyAVG
welin_WTall.dailyAVG.NA <- welin_WTall.dailyAVG
welin_DOall.dailyAVG.NA <- welin_DOall.dailyAVG
welin_PHall.dailyAVG.NA <- welin_PHall.dailyAVG

acesp_WTall.dailyAVG.NA$noTide_corTemp[is.na(acesp_WTall.dailyAVG.NA$obsTemp)] <- NA
acesp_DOall.dailyAVG.NA$noTide_corDO[is.na(acesp_DOall.dailyAVG.NA$obsDO)] <- NA
acesp_PHall.dailyAVG.NA$noTide_corPH[is.na(acesp_PHall.dailyAVG.NA$obsPH)] <- NA
apaeb_WTall.dailyAVG.NA$noTide_corTemp[is.na(apaeb_WTall.dailyAVG.NA$obsTemp)] <- NA
apaeb_DOall.dailyAVG.NA$noTide_corDO[is.na(apaeb_DOall.dailyAVG.NA$obsDO)] <- NA
apaeb_PHall.dailyAVG.NA$noTide_corPH[is.na(apaeb_PHall.dailyAVG.NA$obsPH)] <- NA
apaes_WTall.dailyAVG.NA$noTide_corTemp[is.na(apaes_WTall.dailyAVG.NA$obsTemp)] <- NA
apaes_DOall.dailyAVG.NA$noTide_corDO[is.na(apaes_DOall.dailyAVG.NA$obsDO)] <- NA
apaes_PHall.dailyAVG.NA$noTide_corPH[is.na(apaes_PHall.dailyAVG.NA$obsPH)] <- NA
cbvtc_WTall.dailyAVG.NA$noTide_corTemp[is.na(cbvtc_WTall.dailyAVG.NA$obsTemp)] <- NA
cbvtc_DOall.dailyAVG.NA$noTide_corDO[is.na(cbvtc_DOall.dailyAVG.NA$obsDO)] <- NA
cbvtc_PHall.dailyAVG.NA$noTide_corPH[is.na(cbvtc_PHall.dailyAVG.NA$obsPH)] <- NA
delbl_WTall.dailyAVG.NA$noTide_corTemp[is.na(delbl_WTall.dailyAVG.NA$obsTemp)] <- NA
delbl_DOall.dailyAVG.NA$noTide_corDO[is.na(delbl_DOall.dailyAVG.NA$obsDO)] <- NA
delbl_PHall.dailyAVG.NA$noTide_corPH[is.na(delbl_PHall.dailyAVG.NA$obsPH)] <- NA
delsl_WTall.dailyAVG.NA$noTide_corTemp[is.na(delsl_WTall.dailyAVG.NA$obsTemp)] <- NA
delsl_DOall.dailyAVG.NA$noTide_corDO[is.na(delsl_DOall.dailyAVG.NA$obsDO)] <- NA
delsl_PHall.dailyAVG.NA$noTide_corPH[is.na(delsl_PHall.dailyAVG.NA$obsPH)] <- NA
elkap_WTall.dailyAVG.NA$noTide_corTemp[is.na(elkap_WTall.dailyAVG.NA$obsTemp)] <- NA
elkap_DOall.dailyAVG.NA$noTide_corDO[is.na(elkap_DOall.dailyAVG.NA$obsDO)] <- NA
elkap_PHall.dailyAVG.NA$noTide_corPH[is.na(elkap_PHall.dailyAVG.NA$obsPH)] <- NA
elksm_WTall.dailyAVG.NA$noTide_corTemp[is.na(elksm_WTall.dailyAVG.NA$obsTemp)] <- NA
elksm_DOall.dailyAVG.NA$noTide_corDO[is.na(elksm_DOall.dailyAVG.NA$obsDO)] <- NA
elksm_PHall.dailyAVG.NA$noTide_corPH[is.na(elksm_PHall.dailyAVG.NA$obsPH)] <- NA
grbgb_WTall.dailyAVG.NA$noTide_corTemp[is.na(grbgb_WTall.dailyAVG.NA$obsTemp)] <- NA
grbgb_DOall.dailyAVG.NA$noTide_corDO[is.na(grbgb_DOall.dailyAVG.NA$obsDO)] <- NA
grbgb_PHall.dailyAVG.NA$noTide_corPH[is.na(grbgb_PHall.dailyAVG.NA$obsPH)] <- NA
hudsk_WTall.dailyAVG.NA$noTide_corTemp[is.na(hudsk_WTall.dailyAVG.NA$obsTemp)] <- NA
hudsk_DOall.dailyAVG.NA$noTide_corDO[is.na(hudsk_DOall.dailyAVG.NA$obsDO)] <- NA
hudsk_PHall.dailyAVG.NA$noTide_corPH[is.na(hudsk_PHall.dailyAVG.NA$obsPH)] <- NA
hudts_WTall.dailyAVG.NA$noTide_corTemp[is.na(hudts_WTall.dailyAVG.NA$obsTemp)] <- NA
hudts_DOall.dailyAVG.NA$noTide_corDO[is.na(hudts_DOall.dailyAVG.NA$obsDO)] <- NA
hudts_PHall.dailyAVG.NA$noTide_corPH[is.na(hudts_PHall.dailyAVG.NA$obsPH)] <- NA
job09_WTall.dailyAVG.NA$noTide_corTemp[is.na(job09_WTall.dailyAVG.NA$obsTemp)] <- NA
job09_DOall.dailyAVG.NA$noTide_corDO[is.na(job09_DOall.dailyAVG.NA$obsDO)] <- NA
job09_PHall.dailyAVG.NA$noTide_corPH[is.na(job09_PHall.dailyAVG.NA$obsPH)] <- NA
narpc_WTall.dailyAVG.NA$noTide_corTemp[is.na(narpc_WTall.dailyAVG.NA$obsTemp)] <- NA
narpc_DOall.dailyAVG.NA$noTide_corDO[is.na(narpc_DOall.dailyAVG.NA$obsDO)] <- NA
narpc_PHall.dailyAVG.NA$noTide_corPH[is.na(narpc_PHall.dailyAVG.NA$obsPH)] <- NA
nocec_WTall.dailyAVG.NA$noTide_corTemp[is.na(nocec_WTall.dailyAVG.NA$obsTemp)] <- NA
nocec_DOall.dailyAVG.NA$noTide_corDO[is.na(nocec_DOall.dailyAVG.NA$obsDO)] <- NA
nocec_PHall.dailyAVG.NA$noTide_corPH[is.na(nocec_PHall.dailyAVG.NA$obsPH)] <- NA
nocrc_WTall.dailyAVG.NA$noTide_corTemp[is.na(nocrc_WTall.dailyAVG.NA$obsTemp)] <- NA
nocrc_DOall.dailyAVG.NA$noTide_corDO[is.na(nocrc_DOall.dailyAVG.NA$obsDO)] <- NA
nocrc_PHall.dailyAVG.NA$noTide_corPH[is.na(nocrc_PHall.dailyAVG.NA$obsPH)] <- NA
pdbby_WTall.dailyAVG.NA$noTide_corTemp[is.na(pdbby_WTall.dailyAVG.NA$obsTemp)] <- NA
pdbby_DOall.dailyAVG.NA$noTide_corDO[is.na(pdbby_DOall.dailyAVG.NA$obsDO)] <- NA
pdbby_PHall.dailyAVG.NA$noTide_corPH[is.na(pdbby_PHall.dailyAVG.NA$obsPH)] <- NA
welin_WTall.dailyAVG.NA$noTide_corTemp[is.na(welin_WTall.dailyAVG.NA$obsTemp)] <- NA
welin_DOall.dailyAVG.NA$noTide_corDO[is.na(welin_DOall.dailyAVG.NA$obsDO)] <- NA
welin_PHall.dailyAVG.NA$noTide_corPH[is.na(welin_PHall.dailyAVG.NA$obsPH)] <- NA

acesp.final <- merge(acesp_WTall.dailyAVG.NA, acesp_DOall.dailyAVG.NA, by = "date", all.x = T)
acesp.final <- merge(acesp.final, acesp_PHall.dailyAVG.NA, by = "date", all.x = T)
acesp.final <- acesp.final[,c(1,3:4,6:7,9:10)]
apaeb.final <- merge(apaeb_WTall.dailyAVG.NA, apaeb_DOall.dailyAVG.NA, by = "date", all.x = T)
apaeb.final <- merge(apaeb.final, apaeb_PHall.dailyAVG.NA, by = "date", all.x = T)
apaeb.final <- apaeb.final[,c(1,3:4,6:7,9:10)]
apaes.final <- merge(apaes_WTall.dailyAVG.NA, apaes_DOall.dailyAVG.NA, by = "date", all.x = T)
apaes.final <- merge(apaes.final, apaes_PHall.dailyAVG.NA, by = "date", all.x = T)
apaes.final <- apaes.final[,c(1,3:4,6:7,9:10)]
cbvtc.final <- merge(cbvtc_WTall.dailyAVG.NA, cbvtc_DOall.dailyAVG.NA, by = "date", all.x = T)
cbvtc.final <- merge(cbvtc.final, cbvtc_PHall.dailyAVG.NA, by = "date", all.x = T)
cbvtc.final <- cbvtc.final[,c(1,3:4,6:7,9:10)]
delbl.final <- merge(delbl_WTall.dailyAVG.NA, delbl_DOall.dailyAVG.NA, by = "date", all.x = T)
delbl.final <- merge(delbl.final, delbl_PHall.dailyAVG.NA, by = "date", all.x = T)
delbl.final <- delbl.final[,c(1,3:4,6:7,9:10)]
delsl.final <- merge(delsl_WTall.dailyAVG.NA, delsl_DOall.dailyAVG.NA, by = "date", all.x = T)
delsl.final <- merge(delsl.final, delsl_PHall.dailyAVG.NA, by = "date", all.x = T)
delsl.final <- delsl.final[,c(1,3:4,6:7,9:10)]
elkap.final <- merge(elkap_WTall.dailyAVG.NA, elkap_DOall.dailyAVG.NA, by = "date", all.x = T)
elkap.final <- merge(elkap.final, elkap_PHall.dailyAVG.NA, by = "date", all.x = T)
elkap.final <- elkap.final[,c(1,3:4,6:7,9:10)]
elksm.final <- merge(elksm_WTall.dailyAVG.NA, elksm_DOall.dailyAVG.NA, by = "date", all.x = T)
elksm.final <- merge(elksm.final, elksm_PHall.dailyAVG.NA, by = "date", all.x = T)
elksm.final <- elksm.final[,c(1,3:4,6:7,9:10)]
grbgb.final <- merge(grbgb_WTall.dailyAVG.NA, grbgb_DOall.dailyAVG.NA, by = "date", all.x = T)
grbgb.final <- merge(grbgb.final, grbgb_PHall.dailyAVG.NA, by = "date", all.x = T)
grbgb.final <- grbgb.final[,c(1,3:4,6:7,9:10)]
hudsk.final <- merge(hudsk_WTall.dailyAVG.NA, hudsk_DOall.dailyAVG.NA, by = "date", all.x = T)
hudsk.final <- merge(hudsk.final, hudsk_PHall.dailyAVG.NA, by = "date", all.x = T)
hudsk.final <- hudsk.final[,c(1,3:4,6:7,9:10)]
hudts.final <- merge(hudts_WTall.dailyAVG.NA, hudts_DOall.dailyAVG.NA, by = "date", all.x = T)
hudts.final <- merge(hudts.final, hudts_PHall.dailyAVG.NA, by = "date", all.x = T)
hudts.final <- hudts.final[,c(1,3:4,6:7,9:10)]
job09.final <- merge(job09_WTall.dailyAVG.NA, job09_DOall.dailyAVG.NA, by = "date", all.x = T)
job09.final <- merge(job09.final, job09_PHall.dailyAVG.NA, by = "date", all.x = T)
job09.final <- job09.final[,c(1,3:4,6:7,9:10)]
narpc.final <- merge(narpc_WTall.dailyAVG.NA, narpc_DOall.dailyAVG.NA, by = "date", all.x = T)
narpc.final <- merge(narpc.final, narpc_PHall.dailyAVG.NA, by = "date", all.x = T)
narpc.final <- narpc.final[,c(1,3:4,6:7,9:10)]
nocec.final <- merge(nocec_WTall.dailyAVG.NA, nocec_DOall.dailyAVG.NA, by = "date", all.x = T)
nocec.final <- merge(nocec.final, nocec_PHall.dailyAVG.NA, by = "date", all.x = T)
nocec.final <- nocec.final[,c(1,3:4,6:7,9:10)]
nocrc.final <- merge(nocrc_WTall.dailyAVG.NA, nocrc_DOall.dailyAVG.NA, by = "date", all.x = T)
nocrc.final <- merge(nocrc.final, nocrc_PHall.dailyAVG.NA, by = "date", all.x = T)
nocrc.final <- nocrc.final[,c(1,3:4,6:7,9:10)]
pdbby.final <- merge(pdbby_WTall.dailyAVG.NA, pdbby_DOall.dailyAVG.NA, by = "date", all.x = T)
pdbby.final <- merge(pdbby.final, pdbby_PHall.dailyAVG.NA, by = "date", all.x = T)
pdbby.final <- pdbby.final[,c(1,3:4,6:7,9:10)]
welin.final <- merge(welin_WTall.dailyAVG.NA, welin_DOall.dailyAVG.NA, by = "date", all.x = T)
welin.final <- merge(welin.final, welin_PHall.dailyAVG.NA, by = "date", all.x = T)
welin.final <- welin.final[,c(1,3:4,6:7,9:10)]

all_dates <- as.data.frame(seq(from = as.Date("1996-01-01"), to = as.Date("2019-12-31"), by = "day"))
names(all_dates)[1] <- "date"

acesp.final$date <- as.Date(acesp.final$date)
apaeb.final$date <- as.Date(apaeb.final$date)
apaes.final$date <- as.Date(apaes.final$date)
cbvtc.final$date <- as.Date(cbvtc.final$date)
delbl.final$date <- as.Date(delbl.final$date)
delsl.final$date <- as.Date(delsl.final$date)
elkap.final$date <- as.Date(elkap.final$date)
elksm.final$date <- as.Date(elksm.final$date)
grbgb.final$date <- as.Date(grbgb.final$date)
hudsk.final$date <- as.Date(hudsk.final$date)
hudts.final$date <- as.Date(hudts.final$date)
job09.final$date <- as.Date(job09.final$date)
narpc.final$date <- as.Date(narpc.final$date)
nocec.final$date <- as.Date(nocec.final$date)
nocrc.final$date <- as.Date(nocrc.final$date)
pdbby.final$date <- as.Date(pdbby.final$date)
welin.final$date <- as.Date(welin.final$date)

acesp.final <- merge(acesp.final, all_dates, by = "date", all = TRUE)
apaeb.final <- merge(apaeb.final, all_dates, by = "date", all = TRUE)
apaes.final <- merge(apaes.final, all_dates, by = "date", all = TRUE)
cbvtc.final <- merge(cbvtc.final, all_dates, by = "date", all = TRUE)
delbl.final <- merge(delbl.final, all_dates, by = "date", all = TRUE)
delsl.final <- merge(delsl.final, all_dates, by = "date", all = TRUE)
elkap.final <- merge(elkap.final, all_dates, by = "date", all = TRUE)
elksm.final <- merge(elksm.final, all_dates, by = "date", all = TRUE)
grbgb.final <- merge(grbgb.final, all_dates, by = "date", all = TRUE)
hudsk.final <- merge(hudsk.final, all_dates, by = "date", all = TRUE)
hudts.final <- merge(hudts.final, all_dates, by = "date", all = TRUE)
job09.final <- merge(job09.final, all_dates, by = "date", all = TRUE)
narpc.final <- merge(narpc.final, all_dates, by = "date", all = TRUE)
nocec.final <- merge(nocec.final, all_dates, by = "date", all = TRUE)
nocrc.final <- merge(nocrc.final, all_dates, by = "date", all = TRUE)
pdbby.final <- merge(pdbby.final, all_dates, by = "date", all = TRUE)
welin.final <- merge(welin.final, all_dates, by = "date", all = TRUE)

acesp.final$Station <- "acesp"
apaeb.final$Station <- "apaeb"
apaes.final$Station <- "apaes"
cbvtc.final$Station <- "cbvtc"
delbl.final$Station <- "delbl"
delsl.final$Station <- "delsl"
elkap.final$Station <- "elkap"
elksm.final$Station <- "elksm"
grbgb.final$Station <- "grbgb"
hudsk.final$Station <- "hudsk"
hudts.final$Station <- "hudts"
job09.final$Station <- "job09"
narpc.final$Station <- "narpc"
nocec.final$Station <- "nocec"
nocrc.final$Station <- "nocrc"
pdbby.final$Station <- "pdbby"
welin.final$Station <- "welin"

all_daily_data <- rbind(acesp.final,apaeb.final,apaes.final,cbvtc.final,
                  delbl.final,delsl.final,elkap.final,elksm.final,
                  grbgb.final,hudsk.final,hudts.final,job09.final,
                  narpc.final,nocec.final,nocrc.final,pdbby.final,welin.final)

acesp_temp_test <- lm(acesp.final$noTide_corTemp~acesp.final$obsTemp)
acesp_do_test <- lm(acesp.final$noTide_corDO~acesp.final$obsDO)
acesp_ph_test <- lm(acesp.final$noTide_corPH~acesp.final$obsPH)
apaeb_temp_test <- lm(apaeb.final$noTide_corTemp~apaeb.final$obsTemp)
apaeb_do_test <- lm(apaeb.final$noTide_corDO~apaeb.final$obsDO)
apaeb_ph_test <- lm(apaeb.final$noTide_corPH~apaeb.final$obsPH)
apaes_temp_test <- lm(apaes.final$noTide_corTemp~apaes.final$obsTemp)
apaes_do_test <- lm(apaes.final$noTide_corDO~apaes.final$obsDO)
apaes_ph_test <- lm(apaes.final$noTide_corPH~apaes.final$obsPH)
cbvtc_temp_test <- lm(cbvtc.final$noTide_corTemp~cbvtc.final$obsTemp)
cbvtc_do_test <- lm(cbvtc.final$noTide_corDO~cbvtc.final$obsDO)
cbvtc_ph_test <- lm(cbvtc.final$noTide_corPH~cbvtc.final$obsPH)
delbl_temp_test <- lm(delbl.final$noTide_corTemp~delbl.final$obsTemp)
delbl_do_test <- lm(delbl.final$noTide_corDO~delbl.final$obsDO)
delbl_ph_test <- lm(delbl.final$noTide_corPH~delbl.final$obsPH)
delsl_temp_test <- lm(delsl.final$noTide_corTemp~delsl.final$obsTemp)
delsl_do_test <- lm(delsl.final$noTide_corDO~delsl.final$obsDO)
delsl_ph_test <- lm(delsl.final$noTide_corPH~delsl.final$obsPH)
elkap_temp_test <- lm(elkap.final$noTide_corTemp~elkap.final$obsTemp)
elkap_do_test <- lm(elkap.final$noTide_corDO~elkap.final$obsDO)
elkap_ph_test <- lm(elkap.final$noTide_corPH~elkap.final$obsPH)
elksm_temp_test <- lm(elksm.final$noTide_corTemp~elksm.final$obsTemp)
elksm_do_test <- lm(elksm.final$noTide_corDO~elksm.final$obsDO)
elksm_ph_test <- lm(elksm.final$noTide_corPH~elksm.final$obsPH)
grbgb_temp_test <- lm(grbgb.final$noTide_corTemp~grbgb.final$obsTemp)
grbgb_do_test <- lm(grbgb.final$noTide_corDO~grbgb.final$obsDO)
grbgb_ph_test <- lm(grbgb.final$noTide_corPH~grbgb.final$obsPH)
hudsk_temp_test <- lm(hudsk.final$noTide_corTemp~hudsk.final$obsTemp)
hudsk_do_test <- lm(hudsk.final$noTide_corDO~hudsk.final$obsDO)
hudsk_ph_test <- lm(hudsk.final$noTide_corPH~hudsk.final$obsPH)
hudts_temp_test <- lm(hudts.final$noTide_corTemp~hudts.final$obsTemp)
hudts_do_test <- lm(hudts.final$noTide_corDO~hudts.final$obsDO)
hudts_ph_test <- lm(hudts.final$noTide_corPH~hudts.final$obsPH)
job09_temp_test <- lm(job09.final$noTide_corTemp~job09.final$obsTemp)
job09_do_test <- lm(job09.final$noTide_corDO~job09.final$obsDO)
job09_ph_test <- lm(job09.final$noTide_corPH~job09.final$obsPH)
narpc_temp_test <- lm(narpc.final$noTide_corTemp~narpc.final$obsTemp)
narpc_do_test <- lm(narpc.final$noTide_corDO~narpc.final$obsDO)
narpc_ph_test <- lm(narpc.final$noTide_corPH~narpc.final$obsPH)
nocec_temp_test <- lm(nocec.final$noTide_corTemp~nocec.final$obsTemp)
nocec_do_test <- lm(nocec.final$noTide_corDO~nocec.final$obsDO)
nocec_ph_test <- lm(nocec.final$noTide_corPH~nocec.final$obsPH)
nocrc_temp_test <- lm(nocrc.final$noTide_corTemp~nocrc.final$obsTemp)
nocrc_do_test <- lm(nocrc.final$noTide_corDO~nocrc.final$obsDO)
nocrc_ph_test <- lm(nocrc.final$noTide_corPH~nocrc.final$obsPH)
pdbby_temp_test <- lm(pdbby.final$noTide_corTemp~pdbby.final$obsTemp)
pdbby_do_test <- lm(pdbby.final$noTide_corDO~pdbby.final$obsDO)
pdbby_ph_test <- lm(pdbby.final$noTide_corPH~pdbby.final$obsPH)
welin_temp_test <- lm(welin.final$noTide_corTemp~welin.final$obsTemp)
welin_do_test <- lm(welin.final$noTide_corDO~welin.final$obsDO)
welin_ph_test <- lm(welin.final$noTide_corPH~welin.final$obsPH)

SlopeTable <- data.frame(matrix(ncol = 5, nrow = 51))
x <- c("Station","Variable", "Slope", "SE", "R2")
colnames(SlopeTable) <- x
SlopeTable[1:3,1] <- "acesp"
SlopeTable[4:6,1] <- "apaeb"
SlopeTable[7:9,1] <- "apaes"
SlopeTable[10:12,1] <- "cbvtc"
SlopeTable[13:15,1] <- "delbl"
SlopeTable[16:18,1] <- "delsl"
SlopeTable[19:21,1] <- "elkap"
SlopeTable[22:24,1] <- "elksm"
SlopeTable[25:27,1] <- "grbgb"
SlopeTable[28:30,1] <- "hudsk"
SlopeTable[31:33,1] <- "hudts"
SlopeTable[34:36,1] <- "job09"
SlopeTable[37:39,1] <- "narpc"
SlopeTable[40:42,1] <- "nocec"
SlopeTable[43:45,1] <- "nocrc"
SlopeTable[46:48,1] <- "pdbby"
SlopeTable[49:51,1] <- "welin"
SlopeTable[1:51,2] <- c("Wtemp","DO","pH",
                        "Wtemp","DO","pH",
                        "Wtemp","DO","pH",
                        "Wtemp","DO","pH",
                        "Wtemp","DO","pH",
                        "Wtemp","DO","pH",
                        "Wtemp","DO","pH",
                        "Wtemp","DO","pH",
                        "Wtemp","DO","pH",
                        "Wtemp","DO","pH",
                        "Wtemp","DO","pH",
                        "Wtemp","DO","pH",
                        "Wtemp","DO","pH",
                        "Wtemp","DO","pH",
                        "Wtemp","DO","pH",
                        "Wtemp","DO","pH",
                        "Wtemp","DO","pH")
SlopeTable[1,3] <- round(summary(acesp_temp_test)$coefficients[2,1],3)
SlopeTable[2,3] <- round(summary(acesp_do_test)$coefficients[2,1],3)
SlopeTable[3,3] <- round(summary(acesp_ph_test)$coefficients[2,1],3)
SlopeTable[1,4] <- round(summary(acesp_temp_test)$coefficients[2,2],3)
SlopeTable[2,4] <- round(summary(acesp_do_test)$coefficients[2,2],3)
SlopeTable[3,4] <- round(summary(acesp_ph_test)$coefficients[2,2],3)
SlopeTable[1,5] <- round(summary(acesp_temp_test)$r.squared,3)
SlopeTable[2,5] <- round(summary(acesp_do_test)$r.squared,3)
SlopeTable[3,5] <- round(summary(acesp_ph_test)$r.squared,3)
SlopeTable[4,3] <- round(summary(apaeb_temp_test)$coefficients[2,1],3)
SlopeTable[5,3] <- round(summary(apaeb_do_test)$coefficients[2,1],3)
SlopeTable[6,3] <- round(summary(apaeb_ph_test)$coefficients[2,1],3)
SlopeTable[4,4] <- round(summary(apaeb_temp_test)$coefficients[2,2],3)
SlopeTable[5,4] <- round(summary(apaeb_do_test)$coefficients[2,2],3)
SlopeTable[6,4] <- round(summary(apaeb_ph_test)$coefficients[2,2],3)
SlopeTable[4,5] <- round(summary(apaeb_temp_test)$r.squared,3)
SlopeTable[5,5] <- round(summary(apaeb_do_test)$r.squared,3)
SlopeTable[6,5] <- round(summary(apaeb_ph_test)$r.squared,3)
SlopeTable[7,3] <- round(summary(apaes_temp_test)$coefficients[2,1],3)
SlopeTable[8,3] <- round(summary(apaes_do_test)$coefficients[2,1],3)
SlopeTable[9,3] <- round(summary(apaes_ph_test)$coefficients[2,1],3)
SlopeTable[7,4] <- round(summary(apaes_temp_test)$coefficients[2,2],3)
SlopeTable[8,4] <- round(summary(apaes_do_test)$coefficients[2,2],3)
SlopeTable[9,4] <- round(summary(apaes_ph_test)$coefficients[2,2],3)
SlopeTable[7,5] <- round(summary(apaes_temp_test)$r.squared,3)
SlopeTable[8,5] <- round(summary(apaes_do_test)$r.squared,3)
SlopeTable[9,5] <- round(summary(apaes_ph_test)$r.squared,3)
SlopeTable[10,3] <- round(summary(cbvtc_temp_test)$coefficients[2,1],3)
SlopeTable[11,3] <- round(summary(cbvtc_do_test)$coefficients[2,1],3)
SlopeTable[12,3] <- round(summary(cbvtc_ph_test)$coefficients[2,1],3)
SlopeTable[10,4] <- round(summary(cbvtc_temp_test)$coefficients[2,2],3)
SlopeTable[11,4] <- round(summary(cbvtc_do_test)$coefficients[2,2],3)
SlopeTable[12,4] <- round(summary(cbvtc_ph_test)$coefficients[2,2],3)
SlopeTable[10,5] <- round(summary(cbvtc_temp_test)$r.squared,3)
SlopeTable[11,5] <- round(summary(cbvtc_do_test)$r.squared,3)
SlopeTable[12,5] <- round(summary(cbvtc_ph_test)$r.squared,3)
SlopeTable[13,3] <- round(summary(delbl_temp_test)$coefficients[2,1],3)
SlopeTable[14,3] <- round(summary(delbl_do_test)$coefficients[2,1],3)
SlopeTable[15,3] <- round(summary(delbl_ph_test)$coefficients[2,1],3)
SlopeTable[13,4] <- round(summary(delbl_temp_test)$coefficients[2,2],3)
SlopeTable[14,4] <- round(summary(delbl_do_test)$coefficients[2,2],3)
SlopeTable[15,4] <- round(summary(delbl_ph_test)$coefficients[2,2],3)
SlopeTable[13,5] <- round(summary(delbl_temp_test)$r.squared,3)
SlopeTable[14,5] <- round(summary(delbl_do_test)$r.squared,3)
SlopeTable[15,5] <- round(summary(delbl_ph_test)$r.squared,3)
SlopeTable[16,3] <- round(summary(delsl_temp_test)$coefficients[2,1],3)
SlopeTable[17,3] <- round(summary(delsl_do_test)$coefficients[2,1],3)
SlopeTable[18,3] <- round(summary(delsl_ph_test)$coefficients[2,1],3)
SlopeTable[16,4] <- round(summary(delsl_temp_test)$coefficients[2,2],3)
SlopeTable[17,4] <- round(summary(delsl_do_test)$coefficients[2,2],3)
SlopeTable[18,4] <- round(summary(delsl_ph_test)$coefficients[2,2],3)
SlopeTable[16,5] <- round(summary(delsl_temp_test)$r.squared,3)
SlopeTable[17,5] <- round(summary(delsl_do_test)$r.squared,3)
SlopeTable[18,5] <- round(summary(delsl_ph_test)$r.squared,3)
SlopeTable[19,3] <- round(summary(elkap_temp_test)$coefficients[2,1],3)
SlopeTable[20,3] <- round(summary(elkap_do_test)$coefficients[2,1],3)
SlopeTable[21,3] <- round(summary(elkap_ph_test)$coefficients[2,1],3)
SlopeTable[19,4] <- round(summary(elkap_temp_test)$coefficients[2,2],3)
SlopeTable[20,4] <- round(summary(elkap_do_test)$coefficients[2,2],3)
SlopeTable[21,4] <- round(summary(elkap_ph_test)$coefficients[2,2],3)
SlopeTable[19,5] <- round(summary(elkap_temp_test)$r.squared,3)
SlopeTable[20,5] <- round(summary(elkap_do_test)$r.squared,3)
SlopeTable[21,5] <- round(summary(elkap_ph_test)$r.squared,3)
SlopeTable[22,3] <- round(summary(elksm_temp_test)$coefficients[2,1],3)
SlopeTable[23,3] <- round(summary(elksm_do_test)$coefficients[2,1],3)
SlopeTable[24,3] <- round(summary(elksm_ph_test)$coefficients[2,1],3)
SlopeTable[22,4] <- round(summary(elksm_temp_test)$coefficients[2,2],3)
SlopeTable[23,4] <- round(summary(elksm_do_test)$coefficients[2,2],3)
SlopeTable[24,4] <- round(summary(elksm_ph_test)$coefficients[2,2],3)
SlopeTable[22,5] <- round(summary(elksm_temp_test)$r.squared,3)
SlopeTable[23,5] <- round(summary(elksm_do_test)$r.squared,3)
SlopeTable[24,5] <- round(summary(elksm_ph_test)$r.squared,3)
SlopeTable[25,3] <- round(summary(grbgb_temp_test)$coefficients[2,1],3)
SlopeTable[26,3] <- round(summary(grbgb_do_test)$coefficients[2,1],3)
SlopeTable[27,3] <- round(summary(grbgb_ph_test)$coefficients[2,1],3)
SlopeTable[25,4] <- round(summary(grbgb_temp_test)$coefficients[2,2],3)
SlopeTable[26,4] <- round(summary(grbgb_do_test)$coefficients[2,2],3)
SlopeTable[27,4] <- round(summary(grbgb_ph_test)$coefficients[2,2],3)
SlopeTable[25,5] <- round(summary(grbgb_temp_test)$r.squared,3)
SlopeTable[26,5] <- round(summary(grbgb_do_test)$r.squared,3)
SlopeTable[27,5] <- round(summary(grbgb_ph_test)$r.squared,3)
SlopeTable[28,3] <- round(summary(hudsk_temp_test)$coefficients[2,1],3)
SlopeTable[29,3] <- round(summary(hudsk_do_test)$coefficients[2,1],3)
SlopeTable[30,3] <- round(summary(hudsk_ph_test)$coefficients[2,1],3)
SlopeTable[28,4] <- round(summary(hudsk_temp_test)$coefficients[2,2],3)
SlopeTable[29,4] <- round(summary(hudsk_do_test)$coefficients[2,2],3)
SlopeTable[30,4] <- round(summary(hudsk_ph_test)$coefficients[2,2],3)
SlopeTable[28,5] <- round(summary(hudsk_temp_test)$r.squared,3)
SlopeTable[29,5] <- round(summary(hudsk_do_test)$r.squared,3)
SlopeTable[30,5] <- round(summary(hudsk_ph_test)$r.squared,3)
SlopeTable[31,3] <- round(summary(hudts_temp_test)$coefficients[2,1],3)
SlopeTable[32,3] <- round(summary(hudts_do_test)$coefficients[2,1],3)
SlopeTable[33,3] <- round(summary(hudts_ph_test)$coefficients[2,1],3)
SlopeTable[31,4] <- round(summary(hudts_temp_test)$coefficients[2,2],3)
SlopeTable[32,4] <- round(summary(hudts_do_test)$coefficients[2,2],3)
SlopeTable[33,4] <- round(summary(hudts_ph_test)$coefficients[2,2],3)
SlopeTable[31,5] <- round(summary(hudts_temp_test)$r.squared,3)
SlopeTable[32,5] <- round(summary(hudts_do_test)$r.squared,3)
SlopeTable[33,5] <- round(summary(hudts_ph_test)$r.squared,3)
SlopeTable[34,3] <- round(summary(job09_temp_test)$coefficients[2,1],3)
SlopeTable[35,3] <- round(summary(job09_do_test)$coefficients[2,1],3)
SlopeTable[36,3] <- round(summary(job09_ph_test)$coefficients[2,1],3)
SlopeTable[34,4] <- round(summary(job09_temp_test)$coefficients[2,2],3)
SlopeTable[35,4] <- round(summary(job09_do_test)$coefficients[2,2],3)
SlopeTable[36,4] <- round(summary(job09_ph_test)$coefficients[2,2],3)
SlopeTable[34,5] <- round(summary(job09_temp_test)$r.squared,3)
SlopeTable[35,5] <- round(summary(job09_do_test)$r.squared,3)
SlopeTable[36,5] <- round(summary(job09_ph_test)$r.squared,3)
SlopeTable[37,3] <- round(summary(narpc_temp_test)$coefficients[2,1],3)
SlopeTable[38,3] <- round(summary(narpc_do_test)$coefficients[2,1],3)
SlopeTable[39,3] <- round(summary(narpc_ph_test)$coefficients[2,1],3)
SlopeTable[37,4] <- round(summary(narpc_temp_test)$coefficients[2,2],3)
SlopeTable[38,4] <- round(summary(narpc_do_test)$coefficients[2,2],3)
SlopeTable[39,4] <- round(summary(narpc_ph_test)$coefficients[2,2],3)
SlopeTable[37,5] <- round(summary(narpc_temp_test)$r.squared,3)
SlopeTable[38,5] <- round(summary(narpc_do_test)$r.squared,3)
SlopeTable[39,5] <- round(summary(narpc_ph_test)$r.squared,3)
SlopeTable[40,3] <- round(summary(nocec_temp_test)$coefficients[2,1],3)
SlopeTable[41,3] <- round(summary(nocec_do_test)$coefficients[2,1],3)
SlopeTable[42,3] <- round(summary(nocec_ph_test)$coefficients[2,1],3)
SlopeTable[40,4] <- round(summary(nocec_temp_test)$coefficients[2,2],3)
SlopeTable[41,4] <- round(summary(nocec_do_test)$coefficients[2,2],3)
SlopeTable[42,4] <- round(summary(nocec_ph_test)$coefficients[2,2],3)
SlopeTable[40,5] <- round(summary(nocec_temp_test)$r.squared,3)
SlopeTable[41,5] <- round(summary(nocec_do_test)$r.squared,3)
SlopeTable[42,5] <- round(summary(nocec_ph_test)$r.squared,3)
SlopeTable[43,3] <- round(summary(nocrc_temp_test)$coefficients[2,1],3)
SlopeTable[44,3] <- round(summary(nocrc_do_test)$coefficients[2,1],3)
SlopeTable[45,3] <- round(summary(nocrc_ph_test)$coefficients[2,1],3)
SlopeTable[43,4] <- round(summary(nocrc_temp_test)$coefficients[2,2],3)
SlopeTable[44,4] <- round(summary(nocrc_do_test)$coefficients[2,2],3)
SlopeTable[45,4] <- round(summary(nocrc_ph_test)$coefficients[2,2],3)
SlopeTable[43,5] <- round(summary(nocrc_temp_test)$r.squared,3)
SlopeTable[44,5] <- round(summary(nocrc_do_test)$r.squared,3)
SlopeTable[45,5] <- round(summary(nocrc_ph_test)$r.squared,3)
SlopeTable[46,3] <- round(summary(pdbby_temp_test)$coefficients[2,1],3)
SlopeTable[47,3] <- round(summary(pdbby_do_test)$coefficients[2,1],3)
SlopeTable[48,3] <- round(summary(pdbby_ph_test)$coefficients[2,1],3)
SlopeTable[46,4] <- round(summary(pdbby_temp_test)$coefficients[2,2],3)
SlopeTable[47,4] <- round(summary(pdbby_do_test)$coefficients[2,2],3)
SlopeTable[48,4] <- round(summary(pdbby_ph_test)$coefficients[2,2],3)
SlopeTable[46,5] <- round(summary(pdbby_temp_test)$r.squared,3)
SlopeTable[47,5] <- round(summary(pdbby_do_test)$r.squared,3)
SlopeTable[48,5] <- round(summary(pdbby_ph_test)$r.squared,3)
SlopeTable[49,3] <- round(summary(welin_temp_test)$coefficients[2,1],3)
SlopeTable[50,3] <- round(summary(welin_do_test)$coefficients[2,1],3)
SlopeTable[51,3] <- round(summary(welin_ph_test)$coefficients[2,1],3)
SlopeTable[49,4] <- round(summary(welin_temp_test)$coefficients[2,2],3)
SlopeTable[50,4] <- round(summary(welin_do_test)$coefficients[2,2],3)
SlopeTable[51,4] <- round(summary(welin_ph_test)$coefficients[2,2],3)
SlopeTable[49,5] <- round(summary(welin_temp_test)$r.squared,3)
SlopeTable[50,5] <- round(summary(welin_do_test)$r.squared,3)
SlopeTable[51,5] <- round(summary(welin_ph_test)$r.squared,3)

setwd("D:/School/NERRSdata/Manuscript/Figures/Take2")
# write.csv(SlopeTable, "SlopeTable.csv")

rm(list=setdiff(ls(), c("acesp.hf","apaeb.hf","apaes.hf","cbvtc.hf",
                        "delbl.hf","delsl.hf","elkap.hf","elksm.hf",
                        "grbgb.hf","hudsk.hf","hudts.hf","job09.hf",
                        "narpc.hf","nocec.hf","nocrc.hf","pdbby.hf","welin.hf",
                        "welin.final","acesp.final","apaeb.final","apaes.final",
                        "cbvtc.final","delbl.final","delsl.final","elkap.final",
                        "elksm.final","grbgb.final","hudsk.final","hudts.final",
                        "job09.final","narpc.final","nocec.final","nocrc.final",
                        "pdbby.final","welin.final","SlopeTable","all_daily_data")))

# Heatwave, low DO, and low pH analysis for observed daily averages and
# tidally filtered daily averages

zz <- unique(all_daily_data$Station)

for(i in 1:length(zz)){
  curDat = all_daily_data[all_daily_data$Station == zz[i],]
  ts_Warm = ts2clm(curDat, x = date, y = obsTemp,
                   climatologyPeriod = c(min(curDat$date), max(curDat$date)))
  de_Warm_obsTemp = detect_event(ts_Warm, x = date, y = obsTemp )
  cat_Warm = category(de_Warm_obsTemp, y = obsTemp, S = FALSE)
  curEventsWarm = de_Warm_obsTemp$event
  curEventsWarm$Station = zz[i]
  curCatWarm = cat_Warm
  curCatWarm$Station = zz[i]
  if( i == 1){
    saveDat_obsTemp = curEventsWarm
    saveCat_obsTemp = curCatWarm
  } else{
    saveDat_obsTemp = rbind(saveDat_obsTemp, curEventsWarm)
    saveCat_obsTemp = rbind(saveCat_obsTemp, curCatWarm)
  }
}
for(i in 1:length(zz)){
  curDat = all_daily_data[all_daily_data$Station == zz[i],]
  ts_Warm = ts2clm(curDat, x = date, y = noTide_corTemp,
                   climatologyPeriod = c(min(curDat$date), max(curDat$date)))
  de_Warm_noTide_corTemp = detect_event(ts_Warm, x = date, y = noTide_corTemp )
  cat_Warm = category(de_Warm_noTide_corTemp, y = noTide_corTemp, S = FALSE)
  curEventsWarm = de_Warm_noTide_corTemp$event
  curEventsWarm$Station = zz[i]
  curCatWarm = cat_Warm
  curCatWarm$Station = zz[i]
  if( i == 1){
    saveDat_noTide_corTemp = curEventsWarm
    saveCat_noTide_corTemp = curCatWarm
  } else{
    saveDat_noTide_corTemp = rbind(saveDat_noTide_corTemp, curEventsWarm)
    saveCat_noTide_corTemp = rbind(saveCat_noTide_corTemp, curCatWarm)
  }
}
for(i in 1:length(zz)){
  curDat = all_daily_data[all_daily_data$Station == zz[i],]
  ts_Cold = ts2clm(curDat, x = date, y = obsDO,
                   climatologyPeriod = c(min(curDat$date), max(curDat$date)), pctile = 10)
  de_Cold_obsDO = detect_event(ts_Cold, x = date, y = obsDO, coldSpells = TRUE)
  cat_Cold = category(de_Cold_obsDO, y = obsDO, S = FALSE)
  curEventsCold = de_Cold_obsDO$event
  curEventsCold$Station = zz[i]
  curCatCold = cat_Cold
  curCatCold$Station = zz[i]
  if( i == 1){
    saveDat_obsDO = curEventsCold
    saveCat_obsDO = curCatCold
  } else{
    saveDat_obsDO = rbind(saveDat_obsDO, curEventsCold)
    saveCat_obsDO = rbind(saveCat_obsDO, curCatCold)
  }
}
for(i in 1:length(zz)){
  curDat = all_daily_data[all_daily_data$Station == zz[i],]
  ts_Cold = ts2clm(curDat, x = date, y = noTide_corDO,
                   climatologyPeriod = c(min(curDat$date), max(curDat$date)), pctile = 10)
  de_Cold_noTide_corDO = detect_event(ts_Cold, x = date, y = noTide_corDO, coldSpells = TRUE)
  cat_Cold = category(de_Cold_noTide_corDO, y = noTide_corDO, S = FALSE)
  curEventsCold = de_Cold_noTide_corDO$event
  curEventsCold$Station = zz[i]
  curCatCold = cat_Cold
  curCatCold$Station = zz[i]
  if( i == 1){
    saveDat_noTide_corDO = curEventsCold
    saveCat_noTide_corDO = curCatCold
  } else{
    saveDat_noTide_corDO = rbind(saveDat_noTide_corDO, curEventsCold)
    saveCat_noTide_corDO = rbind(saveCat_noTide_corDO, curCatCold)
  }
}
for(i in 1:length(zz)){
  curDat = all_daily_data[all_daily_data$Station == zz[i],]
  ts_Cold = ts2clm(curDat, x = date, y = obsPH,
                   climatologyPeriod = c(min(curDat$date), max(curDat$date)), pctile = 10)
  de_Cold_obsPH = detect_event(ts_Cold, x = date, y = obsPH, coldSpells = TRUE)
  cat_Cold = category(de_Cold_obsPH, y = obsPH, S = FALSE)
  curEventsCold = de_Cold_obsPH$event
  curEventsCold$Station = zz[i]
  curCatCold = cat_Cold
  curCatCold$Station = zz[i]
  if( i == 1){
    saveDat_obsPH = curEventsCold
    saveCat_obsPH = curCatCold
  } else{
    saveDat_obsPH = rbind(saveDat_obsPH, curEventsCold)
    saveCat_obsPH = rbind(saveCat_obsPH, curCatCold)
  }
}
for(i in 1:length(zz)){
  curDat = all_daily_data[all_daily_data$Station == zz[i],]
  ts_Cold = ts2clm(curDat, x = date, y = noTide_corPH,
                   climatologyPeriod = c(min(curDat$date), max(curDat$date)), pctile = 10)
  de_Cold_noTide_corPH = detect_event(ts_Cold, x = date, y = noTide_corPH, coldSpells = TRUE)
  cat_Cold = category(de_Cold_noTide_corPH, y = noTide_corPH, S = FALSE)
  curEventsCold = de_Cold_noTide_corPH$event
  curEventsCold$Station = zz[i]
  curCatCold = cat_Cold
  curCatCold$Station = zz[i]
  if( i == 1){
    saveDat_noTide_corPH = curEventsCold
    saveCat_noTide_corPH = curCatCold
  } else{
    saveDat_noTide_corPH = rbind(saveDat_noTide_corPH, curEventsCold)
    saveCat_noTide_corPH = rbind(saveCat_noTide_corPH, curCatCold)
  }
}

hw_table_obs <- saveDat_obsTemp %>%
  group_by(Station) %>%
  summarise(Total_Obs_HW = max(event_no))

hw_table_noTide <- saveDat_noTide_corTemp %>%
  group_by(Station) %>%
  summarise(Total_noTide_HW = max(event_no))

do_table_obs <- saveDat_obsDO %>%
  group_by(Station) %>%
  summarise(Total_Obs_lowDO = max(event_no))

do_table_noTide <- saveDat_noTide_corDO %>%
  group_by(Station) %>%
  summarise(Total_noTide_lowDO = max(event_no))

ph_table_obs <- saveDat_obsPH %>%
  group_by(Station) %>%
  summarise(Total_Obs_pH = max(event_no))

ph_table_noTide <- saveDat_noTide_corPH %>%
  group_by(Station) %>%
  summarise(Total_noTide_pH = max(event_no))

hw <- left_join(hw_table_obs,hw_table_noTide, by = "Station")
hw$diff <- hw$Total_Obs_HW-hw$Total_noTide_HW
do <- left_join(do_table_obs,do_table_noTide, by = "Station")
do$diff <- do$Total_Obs_lowDO-do$Total_noTide_lowDO
ph <- left_join(ph_table_obs,ph_table_noTide, by = "Station")
ph$diff <- ph$Total_Obs_pH-ph$Total_noTide_pH

all_table <- left_join(hw,do, by = "Station") %>%
  left_join(.,ph, by = "Station")
all_table$Order <- c(11,13,14,8,6,7,16,17,
                     2,3,4,12,5,9,10,15,1)
all_table <- all_table[,c(11,1:10)]

######

saveDat_obsTemp$class <- "Observed"
saveDat_obsDO$class <- "Observed"
saveDat_obsPH$class <- "Observed"
saveDat_noTide_corTemp$class <- "Tide Removed"
saveDat_noTide_corDO$class <- "Tide Removed"
saveDat_noTide_corPH$class <- "Tide Removed"
hw_dat <- rbind(saveDat_obsTemp,saveDat_noTide_corTemp)
do_dat <- rbind(saveDat_obsDO,saveDat_noTide_corDO)
ph_dat <- rbind(saveDat_obsPH,saveDat_noTide_corPH)

setwd("D:/School/NERRSdata/Manuscript/Figures/Take2")
cols <- c("Observed" = "#000000", "noTide" = "#ffffff")

ggplot(hw_dat, aes(x=duration, color=class, fill = class)) +
  geom_histogram(position = "dodge", color = "black") +
  labs(y = "Total Estuarine Heatwave Events", x = "Duration (days)") +
  scale_fill_manual(values = cols) +
  facet_wrap("Station") +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14),
        axis.text.x = element_text(size = 12, color = "black", angle = 45, vjust = 1, hjust = 1),
        axis.text.y = element_text(size = 12, color = "black"),
        legend.key.size = unit(0.8,"line"),
        legend.title = element_blank(),
        legend.direction = "vertical",
        legend.position = c(0.11,0.97),
        legend.background = element_blank())

ggplot(do_dat, aes(x=duration, color=class, fill = class)) +
  geom_histogram(position = "dodge", color = "black") +
  labs(y = "Total Low DO Events", x = "Duration (days)") +
  scale_fill_manual(values = cols) +
  facet_wrap("Station") +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14),
        axis.text.x = element_text(size = 12, color = "black", angle = 45, vjust = 1, hjust = 1),
        axis.text.y = element_text(size = 12, color = "black"),
        legend.key.size = unit(0.8,"line"),
        legend.title = element_blank(),
        legend.direction = "vertical",
        legend.position = c(0.11,0.97),
        legend.background = element_blank())

ggplot(ph_dat, aes(x=duration, color=class, fill = class)) +
  geom_histogram(position = "dodge", color = "black") +
  labs(y = "Total Low pH Events", x = "Duration (days)") +
  scale_fill_manual(values = cols) +
  facet_wrap("Station") +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14),
        axis.text.x = element_text(size = 12, color = "black", angle = 45, vjust = 1, hjust = 1),
        axis.text.y = element_text(size = 12, color = "black"),
        legend.key.size = unit(0.8,"line"),
        legend.title = element_blank(),
        legend.direction = "vertical",
        legend.position = c(0.11,0.97),
        legend.background = element_blank())

######

acesp.hf$Station <- "acesp"
apaeb.hf$Station <- "apaeb"
apaes.hf$Station <- "apaes"
cbvtc.hf$Station <- "cbvtc"
delbl.hf$Station <- "delbl"
delsl.hf$Station <- "delsl"
elkap.hf$Station <- "elkap"
elksm.hf$Station <- "elksm"
grbgb.hf$Station <- "grbgb"
hudsk.hf$Station <- "hudsk"
hudts.hf$Station <- "hudts"
job09.hf$Station <- "job09"
narpc.hf$Station <- "narpc"
nocec.hf$Station <- "nocec"
nocrc.hf$Station <- "nocrc"
pdbby.hf$Station <- "pdbby"
welin.hf$Station <- "welin"

all_HFdat <- rbind(acesp.hf,apaeb.hf,apaes.hf,cbvtc.hf,
                   delbl.hf,delsl.hf,elkap.hf,elksm.hf,
                   grbgb.hf,hudsk.hf,hudts.hf,job09.hf,
                   narpc.hf,nocec.hf,nocrc.hf,pdbby.hf,welin.hf)
all_HFdat$DateFormatted <- as.Date(all_HFdat$date)

rm(list=setdiff(ls(), c("acesp.hf","apaeb.hf","apaes.hf","cbvtc.hf",
                        "delbl.hf","delsl.hf","elkap.hf","elksm.hf",
                        "grbgb.hf","hudsk.hf","hudts.hf","job09.hf",
                        "narpc.hf","nocec.hf","nocrc.hf","pdbby.hf","welin.hf",
                        "welin.final","acesp.final","apaeb.final","apaes.final",
                        "cbvtc.final","delbl.final","delsl.final","elkap.final",
                        "elksm.final","grbgb.final","hudsk.final","hudts.final",
                        "job09.final","narpc.final","nocec.final","nocrc.final",
                        "pdbby.final","welin.final","SlopeTable","all_daily_data","all_table",
                        "all_HFdat","saveDat_obsTemp","saveDat_obsDO","saveDat_obsPH",
                        "saveDat_noTide_corTemp","saveDat_noTide_corDO","saveDat_noTide_corPH",
                        "saveCat_obsTemp","saveCat_obsDO","saveCat_obsPH",
                        "saveCat_noTide_corTemp","saveCat_noTide_corDO","saveCat_noTide_corPH")))

### Table 1: Mean Salinity per Station

SalDat <- all_HFdat %>%
  group_by(Station) %>%
  summarise(MeanStationSalinity = round(mean(Sal, na.rm = TRUE),1),
            SD = round(sd(Sal, na.rm = TRUE),1))
SalDat$Order <- c(11,13,14,8,6,7,16,17,
                  2,3,4,12,5,9,10,15,1)
SalDat <- SalDat[,c(4,1:3)]

SalDat_DailyAVG <- all_HFdat %>%
  group_by(Station, DateFormatted) %>%
  summarise(MeanSal = round(mean(Sal, na.rm = TRUE),1))

DO_DailyMin <- all_HFdat %>%
  group_by(Station, DateFormatted) %>%
  summarise(MinDO = round(min(DO_mgl, na.rm = TRUE),1)) %>%
  mutate(MinDO = ifelse(is.infinite(MinDO), NA, MinDO))

PH_DailyMin <- all_HFdat %>%
  group_by(Station, DateFormatted) %>%
  summarise(MinPH = round(min(pH, na.rm = TRUE),1)) %>%
  mutate(MinPH = ifelse(is.infinite(MinPH), NA, MinPH))

ranges <- mapply(function(x, y, z)  seq.Date(y, z, 1), saveDat_obsTemp$Station,  saveDat_obsTemp$date_start, saveDat_obsTemp$date_end, USE.NAMES = TRUE)
saveDat_obsTemp$MeanSalinity <- mapply(function(a, b)
  mean(SalDat_DailyAVG$MeanSal[SalDat_DailyAVG$Station == b][match(a, SalDat_DailyAVG$DateFormatted[SalDat_DailyAVG$Station == b])]), ranges, names(ranges))
ranges <- mapply(function(x, y, z)  seq.Date(y, z, 1), saveDat_obsDO$Station,  saveDat_obsDO$date_start, saveDat_obsDO$date_end, USE.NAMES = TRUE)
saveDat_obsDO$MeanSalinity <- mapply(function(a, b)
  mean(SalDat_DailyAVG$MeanSal[SalDat_DailyAVG$Station == b][match(a, SalDat_DailyAVG$DateFormatted[SalDat_DailyAVG$Station == b])]), ranges, names(ranges))
ranges <- mapply(function(x, y, z)  seq.Date(y, z, 1), saveDat_obsPH$Station,  saveDat_obsPH$date_start, saveDat_obsPH$date_end, USE.NAMES = TRUE)
saveDat_obsPH$MeanSalinity <- mapply(function(a, b)
  mean(SalDat_DailyAVG$MeanSal[SalDat_DailyAVG$Station == b][match(a, SalDat_DailyAVG$DateFormatted[SalDat_DailyAVG$Station == b])]), ranges, names(ranges))

ranges <- mapply(function(x, y, z)  seq.Date(y, z, 1), saveDat_obsTemp$Station,  saveDat_obsTemp$date_start, saveDat_obsTemp$date_end, USE.NAMES = TRUE)
saveDat_obsTemp$MinDO <- mapply(function(a, b)
  min(DO_DailyMin$MinDO[DO_DailyMin$Station == b][match(a, DO_DailyMin$DateFormatted[DO_DailyMin$Station == b])]), ranges, names(ranges))
ranges <- mapply(function(x, y, z)  seq.Date(y, z, 1), saveDat_obsDO$Station,  saveDat_obsDO$date_start, saveDat_obsDO$date_end, USE.NAMES = TRUE)
saveDat_obsDO$MinDO <- mapply(function(a, b)
  min(DO_DailyMin$MinDO[DO_DailyMin$Station == b][match(a, DO_DailyMin$DateFormatted[DO_DailyMin$Station == b])]), ranges, names(ranges))
ranges <- mapply(function(x, y, z)  seq.Date(y, z, 1), saveDat_obsPH$Station,  saveDat_obsPH$date_start, saveDat_obsPH$date_end, USE.NAMES = TRUE)
saveDat_obsPH$MinDO <- mapply(function(a, b)
  min(DO_DailyMin$MinDO[DO_DailyMin$Station == b][match(a, DO_DailyMin$DateFormatted[DO_DailyMin$Station == b])]), ranges, names(ranges))

ranges <- mapply(function(x, y, z)  seq.Date(y, z, 1), saveDat_obsTemp$Station,  saveDat_obsTemp$date_start, saveDat_obsTemp$date_end, USE.NAMES = TRUE)
saveDat_obsTemp$MinPH <- mapply(function(a, b)
  min(PH_DailyMin$MinPH[PH_DailyMin$Station == b][match(a, PH_DailyMin$DateFormatted[PH_DailyMin$Station == b])]), ranges, names(ranges))
ranges <- mapply(function(x, y, z)  seq.Date(y, z, 1), saveDat_obsDO$Station,  saveDat_obsDO$date_start, saveDat_obsDO$date_end, USE.NAMES = TRUE)
saveDat_obsDO$MinPH <- mapply(function(a, b)
  min(PH_DailyMin$MinPH[PH_DailyMin$Station == b][match(a, PH_DailyMin$DateFormatted[PH_DailyMin$Station == b])]), ranges, names(ranges))
ranges <- mapply(function(x, y, z)  seq.Date(y, z, 1), saveDat_obsPH$Station,  saveDat_obsPH$date_start, saveDat_obsPH$date_end, USE.NAMES = TRUE)
saveDat_obsPH$MinPH <- mapply(function(a, b)
  min(PH_DailyMin$MinPH[PH_DailyMin$Station == b][match(a, PH_DailyMin$DateFormatted[PH_DailyMin$Station == b])]), ranges, names(ranges))

frac_lowDO_hypoxic <- sum(saveDat_obsDO$MinDO <= 2.0, na.rm = TRUE)/NROW(saveDat_obsDO)
round(frac_lowDO_hypoxic*100,1)

frac_lowPH <- sum(saveDat_obsPH$MinPH < 7.0, na.rm = TRUE)/NROW(saveDat_obsPH)
round(frac_lowPH*100,1)

### Table 1: Mean Depth & Tidal Height per Station

acesp.hf$grp <- with(rle(sign(c(diff(acesp.hf$Depth),0))), rep(seq_along(values),lengths))
apaes.1 <- apaes.hf[1:191952,]
apaes.2 <- apaes.hf[191952:NROW(apaes.hf)]
apaes.1$grp <- with(rle(sign(c(diff(apaes.1$Depth),0))), rep(seq_along(values),lengths))
apaes.2$grp <- with(rle(sign(c(diff(apaes.2$Depth),0))), rep(seq_along(values),lengths))
apaes.hf <- rbind(apaes.1,apaes.2)
apaeb.1 <- apaeb.hf[1:185520,]
apaeb.2 <- apaeb.hf[185521:NROW(apaeb.hf),]
apaeb.1$grp <- with(rle(sign(c(diff(apaeb.1$Depth),0))), rep(seq_along(values),lengths))
apaeb.2$grp <- with(rle(sign(c(diff(apaeb.2$Depth),0))), rep(seq_along(values),lengths))
apaeb.hf <- rbind(apaeb.1,apaeb.2)
cbvtc.hf$grp <- with(rle(sign(c(diff(cbvtc.hf$Depth),0))), rep(seq_along(values),lengths))
delbl.hf$grp <- with(rle(sign(c(diff(delbl.hf$Depth),0))), rep(seq_along(values),lengths))
delsl.hf$grp <- with(rle(sign(c(diff(delsl.hf$Depth),0))), rep(seq_along(values),lengths))
elkap.1 <- elkap.hf[1:66048,]
elkap.2 <- elkap.hf[66049:NROW(elkap.hf),]
elkap.1$grp <- with(rle(sign(c(diff(elkap.1$Depth),0))), rep(seq_along(values),lengths))
elkap.2$grp <- with(rle(sign(c(diff(elkap.2$Depth),0))), rep(seq_along(values),lengths))
elkap.hf <- rbind(elkap.1,elkap.2)
elksm.1 <- elksm.hf[1:63936,]
elksm.2 <- elksm.hf[63937:220368,]
elksm.3 <- elksm.hf[220369:263330,]
elksm.4 <- elksm.hf[266026:NROW(elksm.hf),]
elksm.1$grp <- with(rle(sign(c(diff(elksm.1$Depth),0))), rep(seq_along(values),lengths))
elksm.2$grp <- with(rle(sign(c(diff(elksm.2$Depth),0))), rep(seq_along(values),lengths))
elksm.3$grp <- with(rle(sign(c(diff(elksm.3$Depth),0))), rep(seq_along(values),lengths))
elksm.4$grp <- with(rle(sign(c(diff(elksm.4$Depth),0))), rep(seq_along(values),lengths))
elksm.hf <- rbind(elksm.1,elksm.2,elksm.3,elksm.4)
grbgb.1 <- grbgb.hf[1:186576,]
grbgb.2 <- grbgb.hf[186577:NROW(grbgb.hf)]
grbgb.1$grp <- with(rle(sign(c(diff(grbgb.1$Depth),0))), rep(seq_along(values),lengths))
grbgb.2$grp <- with(rle(sign(c(diff(grbgb.2$Depth),0))), rep(seq_along(values),lengths))
grbgb.hf <- rbind(grbgb.1,grbgb.2)
hudsk.1 <- hudsk.hf[1:180336,]
hudsk.2 <- hudsk.hf[180337:NROW(hudsk.hf),]
hudsk.1$grp <- with(rle(sign(c(diff(hudsk.1$Depth),0))), rep(seq_along(values),lengths))
hudsk.2$grp <- with(rle(sign(c(diff(hudsk.2$Depth),0))), rep(seq_along(values),lengths))
hudsk.hf <- rbind(hudsk.1,hudsk.2)
hudts.1 <- hudts.hf[1:180144,]
hudts.2 <- hudts.hf[180145:NROW(hudts.hf),]
hudts.1$grp <- with(rle(sign(c(diff(hudts.1$Depth),0))), rep(seq_along(values),lengths))
hudts.2$grp <- with(rle(sign(c(diff(hudts.2$Depth),0))), rep(seq_along(values),lengths))
hudts.hf <- rbind(hudts.1,hudts.2)
job09.1 <- job09.hf[1:20624,]
job09.2 <- job09.hf[20625:NROW(job09.hf),]
job09.1$grp <- with(rle(sign(c(diff(job09.1$Depth),0))), rep(seq_along(values),lengths))
job09.2$grp <- with(rle(sign(c(diff(job09.2$Depth),0))), rep(seq_along(values),lengths))
job09.hf <- rbind(job09.1,job09.2)
narpc.1 <- narpc.hf[1:146208,]
narpc.2 <- narpc.hf[146209:NROW(narpc.hf),]
narpc.1$grp <- with(rle(sign(c(diff(narpc.1$Depth),0))), rep(seq_along(values),lengths))
narpc.2$grp <- with(rle(sign(c(diff(narpc.2$Depth),0))), rep(seq_along(values),lengths))
narpc.hf <- rbind(narpc.1,narpc.2)
nocec.1 <- nocec.hf[1:186336,]
nocec.2 <- nocec.hf[186337:NROW(nocec.hf),]
nocec.1$grp <- with(rle(sign(c(diff(nocec.1$Depth),0))), rep(seq_along(values),lengths))
nocec.2$grp <- with(rle(sign(c(diff(nocec.2$Depth),0))), rep(seq_along(values),lengths))
nocec.hf <- rbind(nocec.1,nocec.2)
nocrc.1 <- nocrc.hf[1:185664,]
nocrc.2 <- nocrc.hf[185665:NROW(nocrc.hf),]
nocrc.1$grp <- with(rle(sign(c(diff(nocrc.1$Depth),0))), rep(seq_along(values),lengths))
nocrc.2$grp <- with(rle(sign(c(diff(nocrc.2$Depth),0))), rep(seq_along(values),lengths))
nocrc.hf <- rbind(nocrc.1,nocrc.2)
pdbby.1 <- pdbby.hf[1:193296,]
pdbby.2 <- pdbby.hf[193297:NROW(pdbby.hf),]
pdbby.1$grp <- with(rle(sign(c(diff(pdbby.1$Depth),0))), rep(seq_along(values),lengths))
pdbby.2$grp <- with(rle(sign(c(diff(pdbby.2$Depth),0))), rep(seq_along(values),lengths))
pdbby.hf <- rbind(pdbby.1,pdbby.2)
welin.1 <- welin.hf[1:193284,]
welin.2 <- welin.hf[193285:NROW(welin.hf),]
welin.1$grp <- with(rle(sign(c(diff(welin.1$Depth),0))), rep(seq_along(values),lengths))
welin.2$grp <- with(rle(sign(c(diff(welin.2$Depth),0))), rep(seq_along(values),lengths))
welin.hf <- rbind(welin.1,welin.2)

df.MeanDepth <- data.frame(matrix(vector(),0,4,
                                  dimnames=list(c(), c("Order","Station", "MeanDepth", "TidalHeight"))),
                           stringsAsFactors = F)

df.MeanDepth[1,1] <- 11
df.MeanDepth[2,1] <- 13
df.MeanDepth[3,1] <- 14
df.MeanDepth[4,1] <- 8
df.MeanDepth[5,1] <- 6
df.MeanDepth[6,1] <- 7
df.MeanDepth[7,1] <- 16
df.MeanDepth[8,1] <- 17
df.MeanDepth[9,1] <- 2
df.MeanDepth[10,1] <- 3
df.MeanDepth[11,1] <- 4
df.MeanDepth[12,1] <- 12
df.MeanDepth[13,1] <- 5
df.MeanDepth[14,1] <- 9
df.MeanDepth[15,1] <- 10
df.MeanDepth[16,1] <- 15
df.MeanDepth[17,1] <- 1

df.MeanDepth[1,2] <- "acesp"
df.MeanDepth[2,2] <- "apaeb"
df.MeanDepth[3,2] <- "apaes"
df.MeanDepth[4,2] <- "cbvtc"
df.MeanDepth[5,2] <- "delbl"
df.MeanDepth[6,2] <- "delsl"
df.MeanDepth[7,2] <- "elkap"
df.MeanDepth[8,2] <- "elksm"
df.MeanDepth[9,2] <- "grbgb"
df.MeanDepth[10,2] <- "hudsk"
df.MeanDepth[11,2] <- "hudts"
df.MeanDepth[12,2] <- "job09"
df.MeanDepth[13,2] <- "narpc"
df.MeanDepth[14,2] <- "nocec"
df.MeanDepth[15,2] <- "nocrc"
df.MeanDepth[16,2] <- "pdbby"
df.MeanDepth[17,2] <- "welin"

df.MeanDepth[1,3] <- round(mean(na.omit(acesp.hf$Depth)),2)
df.MeanDepth[2,3] <- round(mean(na.omit(apaeb.hf$Depth)),2)
df.MeanDepth[3,3] <- round(mean(na.omit(apaes.hf$Depth)),2)
df.MeanDepth[4,3] <- round(mean(na.omit(cbvtc.hf$Depth)),2)
df.MeanDepth[5,3] <- round(mean(na.omit(delbl.hf$Depth)),2)
df.MeanDepth[6,3] <- round(mean(na.omit(delsl.hf$Depth)),2)
df.MeanDepth[7,3] <- round(mean(na.omit(elkap.hf$Depth)),2)
df.MeanDepth[8,3] <- round(mean(na.omit(elksm.hf$Depth)),2)
df.MeanDepth[9,3] <- round(mean(na.omit(grbgb.hf$Depth)),2)
df.MeanDepth[10,3] <- round(mean(na.omit(hudsk.hf$Depth)),2)
df.MeanDepth[11,3] <- round(mean(na.omit(hudts.hf$Depth)),2)
df.MeanDepth[12,3] <- round(mean(na.omit(job09.hf$Depth)),2)
df.MeanDepth[13,3] <- round(mean(na.omit(narpc.hf$Depth)),2)
df.MeanDepth[14,3] <- round(mean(na.omit(nocec.hf$Depth)),2)
df.MeanDepth[15,3] <- round(mean(na.omit(nocrc.hf$Depth)),2)
df.MeanDepth[16,3] <- round(mean(na.omit(pdbby.hf$Depth)),2)
df.MeanDepth[17,3] <- round(mean(na.omit(welin.hf$Depth)),2)

df.MeanDepth[1,4] <- round(mean(na.omit(abs(diff(subset(acesp.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)
df.MeanDepth[2,4] <- round(mean(na.omit(abs(diff(subset(apaeb.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)
df.MeanDepth[3,4] <- round(mean(na.omit(abs(diff(subset(apaes.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)
df.MeanDepth[4,4] <- round(mean(na.omit(abs(diff(subset(cbvtc.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)
df.MeanDepth[5,4] <- round(mean(na.omit(abs(diff(subset(delbl.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)
df.MeanDepth[6,4] <- round(mean(na.omit(abs(diff(subset(delsl.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)
df.MeanDepth[7,4] <- round(mean(na.omit(abs(diff(subset(elkap.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)
df.MeanDepth[8,4] <- round(mean(na.omit(abs(diff(subset(elksm.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)
df.MeanDepth[9,4] <- round(mean(na.omit(abs(diff(subset(grbgb.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)
df.MeanDepth[10,4] <- round(mean(na.omit(abs(diff(subset(hudsk.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)
df.MeanDepth[11,4] <- round(mean(na.omit(abs(diff(subset(hudts.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)
df.MeanDepth[12,4] <- round(mean(na.omit(abs(diff(subset(job09.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)
df.MeanDepth[13,4] <- round(mean(na.omit(abs(diff(subset(narpc.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)
df.MeanDepth[14,4] <- round(mean(na.omit(abs(diff(subset(nocec.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)
df.MeanDepth[15,4] <- round(mean(na.omit(abs(diff(subset(nocrc.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)
df.MeanDepth[16,4] <- round(mean(na.omit(abs(diff(subset(pdbby.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)
df.MeanDepth[17,4] <- round(mean(na.omit(abs(diff(subset(welin.hf, ave(grp,grp,FUN = seq_along)==1)$Depth)))),2)

Table1 <- left_join(SalDat,df.MeanDepth, by = "Station")
Table1 <- Table1[,c(1:4,6:7)]
Table1 <- left_join(Table1, all_table, by = "Station")
Table1$Region <- c("SE","GoM","GoM","MidAtl","MidAtl","MidAtl","West","West","NE",
                   "NE","NE","SE","NE","SE","SE","West","NE")
Table1 <- Table1[,c(7,2,17,3:6,8:16)]
Table1 <- Table1 %>% arrange(-desc(Order))
colnames(Table1) <- c("Order","Station","Region","Salinity_mean","Salinity_SD",
                    "Depth_mean","TidalRange_mean","Total_EHW","Total_EHW(NoTide)",
                    "EHW_Diff","Total_LowDO","Total_LowDO(NoTide)","LowDO_Diff",
                    "Total_LowPH","Total_LowPH(NoTide)","LowPH_Diff")

write.csv(Table1, 'Table1.csv')

Table1_small <- Table1[,c(1:3,8:16)]
Table1_small$Reserve <- substr(Table1_small$Station,0,3)
Table1_small <- Table1_small[,c(1,13,2:12)]

ehw_lm <- lm(Table1_small$`Total_EHW(NoTide)`~Table1_small$Total_EHW)
do_lm <- lm(Table1_small$`Total_LowDO(NoTide)`~Table1_small$Total_LowDO)
ph_lm <- lm(Table1_small$`Total_LowPH(NoTide)`~Table1_small$Total_LowPH)
summary(ehw_lm)
summary(do_lm)
summary(ph_lm)

t.test(Table1_small$Total_EHW,Table1_small$`Total_EHW(NoTide)`,paired = TRUE)
t.test(Table1_small$Total_LowDO,Table1_small$`Total_LowDO(NoTide)`,paired = TRUE)
t.test(Table1_small$Total_LowPH,Table1_small$`Total_LowPH(NoTide)`,paired = TRUE)

# setwd("D:/School/NERRSdata/Manuscript/Figures/Take2")
# write.csv(Table1, "Table1.csv")

### Replace mean salinity NA values with mean of station salinity

MHW <- left_join(saveDat_obsTemp,SalDat, by = "Station")
LDO <- left_join(saveDat_obsDO, SalDat, by = "Station")
LPH <- left_join(saveDat_obsPH, SalDat, by = "Station")

MHW <- MHW %>%
  group_by(Station) %>%
  mutate(MeanSalinity = ifelse(is.na(MeanSalinity), mean(MeanStationSalinity, na.rm = TRUE), MeanSalinity)) %>%
  ungroup()
LDO <- LDO %>%
  group_by(Station) %>%
  mutate(MeanSalinity = ifelse(is.na(MeanSalinity), mean(MeanStationSalinity, na.rm = TRUE), MeanSalinity)) %>%
  ungroup()
LPH <- LPH %>%
  group_by(Station) %>%
  mutate(MeanSalinity = ifelse(is.na(MeanSalinity), mean(MeanStationSalinity, na.rm = TRUE), MeanSalinity)) %>%
  ungroup()

MHW$Sal.class <- ifelse(MHW$MeanSalinity >= 30, "Seawater",
                        ifelse(MHW$MeanSalinity >= 18.0, "Polyhaline",
                               ifelse(MHW$MeanSalinity >= 5.0, "Mesohaline",
                                      ifelse(MHW$MeanSalinity >= 0.5, "Oligohaline",
                                             ifelse(MHW$MeanSalinity <= 0.5, "TidalFresh", NA)))))
LDO$Sal.class <- ifelse(LDO$MeanSalinity >= 30, "Seawater",
                        ifelse(LDO$MeanSalinity >= 18.0, "Polyhaline",
                               ifelse(LDO$MeanSalinity >= 5.0, "Mesohaline",
                                      ifelse(LDO$MeanSalinity >= 0.5, "Oligohaline",
                                             ifelse(LDO$MeanSalinity <= 0.5, "TidalFresh", NA)))))
LPH$Sal.class <- ifelse(LPH$MeanSalinity >= 30, "Seawater",
                        ifelse(LPH$MeanSalinity >= 18.0, "Polyhaline",
                               ifelse(LPH$MeanSalinity >= 5.0, "Mesohaline",
                                      ifelse(LPH$MeanSalinity >= 0.5, "Oligohaline",
                                             ifelse(LPH$MeanSalinity <= 0.5, "TidalFresh", NA)))))

MHW$Year <- year(MHW$date_start)
MHW$Month <- month(MHW$date_start)
MHW$Season <- ifelse(MHW$Month >=12, "Winter",
                     ifelse(MHW$Month >= 9, "Fall",
                            ifelse(MHW$Month >= 6, "Summer",
                                   ifelse(MHW$Month >= 3, "Spring",
                                          ifelse(MHW$Month >=1, "Winter", NA)))))
LDO$Year <- year(LDO$date_start)
LDO$Month <- month(LDO$date_start)
LDO$Season <- ifelse(LDO$Month >=12, "Winter",
                     ifelse(LDO$Month >= 9, "Fall",
                            ifelse(LDO$Month >= 6, "Summer",
                                   ifelse(LDO$Month >= 3, "Spring",
                                          ifelse(LDO$Month >=1, "Winter", NA)))))
LPH$Year <- year(LPH$date_start)
LPH$Month <- month(LPH$date_start)
LPH$Season <- ifelse(LPH$Month >=12, "Winter",
                     ifelse(LPH$Month >= 9, "Fall",
                            ifelse(LPH$Month >= 6, "Summer",
                                   ifelse(LPH$Month >= 3, "Spring",
                                          ifelse(LPH$Month >=1, "Winter", NA)))))

MHW$Region <- ifelse(MHW$Station == "pdbby", "West",
                     ifelse(MHW$Station == "elkap", "West",
                            ifelse(MHW$Station == "elksm", "West",
                                   ifelse(MHW$Station == "apaeb", "GoM",
                                          ifelse(MHW$Station == "apaes", "GoM",
                                                 ifelse(MHW$Station == "acesp", "SE",
                                                        ifelse(MHW$Station == "nocec", "SE",
                                                               ifelse(MHW$Station == "nocrc", "SE",
                                                                      ifelse(MHW$Station == "job09", "SE",
                                                                             ifelse(MHW$Station == "cbvtc", "MidAtl",
                                                                                    ifelse(MHW$Station == "delbl", "MidAtl",
                                                                                           ifelse(MHW$Station == "delsl", "MidAtl",
                                                                                                  ifelse(MHW$Station == "grbgb", "NE",
                                                                                                         ifelse(MHW$Station == "hudsk", "NE",
                                                                                                                ifelse(MHW$Station == "hudts", "NE",
                                                                                                                       ifelse(MHW$Station == "narpc", "NE",
                                                                                                                              ifelse(MHW$Station == "welin", "NE", NA)))))))))))))))))

LDO$Region <- ifelse(LDO$Station == "pdbby", "West",
                     ifelse(LDO$Station == "elkap", "West",
                            ifelse(LDO$Station == "elksm", "West",
                                   ifelse(LDO$Station == "apaeb", "GoM",
                                          ifelse(LDO$Station == "apaes", "GoM",
                                                 ifelse(LDO$Station == "acesp", "SE",
                                                        ifelse(LDO$Station == "nocec", "SE",
                                                               ifelse(LDO$Station == "nocrc", "SE",
                                                                      ifelse(LDO$Station == "job09", "SE",
                                                                             ifelse(LDO$Station == "cbvtc", "MidAtl",
                                                                                    ifelse(LDO$Station == "delbl", "MidAtl",
                                                                                           ifelse(LDO$Station == "delsl", "MidAtl",
                                                                                                  ifelse(LDO$Station == "grbgb", "NE",
                                                                                                         ifelse(LDO$Station == "hudsk", "NE",
                                                                                                                ifelse(LDO$Station == "hudts", "NE",
                                                                                                                       ifelse(LDO$Station == "narpc", "NE",
                                                                                                                              ifelse(LDO$Station == "welin", "NE", NA)))))))))))))))))
LPH$Region <- ifelse(LPH$Station == "pdbby", "West",
                     ifelse(LPH$Station == "elkap", "West",
                            ifelse(LPH$Station == "elksm", "West",
                                   ifelse(LPH$Station == "apaeb", "GoM",
                                          ifelse(LPH$Station == "apaes", "GoM",
                                                 ifelse(LPH$Station == "acesp", "SE",
                                                        ifelse(LPH$Station == "nocec", "SE",
                                                               ifelse(LPH$Station == "nocrc", "SE",
                                                                      ifelse(LPH$Station == "job09", "SE",
                                                                             ifelse(LPH$Station == "cbvtc", "MidAtl",
                                                                                    ifelse(LPH$Station == "delbl", "MidAtl",
                                                                                           ifelse(LPH$Station == "delsl", "MidAtl",
                                                                                                  ifelse(LPH$Station == "grbgb", "NE",
                                                                                                         ifelse(LPH$Station == "hudsk", "NE",
                                                                                                                ifelse(LPH$Station == "hudts", "NE",
                                                                                                                       ifelse(LPH$Station == "narpc", "NE",
                                                                                                                              ifelse(LPH$Station == "welin", "NE", NA)))))))))))))))))



mhw_region <- MHW %>%
  group_by(Year, Region) %>%
  summarise(Avg.Duration = mean(duration),
            Avg.CuInt = mean(intensity_cumulative_relThresh),
            Avg.Onset = mean(rate_onset),
            Avg.Decline = mean(rate_decline),
            SumEvents = length(duration))
mhw_salinity <- MHW %>%
  group_by(Year, Sal.class) %>%
  summarise(Avg.Duration = mean(duration),
            Avg.CuInt = mean(intensity_cumulative_relThresh),
            Avg.Onset = mean(rate_onset),
            Avg.Decline = mean(rate_decline),
            Frequency = length(duration)/n_distinct(Station))
mhw_season <- MHW %>%
  group_by(Year, Season) %>%
  summarise(Avg.Duration = mean(duration),
            Avg.CuInt = mean(intensity_cumulative_relThresh),
            Avg.Onset = mean(rate_onset),
            Avg.Decline = mean(rate_decline),
            Frequency = length(duration)/17)
mhw_time <- MHW %>%
  group_by(Year) %>%
  summarise(Avg.Duration = mean(duration),
            Avg.CuInt = mean(intensity_cumulative_relThresh),
            Avg.Onset = mean(rate_onset),
            Avg.Decline = mean(rate_decline),
            Frequency = length(duration)/17)

mhw_region$nStations[mhw_region$Region == 'NE'] <- 5
mhw_region$nStations[mhw_region$Region == 'MidAtl'] <- 3
mhw_region$nStations[mhw_region$Region == 'SE'] <- 4
mhw_region$nStations[mhw_region$Region == 'GoM'] <- 2
mhw_region$nStations[mhw_region$Region == 'West'] <- 2
mhw_region$Frequency = round(mhw_region$SumEvents/mhw_region$nStations, digits = 2)

x1 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x2 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x3 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x4 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x5 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
names(x1)[1] <- "Year"
names(x2)[1] <- "Year"
names(x3)[1] <- "Year"
names(x4)[1] <- "Year"
names(x5)[1] <- "Year"
x1$Region <- "SE"
x2$Region <- "GoM"
x3$Region <- "MidAtl"
x4$Region <- "West"
x5$Region <- "NE"
region <- rbind(x1,x2,x3,x4,x5)
mhw_region <- merge(mhw_region, region, by = c("Year","Region"), all = TRUE)
mhw_region <- mhw_region[,c(1:6,9)]
mhw_region[c(2:3,23,80,93),3:7] <- 0
mhw_time$Type <- "MHW"

x1 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x2 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x3 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x4 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x5 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
names(x1)[1] <- "Year"
names(x2)[1] <- "Year"
names(x3)[1] <- "Year"
names(x4)[1] <- "Year"
names(x5)[1] <- "Year"
x1$Sal.class <- "TidalFresh"
x2$Sal.class <- "Oligohaline"
x3$Sal.class <- "Mesohaline"
x4$Sal.class <- "Polyhaline"
x5$Sal.class <- "Seawater"
salinity <- rbind(x1,x2,x3,x4,x5)
mhw_salinity <- merge(mhw_salinity, salinity, by = c("Year","Sal.class"), all = TRUE)
mhw_salinity[c(27,40,42,70,87,95,120),3:7] <- 0

do_region <- LDO %>%
  group_by(Year, Region) %>%
  summarise(Avg.Duration = mean(duration),
            Avg.CuInt = mean(abs(intensity_cumulative_relThresh)),
            Avg.Onset = mean(abs(rate_onset)),
            Avg.Decline = mean(abs(rate_decline)),
            SumEvents = length(duration))
do_salinity <- LDO %>%
  group_by(Year, Sal.class) %>%
  summarise(Avg.Duration = mean(duration),
            Avg.CuInt = mean(abs(intensity_cumulative_relThresh)),
            Avg.Onset = mean(abs(rate_onset)),
            Avg.Decline = mean(abs(rate_decline)),
            Frequency = length(duration)/n_distinct(Station))
do_season <- LDO %>%
  group_by(Year, Season) %>%
  summarise(Avg.Duration = mean(duration),
            Avg.CuInt = mean(abs(intensity_cumulative_relThresh)),
            Avg.Onset = mean(abs(rate_onset)),
            Avg.Decline = mean(abs(rate_decline)),
            Frequency = length(duration)/17)
do_time <- LDO %>%
  group_by(Year) %>%
  summarise(Avg.Duration = mean(duration),
            Avg.CuInt = mean(abs(intensity_cumulative_relThresh)),
            Avg.Onset = mean(abs(rate_onset)),
            Avg.Decline = mean(abs(rate_decline)),
            Frequency = length(duration)/17)

do_region$nStations[do_region$Region == 'NE'] <- 5
do_region$nStations[do_region$Region == 'MidAtl'] <- 3
do_region$nStations[do_region$Region == 'SE'] <- 4
do_region$nStations[do_region$Region == 'GoM'] <- 2
do_region$nStations[do_region$Region == 'West'] <- 2
do_region$Frequency = round(do_region$SumEvents/do_region$nStations, digits = 2)

x1 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x2 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x3 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x4 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x5 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
names(x1)[1] <- "Year"
names(x2)[1] <- "Year"
names(x3)[1] <- "Year"
names(x4)[1] <- "Year"
names(x5)[1] <- "Year"
x1$Region <- "SE"
x2$Region <- "GoM"
x3$Region <- "MidAtl"
x4$Region <- "West"
x5$Region <- "NE"
region <- rbind(x1,x2,x3,x4,x5)
do_region <- merge(do_region, region, by = c("Year","Region"), all = TRUE)
do_region <- do_region[,c(1:6,9)]
do_region[c(1,76,94),3:7] <- 0

x1 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x2 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x3 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x4 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x5 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
names(x1)[1] <- "Year"
names(x2)[1] <- "Year"
names(x3)[1] <- "Year"
names(x4)[1] <- "Year"
names(x5)[1] <- "Year"
x1$Sal.class <- "TidalFresh"
x2$Sal.class <- "Oligohaline"
x3$Sal.class <- "Mesohaline"
x4$Sal.class <- "Polyhaline"
x5$Sal.class <- "Seawater"
salinity <- rbind(x1,x2,x3,x4,x5)
do_salinity <- merge(do_salinity, salinity, by = c("Year","Sal.class"), all = TRUE)
do_salinity[c(22,62,77,117),3:7] <- 0
do_time$Type <- "lowDO"

ph_region <- LPH %>%
  group_by(Year, Region) %>%
  summarise(Avg.Duration = mean(duration),
            Avg.CuInt = mean(abs(intensity_cumulative_relThresh)),
            Avg.Onset = mean(abs(rate_onset)),
            Avg.Decline = mean(abs(rate_decline)),
            SumEvents = length(duration))
ph_salinity <- LPH %>%
  group_by(Year, Sal.class) %>%
  summarise(Avg.Duration = mean(duration),
            Avg.CuInt = mean(abs(intensity_cumulative_relThresh)),
            Avg.Onset = mean(abs(rate_onset)),
            Avg.Decline = mean(abs(rate_decline)),
            Frequency = length(duration)/n_distinct(Station))
ph_season <- LPH %>%
  group_by(Year, Season) %>%
  summarise(Avg.Duration = mean(duration),
            Avg.CuInt = mean(abs(intensity_cumulative_relThresh)),
            Avg.Onset = mean(abs(rate_onset)),
            Avg.Decline = mean(abs(rate_decline)),
            Frequency = length(duration)/17)
ph_time <- LPH %>%
  group_by(Year) %>%
  summarise(Avg.Duration = mean(duration),
            Avg.CuInt = mean(abs(intensity_cumulative_relThresh)),
            Avg.Onset = mean(abs(rate_onset)),
            Avg.Decline = mean(abs(rate_decline)),
            Frequency = length(duration)/17)

ph_region$nStations[ph_region$Region == 'NE'] <- 5
ph_region$nStations[ph_region$Region == 'MidAtl'] <- 3
ph_region$nStations[ph_region$Region == 'SE'] <- 4
ph_region$nStations[ph_region$Region == 'GoM'] <- 2
ph_region$nStations[ph_region$Region == 'West'] <- 2
ph_region$Frequency = round(ph_region$SumEvents/ph_region$nStations, digits = 2)

x1 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x2 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x3 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x4 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x5 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
names(x1)[1] <- "Year"
names(x2)[1] <- "Year"
names(x3)[1] <- "Year"
names(x4)[1] <- "Year"
names(x5)[1] <- "Year"
x1$Region <- "SE"
x2$Region <- "GoM"
x3$Region <- "MidAtl"
x4$Region <- "West"
x5$Region <- "NE"
region <- rbind(x1,x2,x3,x4,x5)
ph_region <- merge(ph_region, region, by = c("Year","Region"), all = TRUE)
ph_region <- ph_region[,c(1:6,9)]
ph_region[c(21,51,61,75:76,116),3:7] <- 0

x1 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x2 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x3 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x4 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x5 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
names(x1)[1] <- "Year"
names(x2)[1] <- "Year"
names(x3)[1] <- "Year"
names(x4)[1] <- "Year"
names(x5)[1] <- "Year"
x1$Sal.class <- "TidalFresh"
x2$Sal.class <- "Oligohaline"
x3$Sal.class <- "Mesohaline"
x4$Sal.class <- "Polyhaline"
x5$Sal.class <- "Seawater"
salinity <- rbind(x1,x2,x3,x4,x5)
ph_salinity <- merge(ph_salinity, salinity, by = c("Year","Sal.class"), all = TRUE)
ph_salinity[c(22,62,91),3:7] <- 0

x1 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x2 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x3 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
x4 <- as.data.frame(seq(from = 1996, to = 2019, by = 1))
names(x1)[1] <- "Year"
names(x2)[1] <- "Year"
names(x3)[1] <- "Year"
names(x4)[1] <- "Year"
x1$Season <- "Winter"
x2$Season <- "Spring"
x3$Season <- "Summer"
x4$Season <- "Fall"
season <- rbind(x1,x2,x3,x4)
ph_season <- merge(ph_season, season, by = c("Year","Season"), all = TRUE)
ph_season[85,3:7] <- 0
ph_time$Type <- "lowPH"

mhw_time <- mhw_time[,c(1,7,2:6)]
do_time <- do_time[,c(1,7,2:6)]
ph_time <- ph_time[,c(1,7,2:6)]

rm(list=setdiff(ls(), c("SlopeTable","all_daily_data","all_HFdat","Table1",
                        "saveDat_obsTemp","saveDat_obsDO","saveDat_obsPH",
                        "saveCat_obsTemp","saveCat_obsDO","saveCat_obsPH",
                        "MHW","LDO","LPH",
                        "mhw_region","mhw_salinity","mhw_season","mhw_time",
                        "do_region","do_salinity","do_season","do_time",
                        "ph_region","ph_salinity","ph_season","ph_time")))

library(ggpmisc)
library(gridExtra)
library(Kendall)
library(trend)
library(mice)

init = mice(mhw_region, maxit = 0)
meth = init$method
predM = init$predictorMatrix
predM[,c("Region")] = 0
meth[c("Year","Avg.Duration","Avg.CuInt","Frequency")] = ""
meth[c("Avg.Onset","Avg.Decline")] = "norm"
set.seed(103)
imputed = mice(mhw_region, method = meth, predictorMaxtix = predM, m =5)
imputed <- complete(imputed)
sapply(imputed, function(x) sum(is.na(x)))
mhw_region <- imputed

init = mice(mhw_salinity, maxit = 0)
meth = init$method
predM = init$predictorMatrix
predM[,c("Sal.class")] = 0
meth[c("Year","Avg.Duration","Avg.CuInt","Frequency")] = ""
meth[c("Avg.Onset","Avg.Decline")] = "norm"
set.seed(105)
imputed = mice(mhw_salinity, method = meth, predictorMaxtix = predM, m =5)
imputed <- complete(imputed)
sapply(imputed, function(x) sum(is.na(x)))
mhw_salinity <- imputed

init = mice(mhw_season, maxit = 0)
meth = init$method
predM = init$predictorMatrix
predM[,c("Season")] = 0
meth[c("Year","Avg.Duration","Avg.CuInt","Frequency")] = ""
meth[c("Avg.Onset","Avg.Decline")] = "norm"
set.seed(107)
imputed = mice(mhw_season, method = meth, predictorMaxtix = predM, m =5)
imputed <- complete(imputed)
sapply(imputed, function(x) sum(is.na(x)))
mhw_season <- imputed

init = mice(mhw_time, maxit = 0)
meth = init$method
predM = init$predictorMatrix
predM[,c("Type")] = 0
meth[c("Year","Avg.Duration","Avg.CuInt","Frequency")] = ""
meth[c("Avg.Onset","Avg.Decline")] = "norm"
set.seed(101)
imputed = mice(mhw_time, method = meth, predictorMaxtix = predM, m =5)
imputed <- complete(imputed)
sapply(imputed, function(x) sum(is.na(x)))
mhw_time <- imputed

init = mice(do_time, maxit = 0)
meth = init$method
predM = init$predictorMatrix
predM[,c("Type")] = 0
meth[c("Year","Avg.Duration","Avg.CuInt","Frequency")] = ""
meth[c("Avg.Onset","Avg.Decline")] = "norm"
set.seed(105)
imputed = mice(do_time, method = meth, predictorMaxtix = predM, m =5)
imputed <- complete(imputed)
sapply(imputed, function(x) sum(is.na(x)))
do_time <- imputed

init = mice(do_region, maxit = 0)
meth = init$method
predM = init$predictorMatrix
predM[,c("Region")] = 0
meth[c("Year","Avg.Duration","Avg.CuInt","Frequency")] = ""
meth[c("Avg.Onset","Avg.Decline")] = "norm"
set.seed(106)
imputed = mice(do_region, method = meth, predictorMaxtix = predM, m =5)
imputed <- complete(imputed)
sapply(imputed, function(x) sum(is.na(x)))
do_region <- imputed

init = mice(do_salinity, maxit = 0)
meth = init$method
predM = init$predictorMatrix
predM[,c("Sal.class")] = 0
meth[c("Year","Avg.Duration","Avg.CuInt","Frequency")] = ""
meth[c("Avg.Onset","Avg.Decline")] = "norm"
set.seed(107)
imputed = mice(do_salinity, method = meth, predictorMaxtix = predM, m =5)
imputed <- complete(imputed)
sapply(imputed, function(x) sum(is.na(x)))
do_salinity <- imputed

init = mice(do_season, maxit = 0)
meth = init$method
predM = init$predictorMatrix
predM[,c("Season")] = 0
meth[c("Year","Avg.Duration","Avg.CuInt","Frequency")] = ""
meth[c("Avg.Onset","Avg.Decline")] = "norm"
set.seed(108)
imputed = mice(do_season, method = meth, predictorMaxtix = predM, m =5)
imputed <- complete(imputed)
sapply(imputed, function(x) sum(is.na(x)))
do_season <- imputed

init = mice(ph_time, maxit = 0)
meth = init$method
predM = init$predictorMatrix
predM[,c("Type")] = 0
meth[c("Year","Avg.Duration","Avg.CuInt","Frequency")] = ""
meth["Avg.Onset"] = "norm"
set.seed(101)
imputed = mice(ph_time, method = meth, predictorMaxtix = predM, m =5)
imputed <- complete(imputed)
sapply(imputed, function(x) sum(is.na(x)))
ph_time <- imputed

init = mice(ph_region, maxit = 0)
meth = init$method
predM = init$predictorMatrix
predM[,c("Region")] = 0
meth[c("Year","Avg.Duration","Avg.CuInt","Frequency")] = ""
meth["Avg.Onset"] = "norm"
set.seed(102)
imputed = mice(ph_region, method = meth, predictorMaxtix = predM, m =5)
imputed <- complete(imputed)
sapply(imputed, function(x) sum(is.na(x)))
ph_region <- imputed

init = mice(ph_salinity, maxit = 0)
meth = init$method
predM = init$predictorMatrix
predM[,c("Sal.class")] = 0
meth[c("Year","Avg.Duration","Avg.CuInt","Frequency")] = ""
meth["Avg.Onset"] = "norm"
set.seed(103)
imputed = mice(ph_salinity, method = meth, predictorMaxtix = predM, m =5)
imputed <- complete(imputed)
sapply(imputed, function(x) sum(is.na(x)))
ph_salinity <- imputed

init = mice(ph_season, maxit = 0)
meth = init$method
predM = init$predictorMatrix
predM[,c("Season")] = 0
meth[c("Year","Avg.Duration","Avg.CuInt","Frequency")] = ""
meth["Avg.Onset"] = "norm"
set.seed(104)
imputed = mice(ph_season, method = meth, predictorMaxtix = predM, m =5)
imputed <- complete(imputed)
sapply(imputed, function(x) sum(is.na(x)))
ph_season <- imputed

aa <- unique(mhw_season$Season)
bb <- unique(mhw_salinity$Sal.class)
cc <- unique(mhw_region$Region)
dd <- unique(mhw_time$Type)
ee <- unique(do_season$Season)
ff <- unique(do_salinity$Sal.class)
gg <- unique(do_region$Region)
hh <- unique(do_time$Type)
ii <- unique(ph_season$Season)
jj <- unique(ph_salinity$Sal.class)
kk <- unique(ph_region$Region)
ll <- unique(ph_time$Type)

### Mann Kendall Sen's Slope
### MHW Time

for(i in 1:length(dd)){
  curDat = mhw_time[mhw_time$Type == dd[i],]
  ts = ts(data = curDat[, 3],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = dd[i]
  cur_mhw_time = data.frame(TestType = "Time",
                           Variable = "Avg.Duration",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    mhw_time_duration = cur_mhw_time
  } else{
    mhw_time_duration = rbind(mhw_time_duration, cur_mhw_time)
  }
}
for(i in 1:length(dd)){
  curDat = mhw_time[mhw_time$Type == dd[i],]
  ts = ts(data = curDat[, 4],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = dd[i]
  cur_mhw_time = data.frame(TestType = "Time",
                           Variable = "Avg.CuInt",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    mhw_time_intensity = cur_mhw_time
  } else{
    mhw_time_intensity = rbind(mhw_time_intensity, cur_mhw_time)
  }
}
for(i in 1:length(dd)){
  curDat = mhw_time[mhw_time$Type == dd[i],]
  ts = ts(data = curDat[, 5],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = dd[i]
  cur_mhw_time = data.frame(TestType = "Time",
                           Variable = "Avg.Onset",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    mhw_time_onset = cur_mhw_time
  } else{
    mhw_time_onset = rbind(mhw_time_onset, cur_mhw_time)
  }
}
for(i in 1:length(dd)){
  curDat = mhw_time[mhw_time$Type == dd[i],]
  ts = ts(data = curDat[, 6],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = dd[i]
  cur_mhw_time = data.frame(TestType = "Time",
                           Variable = "Avg.Decline",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    mhw_time_decline = cur_mhw_time
  } else{
    mhw_time_decline = rbind(mhw_time_decline, cur_mhw_time)
  }
}
for(i in 1:length(dd)){
  curDat = mhw_time[mhw_time$Type == dd[i],]
  ts = ts(data = curDat[, 7],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = dd[i]
  cur_mhw_time = data.frame(TestType = "Time",
                           Variable = "Frequency",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    mhw_time_events = cur_mhw_time
  } else{
    mhw_time_events = rbind(mhw_time_events, cur_mhw_time)
  }
}

### MHW Region

for(i in 1:length(cc)){
  curDat = mhw_region[mhw_region$Region == cc[i],]
  ts = ts(data = curDat[, 3],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = cc[i]
  cur_mhw_region = data.frame(TestType = "Region",
                             Variable = "Avg.Duration",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    mhw_region_duration = cur_mhw_region
  } else{
    mhw_region_duration = rbind(mhw_region_duration, cur_mhw_region)
  }
}
for(i in 1:length(cc)){
  curDat = mhw_region[mhw_region$Region == cc[i],]
  ts = ts(data = curDat[, 4],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = cc[i]
  cur_mhw_region = data.frame(TestType = "Region",
                             Variable = "Avg.CuInt",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    mhw_region_intensity = cur_mhw_region
  } else{
    mhw_region_intensity = rbind(mhw_region_intensity, cur_mhw_region)
  }
}
for(i in 1:length(cc)){
  curDat = mhw_region[mhw_region$Region == cc[i],]
  ts = ts(data = curDat[, 5],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = cc[i]
  cur_mhw_region = data.frame(TestType = "Region",
                             Variable = "Avg.Onset",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    mhw_region_onset = cur_mhw_region
  } else{
    mhw_region_onset = rbind(mhw_region_onset, cur_mhw_region)
  }
}
for(i in 1:length(cc)){
  curDat = mhw_region[mhw_region$Region == cc[i],]
  ts = ts(data = curDat[, 6],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = cc[i]
  cur_mhw_region = data.frame(TestType = "Region",
                             Variable = "Avg.Decline",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    mhw_region_decline = cur_mhw_region
  } else{
    mhw_region_decline = rbind(mhw_region_decline, cur_mhw_region)
  }
}
for(i in 1:length(cc)){
  curDat = mhw_region[mhw_region$Region == cc[i],]
  ts = ts(data = curDat[, 7],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = cc[i]
  cur_mhw_region = data.frame(TestType = "Region",
                             Variable = "Frequency",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    mhw_region_events = cur_mhw_region
  } else{
    mhw_region_events = rbind(mhw_region_events, cur_mhw_region)
  }
}

### MHW Salinity

for(i in 1:length(bb)){
  curDat = mhw_salinity[mhw_salinity$Sal.class == bb[i],]
  ts = ts(data = curDat[, 3],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Sal = bb[i]
  cur_mhw_sal = data.frame(TestType = "Salinity",
                          Variable = "Avg.Duration",
                          Category = Sal,
                          slope = round(slope, 3),
                          p.val = round(p.val, 4))
  if( i == 1){
    mhw_sal_duration = cur_mhw_sal
  } else{
    mhw_sal_duration = rbind(mhw_sal_duration, cur_mhw_sal)
  }
}
for(i in 1:length(bb)){
  curDat = mhw_salinity[mhw_salinity$Sal.class == bb[i],]
  ts = ts(data = curDat[, 4],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Sal = bb[i]
  cur_mhw_sal = data.frame(TestType = "Salinity",
                          Variable = "Avg.CuInt",
                          Category = Sal,
                          slope = round(slope, 3),
                          p.val = round(p.val, 4))
  if( i == 1){
    mhw_sal_intensity = cur_mhw_sal
  } else{
    mhw_sal_intensity = rbind(mhw_sal_intensity, cur_mhw_sal)
  }
}
for(i in 1:length(bb)){
  curDat = mhw_salinity[mhw_salinity$Sal.class == bb[i],]
  ts = ts(data = curDat[, 5],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Sal = bb[i]
  cur_mhw_sal = data.frame(TestType = "Salinity",
                          Variable = "Avg.Onset",
                          Category = Sal,
                          slope = round(slope, 3),
                          p.val = round(p.val, 4))
  if( i == 1){
    mhw_sal_onset = cur_mhw_sal
  } else{
    mhw_sal_onset = rbind(mhw_sal_onset, cur_mhw_sal)
  }
}
for(i in 1:length(bb)){
  curDat = mhw_salinity[mhw_salinity$Sal.class == bb[i],]
  ts = ts(data = curDat[, 6],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Sal = bb[i]
  cur_mhw_sal = data.frame(TestType = "Salinity",
                          Variable = "Avg.Decline",
                          Category = Sal,
                          slope = round(slope, 3),
                          p.val = round(p.val, 4))
  if( i == 1){
    mhw_sal_decline = cur_mhw_sal
  } else{
    mhw_sal_decline = rbind(mhw_sal_decline, cur_mhw_sal)
  }
}
for(i in 1:length(bb)){
  curDat = mhw_salinity[mhw_salinity$Sal.class == bb[i],]
  ts = ts(data = curDat[, 7],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Sal = bb[i]
  cur_mhw_sal = data.frame(TestType = "Salinity",
                          Variable = "Frequency",
                          Category = Sal,
                          slope = round(slope, 3),
                          p.val = round(p.val, 4))
  if( i == 1){
    mhw_sal_events = cur_mhw_sal
  } else{
    mhw_sal_events = rbind(mhw_sal_events, cur_mhw_sal)
  }
}

### MHW Season

for(i in 1:length(aa)){
  curDat = mhw_season[mhw_season$Season == aa[i],]
  ts = ts(data = curDat[, 3],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = aa[i]
  cur_mhw_season = data.frame(TestType = "Season",
                             Variable = "Avg.Duration",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    mhw_season_duration = cur_mhw_season
  } else{
    mhw_season_duration = rbind(mhw_season_duration, cur_mhw_season)
  }
}
for(i in 1:length(aa)){
  curDat = mhw_season[mhw_season$Season == aa[i],]
  ts = ts(data = curDat[, 4],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = aa[i]
  cur_mhw_season = data.frame(TestType = "Season",
                             Variable = "Avg.CuInt",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    mhw_season_intensity = cur_mhw_season
  } else{
    mhw_season_intensity = rbind(mhw_season_intensity, cur_mhw_season)
  }
}
for(i in 1:length(aa)){
  curDat = mhw_season[mhw_season$Season == aa[i],]
  ts = ts(data = curDat[, 5],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = aa[i]
  cur_mhw_season = data.frame(TestType = "Season",
                             Variable = "Avg.Onset",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    mhw_season_onset = cur_mhw_season
  } else{
    mhw_season_onset = rbind(mhw_season_onset, cur_mhw_season)
  }
}
for(i in 1:length(aa)){
  curDat = mhw_season[mhw_season$Season == aa[i],]
  ts = ts(data = curDat[, 6],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = aa[i]
  cur_mhw_season = data.frame(TestType = "Season",
                             Variable = "Avg.Decline",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    mhw_season_decline = cur_mhw_season
  } else{
    mhw_season_decline = rbind(mhw_season_decline, cur_mhw_season)
  }
}
for(i in 1:length(aa)){
  curDat = mhw_season[mhw_season$Season == aa[i],]
  ts = ts(data = curDat[, 7],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = aa[i]
  cur_mhw_season = data.frame(TestType = "Season",
                             Variable = "Frequency",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    mhw_season_events = cur_mhw_season
  } else{
    mhw_season_events = rbind(mhw_season_events, cur_mhw_season)
  }
}

### pH Time

for(i in 1:length(ll)){
  curDat = ph_time[ph_time$Type == ll[i],]
  ts = ts(data = curDat[, 3],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = ll[i]
  cur_ph_time = data.frame(TestType = "Time",
                           Variable = "Avg.Duration",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    ph_time_duration = cur_ph_time
  } else{
    ph_time_duration = rbind(ph_time_duration, cur_ph_time)
  }
}
for(i in 1:length(ll)){
  curDat = ph_time[ph_time$Type == ll[i],]
  ts = ts(data = curDat[, 4],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = ll[i]
  cur_ph_time = data.frame(TestType = "Time",
                           Variable = "Avg.CuInt",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    ph_time_intensity = cur_ph_time
  } else{
    ph_time_intensity = rbind(ph_time_intensity, cur_ph_time)
  }
}
for(i in 1:length(ll)){
  curDat = ph_time[ph_time$Type == ll[i],]
  ts = ts(data = curDat[, 5],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = ll[i]
  cur_ph_time = data.frame(TestType = "Time",
                           Variable = "Avg.Onset",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    ph_time_onset = cur_ph_time
  } else{
    ph_time_onset = rbind(ph_time_onset, cur_ph_time)
  }
}
for(i in 1:length(ll)){
  curDat = ph_time[ph_time$Type == ll[i],]
  ts = ts(data = curDat[, 6],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = ll[i]
  cur_ph_time = data.frame(TestType = "Time",
                           Variable = "Avg.Decline",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    ph_time_decline = cur_ph_time
  } else{
    ph_time_decline = rbind(ph_time_decline, cur_ph_time)
  }
}
for(i in 1:length(ll)){
  curDat = ph_time[ph_time$Type == ll[i],]
  ts = ts(data = curDat[, 7],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = ll[i]
  cur_ph_time = data.frame(TestType = "Time",
                           Variable = "Frequency",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    ph_time_events = cur_ph_time
  } else{
    ph_time_events = rbind(ph_time_events, cur_ph_time)
  }
}

# DO Time

for(i in 1:length(hh)){
  curDat = do_time[do_time$Type == hh[i],]
  ts = ts(data = curDat[, 3],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = hh[i]
  cur_do_time = data.frame(TestType = "Time",
                           Variable = "Avg.Duration",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    do_time_duration = cur_do_time
  } else{
    do_time_duration = rbind(do_time_duration, cur_do_time)
  }
}
for(i in 1:length(hh)){
  curDat = do_time[do_time$Type == hh[i],]
  ts = ts(data = curDat[, 4],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = hh[i]
  cur_do_time = data.frame(TestType = "Time",
                           Variable = "Avg.CuInt",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    do_time_intensity = cur_do_time
  } else{
    do_time_intensity = rbind(do_time_intensity, cur_do_time)
  }
}
for(i in 1:length(hh)){
  curDat = do_time[do_time$Type == hh[i],]
  ts = ts(data = curDat[, 5],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = hh[i]
  cur_do_time = data.frame(TestType = "Time",
                           Variable = "Avg.Onset",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    do_time_onset = cur_do_time
  } else{
    do_time_onset = rbind(do_time_onset, cur_do_time)
  }
}
for(i in 1:length(hh)){
  curDat = do_time[do_time$Type == hh[i],]
  ts = ts(data = curDat[, 6],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = hh[i]
  cur_do_time = data.frame(TestType = "Time",
                           Variable = "Avg.Decline",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    do_time_decline = cur_do_time
  } else{
    do_time_decline = rbind(do_time_decline, cur_do_time)
  }
}
for(i in 1:length(hh)){
  curDat = do_time[do_time$Type == hh[i],]
  ts = ts(data = curDat[, 7],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = hh[i]
  cur_do_time = data.frame(TestType = "Time",
                           Variable = "Frequency",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    do_time_events = cur_do_time
  } else{
    do_time_events = rbind(do_time_events, cur_do_time)
  }
}

# pH Region

for(i in 1:length(kk)){
  curDat = ph_region[ph_region$Region == kk[i],]
  ts = ts(data = curDat[, 3],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = kk[i]
  cur_ph_region = data.frame(TestType = "Region",
                             Variable = "Avg.Duration",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ph_region_duration = cur_ph_region
  } else{
    ph_region_duration = rbind(ph_region_duration, cur_ph_region)
  }
}
for(i in 1:length(kk)){
  curDat = ph_region[ph_region$Region == kk[i],]
  ts = ts(data = curDat[, 4],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = kk[i]
  cur_ph_region = data.frame(TestType = "Region",
                             Variable = "Avg.CuInt",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ph_region_intensity = cur_ph_region
  } else{
    ph_region_intensity = rbind(ph_region_intensity, cur_ph_region)
  }
}
for(i in 1:length(kk)){
  curDat = ph_region[ph_region$Region == kk[i],]
  ts = ts(data = curDat[, 5],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = kk[i]
  cur_ph_region = data.frame(TestType = "Region",
                             Variable = "Avg.Onset",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ph_region_onset = cur_ph_region
  } else{
    ph_region_onset = rbind(ph_region_onset, cur_ph_region)
  }
}
for(i in 1:length(kk)){
  curDat = ph_region[ph_region$Region == kk[i],]
  ts = ts(data = curDat[, 6],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = kk[i]
  cur_ph_region = data.frame(TestType = "Region",
                             Variable = "Avg.Decline",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ph_region_decline = cur_ph_region
  } else{
    ph_region_decline = rbind(ph_region_decline, cur_ph_region)
  }
}
for(i in 1:length(kk)){
  curDat = ph_region[ph_region$Region == kk[i],]
  ts = ts(data = curDat[, 7],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = kk[i]
  cur_ph_region = data.frame(TestType = "Region",
                             Variable = "Frequency",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ph_region_events = cur_ph_region
  } else{
    ph_region_events = rbind(ph_region_events, cur_ph_region)
  }
}

# DO Region

for(i in 1:length(gg)){
  curDat = do_region[do_region$Region == gg[i],]
  ts = ts(data = curDat[, 3],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = gg[i]
  cur_do_region = data.frame(TestType = "Region",
                             Variable = "Avg.Duration",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    do_region_duration = cur_do_region
  } else{
    do_region_duration = rbind(do_region_duration, cur_do_region)
  }
}
for(i in 1:length(gg)){
  curDat = do_region[do_region$Region == gg[i],]
  ts = ts(data = curDat[, 4],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = gg[i]
  cur_do_region = data.frame(TestType = "Region",
                             Variable = "Avg.CuInt",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    do_region_intensity = cur_do_region
  } else{
    do_region_intensity = rbind(do_region_intensity, cur_do_region)
  }
}
for(i in 1:length(gg)){
  curDat = do_region[do_region$Region == gg[i],]
  ts = ts(data = curDat[, 5],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = gg[i]
  cur_do_region = data.frame(TestType = "Region",
                             Variable = "Avg.Onset",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    do_region_onset = cur_do_region
  } else{
    do_region_onset = rbind(do_region_onset, cur_do_region)
  }
}
for(i in 1:length(gg)){
  curDat = do_region[do_region$Region == gg[i],]
  ts = ts(data = curDat[, 6],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = gg[i]
  cur_do_region = data.frame(TestType = "Region",
                             Variable = "Avg.Decline",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    do_region_decline = cur_do_region
  } else{
    do_region_decline = rbind(do_region_decline, cur_do_region)
  }
}
for(i in 1:length(gg)){
  curDat = do_region[do_region$Region == gg[i],]
  ts = ts(data = curDat[, 7],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = gg[i]
  cur_do_region = data.frame(TestType = "Region",
                             Variable = "Frequency",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    do_region_events = cur_do_region
  } else{
    do_region_events = rbind(do_region_events, cur_do_region)
  }
}

# pH Salinity

for(i in 1:length(jj)){
  curDat = ph_salinity[ph_salinity$Sal.class == jj[i],]
  ts = ts(data = curDat[, 3],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Sal = jj[i]
  cur_ph_sal = data.frame(TestType = "Salinity",
                          Variable = "Avg.Duration",
                          Category = Sal,
                          slope = round(slope, 3),
                          p.val = round(p.val, 4))
  if( i == 1){
    ph_sal_duration = cur_ph_sal
  } else{
    ph_sal_duration = rbind(ph_sal_duration, cur_ph_sal)
  }
}
for(i in 1:length(jj)){
  curDat = ph_salinity[ph_salinity$Sal.class == jj[i],]
  ts = ts(data = curDat[, 4],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Sal = jj[i]
  cur_ph_sal = data.frame(TestType = "Salinity",
                          Variable = "Avg.CuInt",
                          Category = Sal,
                          slope = round(slope, 3),
                          p.val = round(p.val, 4))
  if( i == 1){
    ph_sal_intensity = cur_ph_sal
  } else{
    ph_sal_intensity = rbind(ph_sal_intensity, cur_ph_sal)
  }
}
for(i in 1:length(jj)){
  curDat = ph_salinity[ph_salinity$Sal.class == jj[i],]
  ts = ts(data = curDat[, 5],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Sal = jj[i]
  cur_ph_sal = data.frame(TestType = "Salinity",
                          Variable = "Avg.Onset",
                          Category = Sal,
                          slope = round(slope, 3),
                          p.val = round(p.val, 4))
  if( i == 1){
    ph_sal_onset = cur_ph_sal
  } else{
    ph_sal_onset = rbind(ph_sal_onset, cur_ph_sal)
  }
}
for(i in 1:length(jj)){
  curDat = ph_salinity[ph_salinity$Sal.class == jj[i],]
  ts = ts(data = curDat[, 6],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Sal = jj[i]
  cur_ph_sal = data.frame(TestType = "Salinity",
                          Variable = "Avg.Decline",
                          Category = Sal,
                          slope = round(slope, 3),
                          p.val = round(p.val, 4))
  if( i == 1){
    ph_sal_decline = cur_ph_sal
  } else{
    ph_sal_decline = rbind(ph_sal_decline, cur_ph_sal)
  }
}
for(i in 1:length(jj)){
  curDat = ph_salinity[ph_salinity$Sal.class == jj[i],]
  ts = ts(data = curDat[, 7],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Sal = jj[i]
  cur_ph_sal = data.frame(TestType = "Salinity",
                          Variable = "Frequency",
                          Category = Sal,
                          slope = round(slope, 3),
                          p.val = round(p.val, 4))
  if( i == 1){
    ph_sal_events = cur_ph_sal
  } else{
    ph_sal_events = rbind(ph_sal_events, cur_ph_sal)
  }
}

# DO Salinity

for(i in 1:length(ff)){
  curDat = do_salinity[do_salinity$Sal.class == ff[i],]
  ts = ts(data = curDat[, 3],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Sal = ff[i]
  cur_do_sal = data.frame(TestType = "Salinity",
                          Variable = "Avg.Duration",
                          Category = Sal,
                          slope = round(slope, 3),
                          p.val = round(p.val, 4))
  if( i == 1){
    do_sal_duration = cur_do_sal
  } else{
    do_sal_duration = rbind(do_sal_duration, cur_do_sal)
  }
}
for(i in 1:length(ff)){
  curDat = do_salinity[do_salinity$Sal.class == ff[i],]
  ts = ts(data = curDat[, 4],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Sal = ff[i]
  cur_do_sal = data.frame(TestType = "Salinity",
                          Variable = "Avg.CuInt",
                          Category = Sal,
                          slope = round(slope, 3),
                          p.val = round(p.val, 4))
  if( i == 1){
    do_sal_intensity = cur_do_sal
  } else{
    do_sal_intensity = rbind(do_sal_intensity, cur_do_sal)
  }
}
for(i in 1:length(ff)){
  curDat = do_salinity[do_salinity$Sal.class == ff[i],]
  ts = ts(data = curDat[, 5],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Sal = ff[i]
  cur_do_sal = data.frame(TestType = "Salinity",
                          Variable = "Avg.Onset",
                          Category = Sal,
                          slope = round(slope, 3),
                          p.val = round(p.val, 4))
  if( i == 1){
    do_sal_onset = cur_do_sal
  } else{
    do_sal_onset = rbind(do_sal_onset, cur_do_sal)
  }
}
for(i in 1:length(ff)){
  curDat = do_salinity[do_salinity$Sal.class == ff[i],]
  ts = ts(data = curDat[, 6],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Sal = ff[i]
  cur_do_sal = data.frame(TestType = "Salinity",
                          Variable = "Avg.Decline",
                          Category = Sal,
                          slope = round(slope, 3),
                          p.val = round(p.val, 4))
  if( i == 1){
    do_sal_decline = cur_do_sal
  } else{
    do_sal_decline = rbind(do_sal_decline, cur_do_sal)
  }
}
for(i in 1:length(ff)){
  curDat = do_salinity[do_salinity$Sal.class == ff[i],]
  ts = ts(data = curDat[, 7],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Sal = ff[i]
  cur_do_sal = data.frame(TestType = "Salinity",
                          Variable = "Frequency",
                          Category = Sal,
                          slope = round(slope, 3),
                          p.val = round(p.val, 4))
  if( i == 1){
    do_sal_events = cur_do_sal
  } else{
    do_sal_events = rbind(do_sal_events, cur_do_sal)
  }
}

# pH Season

for(i in 1:length(aa)){
  curDat = ph_season[ph_season$Season == aa[i],]
  ts = ts(data = curDat[, 3],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = aa[i]
  cur_ph_season = data.frame(TestType = "Season",
                             Variable = "Avg.Duration",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ph_season_duration = cur_ph_season
  } else{
    ph_season_duration = rbind(ph_season_duration, cur_ph_season)
  }
}
for(i in 1:length(aa)){
  curDat = ph_season[ph_season$Season == aa[i],]
  ts = ts(data = curDat[, 4],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = aa[i]
  cur_ph_season = data.frame(TestType = "Season",
                             Variable = "Avg.CuInt",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ph_season_intensity = cur_ph_season
  } else{
    ph_season_intensity = rbind(ph_season_intensity, cur_ph_season)
  }
}
for(i in 1:length(aa)){
  curDat = ph_season[ph_season$Season == aa[i],]
  ts = ts(data = curDat[, 5],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = aa[i]
  cur_ph_season = data.frame(TestType = "Season",
                             Variable = "Avg.Onset",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ph_season_onset = cur_ph_season
  } else{
    ph_season_onset = rbind(ph_season_onset, cur_ph_season)
  }
}
for(i in 1:length(aa)){
  curDat = ph_season[ph_season$Season == aa[i],]
  ts = ts(data = curDat[, 6],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = aa[i]
  cur_ph_season = data.frame(TestType = "Season",
                             Variable = "Avg.Decline",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ph_season_decline = cur_ph_season
  } else{
    ph_season_decline = rbind(ph_season_decline, cur_ph_season)
  }
}
for(i in 1:length(aa)){
  curDat = ph_season[ph_season$Season == aa[i],]
  ts = ts(data = curDat[, 7],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = aa[i]
  cur_ph_season = data.frame(TestType = "Season",
                             Variable = "Frequency",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ph_season_events = cur_ph_season
  } else{
    ph_season_events = rbind(ph_season_events, cur_ph_season)
  }
}

# DO Season

for(i in 1:length(ee)){
  curDat = do_season[do_season$Season == ee[i],]
  ts = ts(data = curDat[, 3],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = ee[i]
  cur_do_season = data.frame(TestType = "Season",
                             Variable = "Avg.Duration",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    do_season_duration = cur_do_season
  } else{
    do_season_duration = rbind(do_season_duration, cur_do_season)
  }
}
for(i in 1:length(ee)){
  curDat = do_season[do_season$Season == ee[i],]
  ts = ts(data = curDat[, 4],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = ee[i]
  cur_do_season = data.frame(TestType = "Season",
                             Variable = "Avg.CuInt",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    do_season_intensity = cur_do_season
  } else{
    do_season_intensity = rbind(do_season_intensity, cur_do_season)
  }
}
for(i in 1:length(ee)){
  curDat = do_season[do_season$Season == ee[i],]
  ts = ts(data = curDat[, 5],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = ee[i]
  cur_do_season = data.frame(TestType = "Season",
                             Variable = "Avg.Onset",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    do_season_onset = cur_do_season
  } else{
    do_season_onset = rbind(do_season_onset, cur_do_season)
  }
}
for(i in 1:length(ee)){
  curDat = do_season[do_season$Season == ee[i],]
  ts = ts(data = curDat[, 6],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = ee[i]
  cur_do_season = data.frame(TestType = "Season",
                             Variable = "Avg.Decline",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    do_season_decline = cur_do_season
  } else{
    do_season_decline = rbind(do_season_decline, cur_do_season)
  }
}
for(i in 1:length(ee)){
  curDat = do_season[do_season$Season == ee[i],]
  ts = ts(data = curDat[, 7],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = ee[i]
  cur_do_season = data.frame(TestType = "Season",
                             Variable = "Frequency",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    do_season_events = cur_do_season
  } else{
    do_season_events = rbind(do_season_events, cur_do_season)
  }
}

### Atmospheric Heatwave Analysis

setwd("~/School/Lab Work/Dissertation/Projects/MarineHeatwave/Meteorlogical")

dat <- fread("AllStation_ATM_Temp_dirty.csv")

# For sites that have switched locations, need to combine data
grb1 <- dat[, c(1,40:41)]
grb2 <- dat[, c(1,45:46)]
grb1$ATemp <- grb1$GRBGBMET_ATemp
grb2$ATemp <- grb2$GRBGLMET_ATemp
grb1$Flag <- grb1$GRBGBMET_F_ATemp
grb2$Flag <- grb2$GRBGLMET_F_ATemp
grb1 <- grb1[-c(114880:608702),-c(2:3)]
grb2 <- grb2[-c(1:114879),-c(2:3)]

# Create data frame for each site

ace_dirty <- dat[,c(1, 10:11)]
apa_dirty <- dat[,c(1, 5:6)]
cbv_dirty <- dat[,c(1, 20:21)]
del_dirty <- dat[,c(1, 25:26)]
elk_dirty <- dat[,c(1, 30:31)]
grb_dirty <- rbind(grb1, grb2)
hud_dirty <- dat[,c(1, 60:61)]
job_dirty <- dat[,c(1, 75:76)]
nar_dirty <- dat[,c(1, 105:106)]
noc_dirty <- dat[,c(1, 110:111)]
pdb_dirty <- dat[,c(1, 125,126)]
wel_dirty <- dat[,c(1, 180:181)]

ace_dirty$DateTimeStamp <- as.POSIXct(ace_dirty$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
apa_dirty$DateTimeStamp <- as.POSIXct(apa_dirty$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
cbv_dirty$DateTimeStamp <- as.POSIXct(cbv_dirty$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
del_dirty$DateTimeStamp <- as.POSIXct(del_dirty$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
elk_dirty$DateTimeStamp <- as.POSIXct(elk_dirty$DateTimeStamp, tz = "Pacific/Pitcairn", "%Y-%m-%d %H:%M")
grb_dirty$DateTimeStamp <- as.POSIXct(grb_dirty$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
hud_dirty$DateTimeStamp <- as.POSIXct(hud_dirty$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
job_dirty$DateTimeStamp <- as.POSIXct(job_dirty$DateTimeStamp, tz = "America/Virgin", "%Y-%m-%d %H:%M")
nar_dirty$DateTimeStamp <- as.POSIXct(nar_dirty$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
noc_dirty$DateTimeStamp <- as.POSIXct(noc_dirty$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")
pdb_dirty$DateTimeStamp <- as.POSIXct(pdb_dirty$DateTimeStamp, tz = "Pacific/Pitcairn", "%Y-%m-%d %H:%M")
wel_dirty$DateTimeStamp <- as.POSIXct(wel_dirty$DateTimeStamp, tz = "America/Jamaica", "%Y-%m-%d %H:%M")

ace_dirty$Year <- year(ace_dirty$DateTimeStamp)
apa_dirty$Year <- year(apa_dirty$DateTimeStamp)
cbv_dirty$Year <- year(cbv_dirty$DateTimeStamp)
del_dirty$Year <- year(del_dirty$DateTimeStamp)
elk_dirty$Year <- year(elk_dirty$DateTimeStamp)
grb_dirty$Year <- year(grb_dirty$DateTimeStamp)
hud_dirty$Year <- year(hud_dirty$DateTimeStamp)
job_dirty$Year <- year(job_dirty$DateTimeStamp)
nar_dirty$Year <- year(nar_dirty$DateTimeStamp)
noc_dirty$Year <- year(noc_dirty$DateTimeStamp)
pdb_dirty$Year <- year(pdb_dirty$DateTimeStamp)
wel_dirty$Year <- year(wel_dirty$DateTimeStamp)

ace_dirty <- ace_dirty[ace_dirty$Year >= 2002 & ace_dirty$Year<= 2019,]
apa_dirty <- apa_dirty[apa_dirty$Year >= 2002 & apa_dirty$Year<= 2019,]
cbv_dirty <- cbv_dirty[cbv_dirty$Year >= 2002 & cbv_dirty$Year<= 2019,]
del_dirty <- del_dirty[del_dirty$Year >= 2002 & del_dirty$Year<= 2019,]
elk_dirty <- elk_dirty[elk_dirty$Year >= 2002 & elk_dirty$Year<= 2019,]
grb_dirty <- grb_dirty[grb_dirty$Year >= 2002 & grb_dirty$Year<= 2019,]
hud_dirty <- hud_dirty[hud_dirty$Year >= 2002 & hud_dirty$Year<= 2019,]
job_dirty <- job_dirty[job_dirty$Year >= 2002 & job_dirty$Year<= 2019,]
nar_dirty <- nar_dirty[nar_dirty$Year >= 2002 & nar_dirty$Year<= 2019,]
noc_dirty <- noc_dirty[noc_dirty$Year >= 2002 & noc_dirty$Year<= 2019,]
pdb_dirty <- pdb_dirty[pdb_dirty$Year >= 2002 & pdb_dirty$Year<= 2019,]
wel_dirty <- wel_dirty[wel_dirty$Year >= 2002 & wel_dirty$Year<= 2019,]

# View flag codes and number of data points per flag codes

aa <- as.data.frame(table(ace_dirty$ACEBPMET_F_ATemp))
bb <- as.data.frame(table(apa_dirty$APAEBMET_F_ATemp))
cc <- as.data.frame(table(cbv_dirty$CBVTCMET_F_ATemp))
dd <- as.data.frame(table(del_dirty$DELSJMET_F_ATemp))
ee <- as.data.frame(table(elk_dirty$ELKCWMET_F_ATemp))
ff <- as.data.frame(table(grb_dirty$Flag))
gg <- as.data.frame(table(hud_dirty$HUDFSMET_F_ATemp))
hh <- as.data.frame(table(job_dirty$JOBJBMET_F_ATemp))
ii <- as.data.frame(table(nar_dirty$NARPCMET_F_ATemp))
jj <- as.data.frame(table(noc_dirty$NOCRCMET_F_ATemp))
kk <- as.data.frame(table(pdb_dirty$PDBPFMET_F_ATemp))
ll <- as.data.frame(table(wel_dirty$WELLFMET_F_ATemp))

# Create data frame of flag codes for NA replacement

ace_remove_codes <- aa[2:20, 1]
apa_remove_codes <- bb[c(2:26,31),1]
cbv_remove_codes <- cc[c(2:9, 13:15), 1]
del_remove_codes <- dd[2:18, 1]
elk_remove_codes <- ee[c(2:22, 27:29), 1]
grb_remove_codes <- ff[2:25, 1]
hud_remove_codes <- gg[c(2:15, 20, 22), 1]
job_remove_codes <- hh[c(2:16, 18, 23), 1]
nar_remove_codes <- ii[c(2:23, 25:31), 1]
noc_remove_codes <- jj[c(2:21, 28:30), 1]
pdb_remove_codes <- kk[2:19, 1]
wel_remove_codes <- ll[c(2:18, 23), 1]

# Replace temperature values with NA value based on data frame of flag codes

ace_dirty[ace_dirty$ACEBPMET_F_ATemp %in% ace_remove_codes, "ACEBPMET_ATemp"] <- NA
apa_dirty[apa_dirty$APAEBMET_F_ATemp %in% apa_remove_codes, "APAEBMET_ATemp"] <- NA
cbv_dirty[cbv_dirty$CBVTCMET_F_ATemp %in% cbv_remove_codes, "CBVTCMET_ATemp"] <- NA
del_dirty[del_dirty$DELSJMET_F_ATemp %in% del_remove_codes, "DELSJMET_ATemp"] <- NA
elk_dirty[elk_dirty$ELKCWMET_F_ATemp %in% elk_remove_codes, "ELKCWMET_ATemp"] <- NA
grb_dirty[grb_dirty$Flag %in% grb_remove_codes, "ATemp"] <- NA
hud_dirty[hud_dirty$HUDFSMET_F_ATemp %in% hud_remove_codes, "HUDFSMET_ATemp"] <- NA
job_dirty[job_dirty$JOBJBMET_F_ATemp %in% job_remove_codes, "JOBJBMET_ATemp"] <- NA
nar_dirty[nar_dirty$NARPCMET_F_ATemp %in% nar_remove_codes, "NARPCMET_ATemp"] <- NA
noc_dirty[noc_dirty$NOCRCMET_F_ATemp %in% noc_remove_codes, "NOCRCMET_ATemp"] <- NA
pdb_dirty[pdb_dirty$PDBPFMET_F_ATemp %in% pdb_remove_codes, "PDBPFMET_ATemp"] <- NA
wel_dirty[wel_dirty$WELLFMET_F_ATemp %in% wel_remove_codes, "WELLFMET_ATemp"] <- NA

# Create clean data frame

ace_clean <- ace_dirty
apa_clean <- apa_dirty
cbv_clean <- cbv_dirty
del_clean <- del_dirty
elk_clean <- elk_dirty
grb_clean <- grb_dirty
hud_clean <- hud_dirty
job_clean <- job_dirty
nar_clean <- nar_dirty
noc_clean <- noc_dirty
pdb_clean <- pdb_dirty
wel_clean <- wel_dirty

# Remove obvious outliers

apa_clean$APAEBMET_ATemp[apa_clean$APAEBMET_ATemp <= -20] <- NA

# Calculate daily averages from 15-min. observations

ace_clean$date <- ace_clean$DateTimeStamp
ace_clean <- ace_clean[,2:5]
ace_clean <- ace_clean[, c(4,3,1,2)]

apa_clean$date <- apa_clean$DateTimeStamp
apa_clean <- apa_clean[,2:5]
apa_clean <- apa_clean[, c(4,3,1,2)]

cbv_clean$date <- cbv_clean$DateTimeStamp
cbv_clean <- cbv_clean[,2:5]
cbv_clean <- cbv_clean[,c(4,3,1,2)]

del_clean$date <- del_clean$DateTimeStamp
del_clean <- del_clean[,2:5]
del_clean <- del_clean[,c(4,3,1,2)]

elk_clean$date <- elk_clean$DateTimeStamp
elk_clean <- elk_clean[,2:5]
elk_clean <- elk_clean[,c(4,3,1,2)]

grb_clean$date <- grb_clean$DateTimeStamp
grb_clean <- grb_clean[,2:5]
grb_clean <- grb_clean[,c(4,3,1,2)]

hud_clean$date <- hud_clean$DateTimeStamp
hud_clean <- hud_clean[,2:5]
hud_clean <- hud_clean[,c(4,3,1,2)]

job_clean$date <- job_clean$DateTimeStamp
job_clean <- job_clean[,2:5]
job_clean <- job_clean[,c(4,3,1,2)]

nar_clean$date <- nar_clean$DateTimeStamp
nar_clean <- nar_clean[,2:5]
nar_clean <- nar_clean[,c(4,3,1,2)]

noc_clean$date <- noc_clean$DateTimeStamp
noc_clean <- noc_clean[,2:5]
noc_clean <- noc_clean[,c(4,3,1,2)]

pdb_clean$date <- pdb_clean$DateTimeStamp
pdb_clean <- pdb_clean[,2:5]
pdb_clean <- pdb_clean[,c(4,3,1,2)]

wel_clean$date <- wel_clean$DateTimeStamp
wel_clean <- wel_clean[,2:5]
wel_clean <- wel_clean[,c(4,3,1,2)]

a.15 <- as.data.frame(seq(from = min(ace_clean$date), to = max(ace_clean$date), by = 900))
names(a.15)[1] <- "date"

b.15 <- as.data.frame(seq(from = min(apa_clean$date), to = max(apa_clean$date), by = 900))
names(b.15)[1] <- "date"

c.15 <- as.data.frame(seq(from = min(cbv_clean$date), to = max(cbv_clean$date), by = 900))
names(c.15)[1] <- "date"

d.15 <- as.data.frame(seq(from = min(del_clean$date), to = max(del_clean$date), by = 900))
names(d.15)[1] <- "date"

e.15 <- as.data.frame(seq(from = min(elk_clean$date), to = max(elk_clean$date), by = 900))
names(e.15)[1] <- "date"

f.15 <- as.data.frame(seq(from = min(grb_clean$date), to = max(grb_clean$date), by = 900))
names(f.15)[1] <- "date"

g.15 <- as.data.frame(seq(from = min(hud_clean$date), to = max(hud_clean$date), by = 900))
names(g.15)[1] <- "date"

h.15 <- as.data.frame(seq(from = min(job_clean$date), to = max(job_clean$date), by = 900))
names(h.15)[1] <- "date"

i.15 <- as.data.frame(seq(from = min(nar_clean$date), to = max(nar_clean$date), by = 900))
names(i.15)[1] <- "date"

j.15 <- as.data.frame(seq(from = min(noc_clean$date), to = max(noc_clean$date), by = 900))
names(j.15)[1] <- "date"

k.15 <- as.data.frame(seq(from = min(pdb_clean$date), to = max(pdb_clean$date), by = 900))
names(k.15)[1] <- "date"

l.15 <- as.data.frame(seq(from = min(wel_clean$date), to = max(wel_clean$date), by = 900))
names(l.15)[1] <- "date"

ace_clean_15min <- merge(ace_clean, a.15, by = "date", all = TRUE)
apa_clean_15min <- merge(apa_clean, b.15, by = "date", all = TRUE)
cbv_clean_15min <- merge(cbv_clean, c.15, by = "date", all = TRUE)
del_clean_15min <- merge(del_clean, d.15, by = "date", all = TRUE)
elk_clean_15min <- merge(elk_clean, e.15, by = "date", all = TRUE)
grb_clean_15min <- merge(grb_clean, f.15, by = "date", all = TRUE)
hud_clean_15min <- merge(hud_clean, g.15, by = "date", all = TRUE)
job_clean_15min <- merge(job_clean, h.15, by = "date", all = TRUE)
nar_clean_15min <- merge(nar_clean, i.15, by = "date", all = TRUE)
noc_clean_15min <- merge(noc_clean, j.15, by = "date", all = TRUE)
pdb_clean_15min <- merge(pdb_clean, k.15, by = "date", all = TRUE)
wel_clean_15min <- merge(wel_clean, l.15, by = "date", all = TRUE)

ace_clean_dailyAVG <- timeAverage(mydata = ace_clean_15min,
                                  avg.time = "day",
                                  statistic = "mean",
                                  data.thresh = 75)
apa_clean_dailyAVG <- timeAverage(mydata = apa_clean_15min,
                                  avg.time = "day",
                                  statistic = "mean", 
                                  data.thresh = 75)
cbv_clean_dailyAVG <- timeAverage(mydata = cbv_clean_15min,
                                  avg.time = "day",
                                  statistic = "mean", 
                                  data.thresh = 75)
del_clean_dailyAVG <- timeAverage(mydata = del_clean_15min,
                                  avg.time = "day",
                                  statistic = "mean", 
                                  data.thresh = 75)
elk_clean_dailyAVG <- timeAverage(mydata = elk_clean_15min,
                                  avg.time = "day",
                                  statistic = "mean", 
                                  data.thresh = 75)
grb_clean_dailyAVG <- timeAverage(mydata = grb_clean_15min,
                                  avg.time = "day",
                                  statistic = "mean", 
                                  data.thresh = 75)
hud_clean_dailyAVG <- timeAverage(mydata = hud_clean_15min,
                                  avg.time = "day",
                                  statistic = "mean", 
                                  data.thresh = 75)
job_clean_dailyAVG <- timeAverage(mydata = job_clean_15min,
                                  avg.time = "day",
                                  statistic = "mean", 
                                  data.thresh = 75)
nar_clean_dailyAVG <- timeAverage(mydata = nar_clean_15min,
                                  avg.time = "day",
                                  statistic = "mean", 
                                  data.thresh = 75)
noc_clean_dailyAVG <- timeAverage(mydata = noc_clean_15min,
                                  avg.time = "day",
                                  statistic = "mean", 
                                  data.thresh = 75)
pdb_clean_dailyAVG <- timeAverage(mydata = pdb_clean_15min,
                                  avg.time = "day",
                                  statistic = "mean", 
                                  data.thresh = 75)
wel_clean_dailyAVG <- timeAverage(mydata = wel_clean_15min,
                                  avg.time = "day",
                                  statistic = "mean", 
                                  data.thresh = 75)

ace_clean_dailyAVG$site <- "ace"
apa_clean_dailyAVG$site <- "apa"
cbv_clean_dailyAVG$site <- "cbv"
del_clean_dailyAVG$site <- "del"
elk_clean_dailyAVG$site <- "elk"
grb_clean_dailyAVG$site <- "grb"
hud_clean_dailyAVG$site <- "hud"
job_clean_dailyAVG$site <- "job"
nar_clean_dailyAVG$site <- "nar"
noc_clean_dailyAVG$site <- "noc"
pdb_clean_dailyAVG$site <- "pdb"
wel_clean_dailyAVG$site <- "wel"

names(ace_clean_dailyAVG)[3] <- "ATemp"
names(apa_clean_dailyAVG)[3] <- "ATemp"
names(cbv_clean_dailyAVG)[3] <- "ATemp"
names(del_clean_dailyAVG)[3] <- "ATemp"
names(elk_clean_dailyAVG)[3] <- "ATemp"
names(grb_clean_dailyAVG)[3] <- "ATemp"
names(hud_clean_dailyAVG)[3] <- "ATemp"
names(job_clean_dailyAVG)[3] <- "ATemp"
names(nar_clean_dailyAVG)[3] <- "ATemp"
names(noc_clean_dailyAVG)[3] <- "ATemp"
names(pdb_clean_dailyAVG)[3] <- "ATemp"
names(wel_clean_dailyAVG)[3] <- "ATemp"

all_ATM_dailyAVG <- rbind(ace_clean_dailyAVG, apa_clean_dailyAVG, cbv_clean_dailyAVG, del_clean_dailyAVG,
                          elk_clean_dailyAVG, grb_clean_dailyAVG, hud_clean_dailyAVG, job_clean_dailyAVG,
                          nar_clean_dailyAVG, noc_clean_dailyAVG, pdb_clean_dailyAVG, wel_clean_dailyAVG)

all_ATM_dailyAVG$date <- as.Date(all_ATM_dailyAVG$date)

zz <- unique(all_ATM_dailyAVG$site)

for(i in 1:length(zz)){
  curDat = all_ATM_dailyAVG[all_ATM_dailyAVG$site == zz[i],]
  ts_Warm = ts2clm(curDat, x = date, y = ATemp,
                   climatologyPeriod = c(min(curDat$date), max(curDat$date)))
  ts_Cold = ts2clm(curDat, x = date, y = ATemp,
                   climatologyPeriod = c(min(curDat$date), max(curDat$date)), pctile = 10)
  de_Warm = detect_event(ts_Warm, x = date, y = ATemp, minDuration = 3, maxGap = 0)
  de_Cold = detect_event(ts_Cold, x = date, y = ATemp, coldSpells = TRUE, minDuration = 3, maxGap = 0)
  cat_Warm = category(de_Warm, y = ATemp, S = FALSE)
  cat_Cold = category(de_Cold, y = ATemp, S = FALSE)
  curEventsWarm = de_Warm$event
  curEventsCold = de_Cold$event
  curEventsWarm$StationCode = zz[i]
  curEventsCold$StationCode = zz[i]
  curCatWarm = cat_Warm
  curCatCold = cat_Cold
  curCatWarm$Station = zz[i]
  curCatCold$Station = zz[i]
  if( i == 1){
    saveDatWarm = curEventsWarm
    saveDatCold = curEventsCold
    saveCatWarm = curCatWarm
    saveCatCold = curCatCold
  } else{
    saveDatWarm = rbind(saveDatWarm, curEventsWarm)
    saveDatCold = rbind(saveDatCold, curEventsCold)
    saveCatWarm = rbind(saveCatWarm, curCatWarm)
    saveCatCold = rbind(saveCatCold, curCatCold)
  }
}

### Figure 3: Exported image as width = 750 height = 650

AHW <- saveDatWarm
ahw_overlap <- AHW[,c(6,8,23)]
MHW2 <- MHW[MHW$Year >= 2002 & MHW$Year<= 2019,]
mhw_overlap <- MHW2[,c(6,8,23)]

MHW3 <- MHW[MHW$Year >= 1996 & MHW$Year <= 2019,]
mhw3_overlap <- MHW3[,c(6,8,23)]
lowDO <- LDO[LDO$Year >= 1996 & LDO$Year <= 2019,]
lowDO_overlap <- lowDO[,c(6,8,23)]
lowPH <- LPH[LPH$Year >= 1996 & LPH$Year <= 2019,]
lowPH_overlap <- lowPH[,c(6,8,23)]

df_ahw <- split(ahw_overlap, ahw_overlap$StationCode)
df_mhw <- split(mhw_overlap, mhw_overlap$Station)
df_mhw3 <- split(mhw3_overlap, mhw3_overlap$Station)
df_lowDO <- split(lowDO_overlap, lowDO_overlap$Station)
df_lowPH <- split(lowPH_overlap, lowPH_overlap$Station)

df_mhw$acesp$InRange <- df_mhw$acesp$date_start %in% unlist(Map(':', df_ahw$ace$date_start, df_ahw$ace$date_end))
df_mhw$apaeb$InRange <- df_mhw$apaeb$date_start %in% unlist(Map(':', df_ahw$apa$date_start, df_ahw$apa$date_end))
df_mhw$apaes$InRange <- df_mhw$apaes$date_start %in% unlist(Map(':', df_ahw$apa$date_start, df_ahw$apa$date_end))
df_mhw$cbvtc$InRange <- df_mhw$cbvtc$date_start %in% unlist(Map(':', df_ahw$cbv$date_start, df_ahw$cbv$date_end))
df_mhw$delbl$InRange <- df_mhw$delbl$date_start %in% unlist(Map(':', df_ahw$del$date_start, df_ahw$del$date_end))
df_mhw$delsl$InRange <- df_mhw$delsl$date_start %in% unlist(Map(':', df_ahw$del$date_start, df_ahw$del$date_end))
df_mhw$elkap$InRange <- df_mhw$elkap$date_start %in% unlist(Map(':', df_ahw$elk$date_start, df_ahw$elk$date_end))
df_mhw$elksm$InRange <- df_mhw$elksm$date_start %in% unlist(Map(':', df_ahw$elk$date_start, df_ahw$elk$date_end))
df_mhw$grbgb$InRange <- df_mhw$grbgb$date_start %in% unlist(Map(':', df_ahw$grb$date_start, df_ahw$grb$date_end))
df_mhw$hudsk$InRange <- df_mhw$hudsk$date_start %in% unlist(Map(':', df_ahw$hud$date_start, df_ahw$hud$date_end))
df_mhw$hudts$InRange <- df_mhw$hudts$date_start %in% unlist(Map(':', df_ahw$hud$date_start, df_ahw$hud$date_end))
df_mhw$job09$InRange <- df_mhw$job09$date_start %in% unlist(Map(':', df_ahw$job$date_start, df_ahw$job$date_end))
df_mhw$narpc$InRange <- df_mhw$narpc$date_start %in% unlist(Map(':', df_ahw$nar$date_start, df_ahw$nar$date_end))
df_mhw$nocec$InRange <- df_mhw$nocec$date_start %in% unlist(Map(':', df_ahw$noc$date_start, df_ahw$noc$date_end))
df_mhw$nocrc$InRange <- df_mhw$nocrc$date_start %in% unlist(Map(':', df_ahw$noc$date_start, df_ahw$noc$date_end))
df_mhw$pdbby$InRange <- df_mhw$pdbby$date_start %in% unlist(Map(':', df_ahw$pdb$date_start, df_ahw$pdb$date_end))
df_mhw$welin$InRange <- df_mhw$welin$date_start %in% unlist(Map(':', df_ahw$wel$date_start, df_ahw$wel$date_end))

df_lowDO$acesp$InRange <- df_lowDO$acesp$date_start %in% unlist(Map(':', df_mhw3$acesp$date_start, df_mhw3$acesp$date_end))
df_lowDO$apaeb$InRange <- df_lowDO$apaeb$date_start %in% unlist(Map(':', df_mhw3$apaeb$date_start, df_mhw3$apaeb$date_end))
df_lowDO$apaes$InRange <- df_lowDO$apaes$date_start %in% unlist(Map(':', df_mhw3$apaes$date_start, df_mhw3$apaes$date_end))
df_lowDO$cbvtc$InRange <- df_lowDO$cbvtc$date_start %in% unlist(Map(':', df_mhw3$cbvtc$date_start, df_mhw3$cbvtc$date_end))
df_lowDO$delbl$InRange <- df_lowDO$delbl$date_start %in% unlist(Map(':', df_mhw3$delbl$date_start, df_mhw3$delbl$date_end))
df_lowDO$delsl$InRange <- df_lowDO$delsl$date_start %in% unlist(Map(':', df_mhw3$delsl$date_start, df_mhw3$delsl$date_end))
df_lowDO$elkap$InRange <- df_lowDO$elkap$date_start %in% unlist(Map(':', df_mhw3$elkap$date_start, df_mhw3$elkap$date_end))
df_lowDO$elksm$InRange <- df_lowDO$elksm$date_start %in% unlist(Map(':', df_mhw3$elksm$date_start, df_mhw3$elksm$date_end))
df_lowDO$grbgb$InRange <- df_lowDO$grbgb$date_start %in% unlist(Map(':', df_mhw3$grbgb$date_start, df_mhw3$grbgb$date_end))
df_lowDO$hudsk$InRange <- df_lowDO$hudsk$date_start %in% unlist(Map(':', df_mhw3$hudsk$date_start, df_mhw3$hudsk$date_end))
df_lowDO$hudts$InRange <- df_lowDO$hudts$date_start %in% unlist(Map(':', df_mhw3$hudts$date_start, df_mhw3$hudts$date_end))
df_lowDO$job09$InRange <- df_lowDO$job09$date_start %in% unlist(Map(':', df_mhw3$job09$date_start, df_mhw3$job09$date_end))
df_lowDO$narpc$InRange <- df_lowDO$narpc$date_start %in% unlist(Map(':', df_mhw3$narpc$date_start, df_mhw3$narpc$date_end))
df_lowDO$nocec$InRange <- df_lowDO$nocec$date_start %in% unlist(Map(':', df_mhw3$nocec$date_start, df_mhw3$nocec$date_end))
df_lowDO$nocrc$InRange <- df_lowDO$nocrc$date_start %in% unlist(Map(':', df_mhw3$nocrc$date_start, df_mhw3$nocrc$date_end))
df_lowDO$pdbby$InRange <- df_lowDO$pdbby$date_start %in% unlist(Map(':', df_mhw3$pdbby$date_start, df_mhw3$pdbby$date_end))
df_lowDO$welin$InRange <- df_lowDO$welin$date_start %in% unlist(Map(':', df_mhw3$welin$date_start, df_mhw3$welin$date_end))

df_lowPH$acesp$InRange <- df_lowPH$acesp$date_start %in% unlist(Map(':', df_mhw3$acesp$date_start, df_mhw3$acesp$date_end))
df_lowPH$apaeb$InRange <- df_lowPH$apaeb$date_start %in% unlist(Map(':', df_mhw3$apaeb$date_start, df_mhw3$apaeb$date_end))
df_lowPH$apaes$InRange <- df_lowPH$apaes$date_start %in% unlist(Map(':', df_mhw3$apaes$date_start, df_mhw3$apaes$date_end))
df_lowPH$cbvtc$InRange <- df_lowPH$cbvtc$date_start %in% unlist(Map(':', df_mhw3$cbvtc$date_start, df_mhw3$cbvtc$date_end))
df_lowPH$delbl$InRange <- df_lowPH$delbl$date_start %in% unlist(Map(':', df_mhw3$delbl$date_start, df_mhw3$delbl$date_end))
df_lowPH$delsl$InRange <- df_lowPH$delsl$date_start %in% unlist(Map(':', df_mhw3$delsl$date_start, df_mhw3$delsl$date_end))
df_lowPH$elkap$InRange <- df_lowPH$elkap$date_start %in% unlist(Map(':', df_mhw3$elkap$date_start, df_mhw3$elkap$date_end))
df_lowPH$elksm$InRange <- df_lowPH$elksm$date_start %in% unlist(Map(':', df_mhw3$elksm$date_start, df_mhw3$elksm$date_end))
df_lowPH$grbgb$InRange <- df_lowPH$grbgb$date_start %in% unlist(Map(':', df_mhw3$grbgb$date_start, df_mhw3$grbgb$date_end))
df_lowPH$hudsk$InRange <- df_lowPH$hudsk$date_start %in% unlist(Map(':', df_mhw3$hudsk$date_start, df_mhw3$hudsk$date_end))
df_lowPH$hudts$InRange <- df_lowPH$hudts$date_start %in% unlist(Map(':', df_mhw3$hudts$date_start, df_mhw3$hudts$date_end))
df_lowPH$job09$InRange <- df_lowPH$job09$date_start %in% unlist(Map(':', df_mhw3$job09$date_start, df_mhw3$job09$date_end))
df_lowPH$narpc$InRange <- df_lowPH$narpc$date_start %in% unlist(Map(':', df_mhw3$narpc$date_start, df_mhw3$narpc$date_end))
df_lowPH$nocec$InRange <- df_lowPH$nocec$date_start %in% unlist(Map(':', df_mhw3$nocec$date_start, df_mhw3$nocec$date_end))
df_lowPH$nocrc$InRange <- df_lowPH$nocrc$date_start %in% unlist(Map(':', df_mhw3$nocrc$date_start, df_mhw3$nocrc$date_end))
df_lowPH$pdbby$InRange <- df_lowPH$pdbby$date_start %in% unlist(Map(':', df_mhw3$pdbby$date_start, df_mhw3$pdbby$date_end))
df_lowPH$welin$InRange <- df_lowPH$welin$date_start %in% unlist(Map(':', df_mhw3$welin$date_start, df_mhw3$welin$date_end))

### The total number of AHW & MHW per station

MHW_total_InRange <- sum(table(df_mhw$acesp$InRange)["TRUE"],
                         table(df_mhw$apaeb$InRange)["TRUE"],
                         table(df_mhw$apaes$InRange)["TRUE"],
                         table(df_mhw$cbvtc$InRange)["TRUE"],
                         table(df_mhw$delbl$InRange)["TRUE"],
                         table(df_mhw$delsl$InRange)["TRUE"],
                         table(df_mhw$elkap$InRange)["TRUE"],
                         table(df_mhw$elksm$InRange)["TRUE"],
                         table(df_mhw$grbgb$InRange)["TRUE"],
                         table(df_mhw$hudsk$InRange)["TRUE"],
                         table(df_mhw$hudts$InRange)["TRUE"],
                         table(df_mhw$job09$InRange)["TRUE"],
                         table(df_mhw$narpc$InRange)["TRUE"],
                         table(df_mhw$nocec$InRange)["TRUE"],
                         table(df_mhw$nocrc$InRange)["TRUE"],
                         table(df_mhw$pdbby$InRange)["TRUE"],
                         table(df_mhw$welin$InRange)["TRUE"])

lowDO_total_InRange <- sum(table(df_lowDO$acesp$InRange)["TRUE"],
                           table(df_lowDO$apaeb$InRange)["TRUE"],
                           table(df_lowDO$apaes$InRange)["TRUE"],
                           table(df_lowDO$cbvtc$InRange)["TRUE"],
                           table(df_lowDO$delbl$InRange)["TRUE"],
                           table(df_lowDO$delsl$InRange)["TRUE"],
                           table(df_lowDO$elkap$InRange)["TRUE"],
                           table(df_lowDO$elksm$InRange)["TRUE"],
                           table(df_lowDO$grbgb$InRange)["TRUE"],
                           table(df_lowDO$hudsk$InRange)["TRUE"],
                           table(df_lowDO$hudts$InRange)["TRUE"],
                           table(df_lowDO$job09$InRange)["TRUE"],
                           table(df_lowDO$narpc$InRange)["TRUE"],
                           table(df_lowDO$nocec$InRange)["TRUE"],
                           table(df_lowDO$nocrc$InRange)["TRUE"],
                           table(df_lowDO$pdbby$InRange)["TRUE"],
                           table(df_lowDO$welin$InRange)["TRUE"])

lowPH_total_InRange <- sum(table(df_lowPH$acesp$InRange)["TRUE"],
                           table(df_lowPH$apaeb$InRange)["TRUE"],
                           table(df_lowPH$apaes$InRange)["TRUE"],
                           table(df_lowPH$cbvtc$InRange)["TRUE"],
                           table(df_lowPH$delbl$InRange)["TRUE"],
                           table(df_lowPH$delsl$InRange)["TRUE"],
                           table(df_lowPH$elkap$InRange)["TRUE"],
                           table(df_lowPH$elksm$InRange)["TRUE"],
                           table(df_lowPH$grbgb$InRange)["TRUE"],
                           table(df_lowPH$hudsk$InRange)["TRUE"],
                           table(df_lowPH$hudts$InRange)["TRUE"],
                           table(df_lowPH$job09$InRange)["TRUE"],
                           table(df_lowPH$narpc$InRange)["TRUE"],
                           table(df_lowPH$nocec$InRange)["TRUE"],
                           table(df_lowPH$nocrc$InRange)["TRUE"],
                           table(df_lowPH$pdbby$InRange)["TRUE"],
                           table(df_lowPH$welin$InRange)["TRUE"],
                           na.rm = TRUE)

MHW_total_events <- sum(nrow(df_mhw$acesp),
                       nrow(df_mhw$apaeb),
                       nrow(df_mhw$apaes),
                       nrow(df_mhw$cbvtc),
                       nrow(df_mhw$delbl),
                       nrow(df_mhw$delsl),
                       nrow(df_mhw$elkap),
                       nrow(df_mhw$elksm),
                       nrow(df_mhw$grbgb),
                       nrow(df_mhw$hudsk),
                       nrow(df_mhw$hudts),
                       nrow(df_mhw$job09),
                       nrow(df_mhw$narpc),
                       nrow(df_mhw$nocec),
                       nrow(df_mhw$nocrc),
                       nrow(df_mhw$pdbby),
                       nrow(df_mhw$welin))

lowDO_total_MHWevents <- sum(nrow(df_lowDO$acesp),
                             nrow(df_lowDO$apaeb),
                             nrow(df_lowDO$apaes),
                             nrow(df_lowDO$cbvtc),
                             nrow(df_lowDO$delbl),
                             nrow(df_lowDO$delsl),
                             nrow(df_lowDO$elkap),
                             nrow(df_lowDO$elksm),
                             nrow(df_lowDO$grbgb),
                             nrow(df_lowDO$hudsk),
                             nrow(df_lowDO$hudts),
                             nrow(df_lowDO$job09),
                             nrow(df_lowDO$narpc),
                             nrow(df_lowDO$nocec),
                             nrow(df_lowDO$nocrc),
                             nrow(df_lowDO$pdbby),
                             nrow(df_lowDO$welin))

lowPH_total_MHWevents <- sum(nrow(df_lowPH$acesp),
                             nrow(df_lowPH$apaeb),
                             nrow(df_lowPH$apaes),
                             nrow(df_lowPH$cbvtc),
                             nrow(df_lowPH$delbl),
                             nrow(df_lowPH$delsl),
                             nrow(df_lowPH$elkap),
                             nrow(df_lowPH$elksm),
                             nrow(df_lowPH$grbgb),
                             nrow(df_lowPH$hudsk),
                             nrow(df_lowPH$hudts),
                             nrow(df_lowPH$job09),
                             nrow(df_lowPH$narpc),
                             nrow(df_lowPH$nocec),
                             nrow(df_lowPH$nocrc),
                             nrow(df_lowPH$pdbby),
                             nrow(df_lowPH$welin))

round(((MHW_total_InRange/MHW_total_events)*100), digits = 0)
round(((lowDO_total_InRange/lowDO_total_MHWevents)*100), digits = 0)
round(((lowPH_total_InRange/lowPH_total_MHWevents)*100), digits = 0)

df_AHWMHW <- data.frame(matrix(ncol = 4, nrow = 17))
x <- c("Station", "NumCoOccurance", "TotalEvents", "Proportion_CoOccurrance(%)")
colnames(df_AHWMHW) <- x

df_mhwDO <- data.frame(matrix(ncol = 4, nrow = 17))
x <- c("Station", "NumCoOccurance", "TotalEvents", "Proportion_CoOccurrance(%)")
colnames(df_mhwDO) <- x

df_mhwPH <- data.frame(matrix(ncol = 4, nrow = 17))
x <- c("Station", "NumCoOccurance", "TotalEvents", "Proportion_CoOccurrance(%)")
colnames(df_mhwPH) <- x

df_AHWMHW[1,1] <- "acesp"
df_AHWMHW[2,1] <- "apaes"
df_AHWMHW[3,1] <- "apaeb"
df_AHWMHW[4,1] <- "cbvtc"
df_AHWMHW[5,1] <- "delbl"
df_AHWMHW[6,1] <- "delsl"
df_AHWMHW[7,1] <- "elkap"
df_AHWMHW[8,1] <- "elksm"
df_AHWMHW[9,1] <- "grbgb"
df_AHWMHW[10,1] <- "hudsk"
df_AHWMHW[11,1] <- "hudts"
df_AHWMHW[12,1] <- "job09"
df_AHWMHW[13,1] <- "narpc"
df_AHWMHW[14,1] <- "nocec"
df_AHWMHW[15,1] <- "nocrc"
df_AHWMHW[16,1] <- "pdbby"
df_AHWMHW[17,1] <- "welin"

df_mhwDO[1,1] <- "acesp"
df_mhwDO[2,1] <- "apaes"
df_mhwDO[3,1] <- "apaeb"
df_mhwDO[4,1] <- "cbvtc"
df_mhwDO[5,1] <- "delbl"
df_mhwDO[6,1] <- "delsl"
df_mhwDO[7,1] <- "elkap"
df_mhwDO[8,1] <- "elksm"
df_mhwDO[9,1] <- "grbgb"
df_mhwDO[10,1] <- "hudsk"
df_mhwDO[11,1] <- "hudts"
df_mhwDO[12,1] <- "job09"
df_mhwDO[13,1] <- "narpc"
df_mhwDO[14,1] <- "nocec"
df_mhwDO[15,1] <- "nocrc"
df_mhwDO[16,1] <- "pdbby"
df_mhwDO[17,1] <- "welin"

df_mhwPH[1,1] <- "acesp"
df_mhwPH[2,1] <- "apaes"
df_mhwPH[3,1] <- "apaeb"
df_mhwPH[4,1] <- "cbvtc"
df_mhwPH[5,1] <- "delbl"
df_mhwPH[6,1] <- "delsl"
df_mhwPH[7,1] <- "elkap"
df_mhwPH[8,1] <- "elksm"
df_mhwPH[9,1] <- "grbgb"
df_mhwPH[10,1] <- "hudsk"
df_mhwPH[11,1] <- "hudts"
df_mhwPH[12,1] <- "job09"
df_mhwPH[13,1] <- "narpc"
df_mhwPH[14,1] <- "nocec"
df_mhwPH[15,1] <- "nocrc"
df_mhwPH[16,1] <- "pdbby"
df_mhwPH[17,1] <- "welin"

df_AHWMHW[1,2] <- sum(table(df_mhw$acesp$InRange)["TRUE"])
df_AHWMHW[2,2] <- sum(table(df_mhw$apaes$InRange)["TRUE"])
df_AHWMHW[3,2] <- sum(table(df_mhw$apaeb$InRange)["TRUE"])
df_AHWMHW[4,2] <- sum(table(df_mhw$cbvtc$InRange)["TRUE"])
df_AHWMHW[5,2] <- sum(table(df_mhw$delbl$InRange)["TRUE"])
df_AHWMHW[6,2] <- sum(table(df_mhw$delsl$InRange)["TRUE"])
df_AHWMHW[7,2] <- sum(table(df_mhw$elkap$InRange)["TRUE"])
df_AHWMHW[8,2] <- sum(table(df_mhw$elksm$InRange)["TRUE"])
df_AHWMHW[9,2] <- sum(table(df_mhw$grbgb$InRange)["TRUE"])
df_AHWMHW[10,2] <- sum(table(df_mhw$hudsk$InRange)["TRUE"])
df_AHWMHW[11,2] <- sum(table(df_mhw$hudts$InRange)["TRUE"])
df_AHWMHW[12,2] <- sum(table(df_mhw$job09$InRange)["TRUE"])
df_AHWMHW[13,2] <- sum(table(df_mhw$narpc$InRange)["TRUE"])
df_AHWMHW[14,2] <- sum(table(df_mhw$nocec$InRange)["TRUE"])
df_AHWMHW[15,2] <- sum(table(df_mhw$nocrc$InRange)["TRUE"])
df_AHWMHW[16,2] <- sum(table(df_mhw$pdbby$InRange)["TRUE"])
df_AHWMHW[17,2] <- sum(table(df_mhw$welin$InRange)["TRUE"])

df_mhwDO[1,2] <- sum(table(df_lowDO$acesp$InRange)["TRUE"])
df_mhwDO[2,2] <- sum(table(df_lowDO$apaes$InRange)["TRUE"])
df_mhwDO[3,2] <- sum(table(df_lowDO$apaeb$InRange)["TRUE"])
df_mhwDO[4,2] <- sum(table(df_lowDO$cbvtc$InRange)["TRUE"])
df_mhwDO[5,2] <- sum(table(df_lowDO$delbl$InRange)["TRUE"])
df_mhwDO[6,2] <- sum(table(df_lowDO$delsl$InRange)["TRUE"])
df_mhwDO[7,2] <- sum(table(df_lowDO$elkap$InRange)["TRUE"])
df_mhwDO[8,2] <- sum(table(df_lowDO$elksm$InRange)["TRUE"])
df_mhwDO[9,2] <- sum(table(df_lowDO$grbgb$InRange)["TRUE"])
df_mhwDO[10,2] <- sum(table(df_lowDO$hudsk$InRange)["TRUE"])
df_mhwDO[11,2] <- sum(table(df_lowDO$hudts$InRange)["TRUE"])
df_mhwDO[12,2] <- sum(table(df_lowDO$job09$InRange)["TRUE"])
df_mhwDO[13,2] <- sum(table(df_lowDO$narpc$InRange)["TRUE"])
df_mhwDO[14,2] <- sum(table(df_lowDO$nocec$InRange)["TRUE"])
df_mhwDO[15,2] <- sum(table(df_lowDO$nocrc$InRange)["TRUE"])
df_mhwDO[16,2] <- sum(table(df_lowDO$pdbby$InRange)["TRUE"])
df_mhwDO[17,2] <- sum(table(df_lowDO$welin$InRange)["TRUE"])

df_mhwPH[1,2] <- sum(table(df_lowPH$acesp$InRange)["TRUE"])
df_mhwPH[2,2] <- sum(table(df_lowPH$apaes$InRange)["TRUE"])
df_mhwPH[3,2] <- sum(table(df_lowPH$apaeb$InRange)["TRUE"])
df_mhwPH[4,2] <- sum(table(df_lowPH$cbvtc$InRange)["TRUE"])
df_mhwPH[5,2] <- sum(table(df_lowPH$delbl$InRange)["TRUE"])
df_mhwPH[6,2] <- sum(table(df_lowPH$delsl$InRange)["TRUE"])
df_mhwPH[7,2] <- sum(table(df_lowPH$elkap$InRange)["TRUE"])
df_mhwPH[8,2] <- sum(table(df_lowPH$elksm$InRange)["TRUE"])
df_mhwPH[9,2] <- sum(table(df_lowPH$grbgb$InRange)["TRUE"])
df_mhwPH[10,2] <- sum(table(df_lowPH$hudsk$InRange)["TRUE"])
df_mhwPH[11,2] <- sum(table(df_lowPH$hudts$InRange)["TRUE"])
df_mhwPH[12,2] <- sum(table(df_lowPH$job09$InRange)["TRUE"])
df_mhwPH[13,2] <- sum(table(df_lowPH$narpc$InRange)["TRUE"])
df_mhwPH[14,2] <- sum(table(df_lowPH$nocec$InRange)["TRUE"])
df_mhwPH[15,2] <- sum(table(df_lowPH$nocrc$InRange)["TRUE"])
df_mhwPH[16,2] <- sum(table(df_lowPH$pdbby$InRange)["TRUE"])
df_mhwPH[17,2] <- sum(table(df_lowPH$welin$InRange)["TRUE"])

df_AHWMHW[1,3] <- sum(nrow(df_mhw$acesp))
df_AHWMHW[2,3] <- sum(nrow(df_mhw$apaes))
df_AHWMHW[3,3] <- sum(nrow(df_mhw$apaeb))
df_AHWMHW[4,3] <- sum(nrow(df_mhw$cbvtc))
df_AHWMHW[5,3] <- sum(nrow(df_mhw$delbl))
df_AHWMHW[6,3] <- sum(nrow(df_mhw$delsl))
df_AHWMHW[7,3] <- sum(nrow(df_mhw$elkap))
df_AHWMHW[8,3] <- sum(nrow(df_mhw$elksm))
df_AHWMHW[9,3] <- sum(nrow(df_mhw$grbgb))
df_AHWMHW[10,3] <- sum(nrow(df_mhw$hudsk))
df_AHWMHW[11,3] <- sum(nrow(df_mhw$hudts))
df_AHWMHW[12,3] <- sum(nrow(df_mhw$job09))
df_AHWMHW[13,3] <- sum(nrow(df_mhw$narpc))
df_AHWMHW[14,3] <- sum(nrow(df_mhw$nocec))
df_AHWMHW[15,3] <- sum(nrow(df_mhw$nocrc))
df_AHWMHW[16,3] <- sum(nrow(df_mhw$pdbby))
df_AHWMHW[17,3] <- sum(nrow(df_mhw$welin))

df_mhwDO[1,3] <- sum(nrow(df_lowDO$acesp))
df_mhwDO[2,3] <- sum(nrow(df_lowDO$apaes))
df_mhwDO[3,3] <- sum(nrow(df_lowDO$apaeb))
df_mhwDO[4,3] <- sum(nrow(df_lowDO$cbvtc))
df_mhwDO[5,3] <- sum(nrow(df_lowDO$delbl))
df_mhwDO[6,3] <- sum(nrow(df_lowDO$delsl))
df_mhwDO[7,3] <- sum(nrow(df_lowDO$elkap))
df_mhwDO[8,3] <- sum(nrow(df_lowDO$elksm))
df_mhwDO[9,3] <- sum(nrow(df_lowDO$grbgb))
df_mhwDO[10,3] <- sum(nrow(df_lowDO$hudsk))
df_mhwDO[11,3] <- sum(nrow(df_lowDO$hudts))
df_mhwDO[12,3] <- sum(nrow(df_lowDO$job09))
df_mhwDO[13,3] <- sum(nrow(df_lowDO$narpc))
df_mhwDO[14,3] <- sum(nrow(df_lowDO$nocec))
df_mhwDO[15,3] <- sum(nrow(df_lowDO$nocrc))
df_mhwDO[16,3] <- sum(nrow(df_lowDO$pdbby))
df_mhwDO[17,3] <- sum(nrow(df_lowDO$welin))

df_mhwPH[1,3] <- sum(nrow(df_lowPH$acesp))
df_mhwPH[2,3] <- sum(nrow(df_lowPH$apaes))
df_mhwPH[3,3] <- sum(nrow(df_lowPH$apaeb))
df_mhwPH[4,3] <- sum(nrow(df_lowPH$cbvtc))
df_mhwPH[5,3] <- sum(nrow(df_lowPH$delbl))
df_mhwPH[6,3] <- sum(nrow(df_lowPH$delsl))
df_mhwPH[7,3] <- sum(nrow(df_lowPH$elkap))
df_mhwPH[8,3] <- sum(nrow(df_lowPH$elksm))
df_mhwPH[9,3] <- sum(nrow(df_lowPH$grbgb))
df_mhwPH[10,3] <- sum(nrow(df_lowPH$hudsk))
df_mhwPH[11,3] <- sum(nrow(df_lowPH$hudts))
df_mhwPH[12,3] <- sum(nrow(df_lowPH$job09))
df_mhwPH[13,3] <- sum(nrow(df_lowPH$narpc))
df_mhwPH[14,3] <- sum(nrow(df_lowPH$nocec))
df_mhwPH[15,3] <- sum(nrow(df_lowPH$nocrc))
df_mhwPH[16,3] <- sum(nrow(df_lowPH$pdbby))
df_mhwPH[17,3] <- sum(nrow(df_lowPH$welin))

df_AHWMHW[1,4] <- round((sum(table(df_mhw$acesp$InRange)["TRUE"])/sum(nrow(df_mhw$acesp))*100),0)
df_AHWMHW[2,4] <- round((sum(table(df_mhw$apaes$InRange)["TRUE"])/sum(nrow(df_mhw$apaes))*100),0)
df_AHWMHW[3,4] <- round((sum(table(df_mhw$apaeb$InRange)["TRUE"])/sum(nrow(df_mhw$apaeb))*100),0)
df_AHWMHW[4,4] <- round((sum(table(df_mhw$cbvtc$InRange)["TRUE"])/sum(nrow(df_mhw$cbvtc))*100),0)
df_AHWMHW[5,4] <- round((sum(table(df_mhw$delbl$InRange)["TRUE"])/sum(nrow(df_mhw$delbl))*100),0)
df_AHWMHW[6,4] <- round((sum(table(df_mhw$delsl$InRange)["TRUE"])/sum(nrow(df_mhw$delsl))*100),0)
df_AHWMHW[7,4] <- round((sum(table(df_mhw$elkap$InRange)["TRUE"])/sum(nrow(df_mhw$elkap))*100),0)
df_AHWMHW[8,4] <- round((sum(table(df_mhw$elksm$InRange)["TRUE"])/sum(nrow(df_mhw$elksm))*100),0)
df_AHWMHW[9,4] <- round((sum(table(df_mhw$grbgb$InRange)["TRUE"])/sum(nrow(df_mhw$grbgb))*100),0)
df_AHWMHW[10,4] <- round((sum(table(df_mhw$hudsk$InRange)["TRUE"])/sum(nrow(df_mhw$hudsk))*100),0)
df_AHWMHW[11,4] <- round((sum(table(df_mhw$hudts$InRange)["TRUE"])/sum(nrow(df_mhw$hudts))*100),0)
df_AHWMHW[12,4] <- round((sum(table(df_mhw$job09$InRange)["TRUE"])/sum(nrow(df_mhw$job09))*100),0)
df_AHWMHW[13,4] <- round((sum(table(df_mhw$narpc$InRange)["TRUE"])/sum(nrow(df_mhw$narpc))*100),0)
df_AHWMHW[14,4] <- round((sum(table(df_mhw$nocec$InRange)["TRUE"])/sum(nrow(df_mhw$nocec))*100),0)
df_AHWMHW[15,4] <- round((sum(table(df_mhw$nocrc$InRange)["TRUE"])/sum(nrow(df_mhw$nocrc))*100),0)
df_AHWMHW[16,4] <- round((sum(table(df_mhw$pdbby$InRange)["TRUE"])/sum(nrow(df_mhw$pdbby))*100),0)
df_AHWMHW[17,4] <- round((sum(table(df_mhw$welin$InRange)["TRUE"])/sum(nrow(df_mhw$welin))*100),0)

df_mhwDO[1,4] <- round((sum(table(df_lowDO$acesp$InRange)["TRUE"])/sum(nrow(df_lowDO$acesp))*100),0)
df_mhwDO[2,4] <- round((sum(table(df_lowDO$apaes$InRange)["TRUE"])/sum(nrow(df_lowDO$apaes))*100),0)
df_mhwDO[3,4] <- round((sum(table(df_lowDO$apaeb$InRange)["TRUE"])/sum(nrow(df_lowDO$apaeb))*100),0)
df_mhwDO[4,4] <- round((sum(table(df_lowDO$cbvtc$InRange)["TRUE"])/sum(nrow(df_lowDO$cbvtc))*100),0)
df_mhwDO[5,4] <- round((sum(table(df_lowDO$delbl$InRange)["TRUE"])/sum(nrow(df_lowDO$delbl))*100),0)
df_mhwDO[6,4] <- round((sum(table(df_lowDO$delsl$InRange)["TRUE"])/sum(nrow(df_lowDO$delsl))*100),0)
df_mhwDO[7,4] <- round((sum(table(df_lowDO$elkap$InRange)["TRUE"])/sum(nrow(df_lowDO$elkap))*100),0)
df_mhwDO[8,4] <- round((sum(table(df_lowDO$elksm$InRange)["TRUE"])/sum(nrow(df_lowDO$elksm))*100),0)
df_mhwDO[9,4] <- round((sum(table(df_lowDO$grbgb$InRange)["TRUE"])/sum(nrow(df_lowDO$grbgb))*100),0)
df_mhwDO[10,4] <- round((sum(table(df_lowDO$hudsk$InRange)["TRUE"])/sum(nrow(df_lowDO$hudsk))*100),0)
df_mhwDO[11,4] <- round((sum(table(df_lowDO$hudts$InRange)["TRUE"])/sum(nrow(df_lowDO$hudts))*100),0)
df_mhwDO[12,4] <- round((sum(table(df_lowDO$job09$InRange)["TRUE"])/sum(nrow(df_lowDO$job09))*100),0)
df_mhwDO[13,4] <- round((sum(table(df_lowDO$narpc$InRange)["TRUE"])/sum(nrow(df_lowDO$narpc))*100),0)
df_mhwDO[14,4] <- round((sum(table(df_lowDO$nocec$InRange)["TRUE"])/sum(nrow(df_lowDO$nocec))*100),0)
df_mhwDO[15,4] <- round((sum(table(df_lowDO$nocrc$InRange)["TRUE"])/sum(nrow(df_lowDO$nocrc))*100),0)
df_mhwDO[16,4] <- round((sum(table(df_lowDO$pdbby$InRange)["TRUE"])/sum(nrow(df_lowDO$pdbby))*100),0)
df_mhwDO[17,4] <- round((sum(table(df_lowDO$welin$InRange)["TRUE"])/sum(nrow(df_lowDO$welin))*100),0)

df_mhwPH[1,4] <- round((sum(table(df_lowPH$acesp$InRange)["TRUE"])/sum(nrow(df_lowPH$acesp))*100),0)
df_mhwPH[2,4] <- round((sum(table(df_lowPH$apaes$InRange)["TRUE"])/sum(nrow(df_lowPH$apaes))*100),0)
df_mhwPH[3,4] <- round((sum(table(df_lowPH$apaeb$InRange)["TRUE"])/sum(nrow(df_lowPH$apaeb))*100),0)
df_mhwPH[4,4] <- round((sum(table(df_lowPH$cbvtc$InRange)["TRUE"])/sum(nrow(df_lowPH$cbvtc))*100),0)
df_mhwPH[5,4] <- round((sum(table(df_lowPH$delbl$InRange)["TRUE"])/sum(nrow(df_lowPH$delbl))*100),0)
df_mhwPH[6,4] <- round((sum(table(df_lowPH$delsl$InRange)["TRUE"])/sum(nrow(df_lowPH$delsl))*100),0)
df_mhwPH[7,4] <- round((sum(table(df_lowPH$elkap$InRange)["TRUE"])/sum(nrow(df_lowPH$elkap))*100),0)
df_mhwPH[8,4] <- round((sum(table(df_lowPH$elksm$InRange)["TRUE"])/sum(nrow(df_lowPH$elksm))*100),0)
df_mhwPH[9,4] <- round((sum(table(df_lowPH$grbgb$InRange)["TRUE"])/sum(nrow(df_lowPH$grbgb))*100),0)
df_mhwPH[10,4] <- round((sum(table(df_lowPH$hudsk$InRange)["TRUE"])/sum(nrow(df_lowPH$hudsk))*100),0)
df_mhwPH[11,4] <- round((sum(table(df_lowPH$hudts$InRange)["TRUE"])/sum(nrow(df_lowPH$hudts))*100),0)
df_mhwPH[12,4] <- round((sum(table(df_lowPH$job09$InRange)["TRUE"])/sum(nrow(df_lowPH$job09))*100),0)
df_mhwPH[13,4] <- round((sum(table(df_lowPH$narpc$InRange)["TRUE"])/sum(nrow(df_lowPH$narpc))*100),0)
df_mhwPH[14,4] <- round((sum(table(df_lowPH$nocec$InRange)["TRUE"])/sum(nrow(df_lowPH$nocec))*100),0)
df_mhwPH[15,4] <- round((sum(table(df_lowPH$nocrc$InRange)["TRUE"])/sum(nrow(df_lowPH$nocrc))*100),0)
df_mhwPH[16,4] <- round((sum(table(df_lowPH$pdbby$InRange)["TRUE"])/sum(nrow(df_lowPH$pdbby))*100),0)
df_mhwPH[17,4] <- round((sum(table(df_lowPH$welin$InRange)["TRUE"])/sum(nrow(df_lowPH$welin))*100),0)

df_AHWMHW[is.na(df_AHWMHW)] <- 0
df_mhwDO[is.na(df_mhwDO)] <- 0
df_mhwPH[is.na(df_mhwPH)] <- 0

### Triple Whammies
# First create the reference interval

library(lubridate)

df_mhw3$acesp <- df_mhw3$acesp %>%
  mutate(interval = interval(start = date_start, end = date_end))

df_mhw3$apaeb <- df_mhw3$apaeb %>%
  mutate(interval = interval(start = date_start, end = date_end))

df_mhw3$apaes <- df_mhw3$apaes %>%
  mutate(interval = interval(start = date_start, end = date_end))

df_mhw3$cbvtc <- df_mhw3$cbvtc %>%
  mutate(interval = interval(start = date_start, end = date_end))

df_mhw3$delbl <- df_mhw3$delbl %>%
  mutate(interval = interval(start = date_start, end = date_end))

df_mhw3$delsl <- df_mhw3$delsl %>%
  mutate(interval = interval(start = date_start, end = date_end))

df_mhw3$elkap <- df_mhw3$elkap %>%
  mutate(interval = interval(start = date_start, end = date_end))

df_mhw3$elksm <- df_mhw3$elksm %>%
  mutate(interval = interval(start = date_start, end = date_end))

df_mhw3$grbgb <- df_mhw3$grbgb %>%
  mutate(interval = interval(start = date_start, end = date_end))

df_mhw3$hudsk <- df_mhw3$hudsk %>%
  mutate(interval = interval(start = date_start, end = date_end))

df_mhw3$hudts <- df_mhw3$hudts %>%
  mutate(interval = interval(start = date_start, end = date_end))

df_mhw3$job09 <- df_mhw3$job09 %>%
  mutate(interval = interval(start = date_start, end = date_end))

df_mhw3$narpc <- df_mhw3$narpc %>%
  mutate(interval = interval(start = date_start, end = date_end))

df_mhw3$nocec <- df_mhw3$nocec %>%
  mutate(interval = interval(start = date_start, end = date_end))

df_mhw3$nocrc <- df_mhw3$nocrc %>%
  mutate(interval = interval(start = date_start, end = date_end))

df_mhw3$pdbby <- df_mhw3$pdbby %>%
  mutate(interval = interval(start = date_start, end = date_end))

df_mhw3$welin <- df_mhw3$welin %>%
  mutate(interval = interval(start = date_start, end = date_end))

# Second convert the date_start of lowDO & lowPH events

df_lowDO$acesp <- df_lowDO$acesp %>%
  mutate(start = ymd(date_start))
df_lowDO$apaeb <- df_lowDO$apaeb %>%
  mutate(start = ymd(date_start))
df_lowDO$apaes <- df_lowDO$apaes %>%
  mutate(start = ymd(date_start))
df_lowDO$cbvtc <- df_lowDO$cbvtc %>%
  mutate(start = ymd(date_start))
df_lowDO$delbl <- df_lowDO$delbl %>%
  mutate(start = ymd(date_start))
df_lowDO$delsl <- df_lowDO$delsl %>%
  mutate(start = ymd(date_start))
df_lowDO$elkap <- df_lowDO$elkap %>%
  mutate(start = ymd(date_start))
df_lowDO$elksm <- df_lowDO$elksm %>%
  mutate(start = ymd(date_start))
df_lowDO$grbgb <- df_lowDO$grbgb %>%
  mutate(start = ymd(date_start))
df_lowDO$hudsk <- df_lowDO$hudsk %>%
  mutate(start = ymd(date_start))
df_lowDO$hudts <- df_lowDO$hudts %>%
  mutate(start = ymd(date_start))
df_lowDO$job09 <- df_lowDO$job09 %>%
  mutate(start = ymd(date_start))
df_lowDO$narpc <- df_lowDO$narpc %>%
  mutate(start = ymd(date_start))
df_lowDO$nocec <- df_lowDO$nocec %>%
  mutate(start = ymd(date_start))
df_lowDO$nocrc <- df_lowDO$nocrc %>%
  mutate(start = ymd(date_start))
df_lowDO$pdbby <- df_lowDO$pdbby %>%
  mutate(start = ymd(date_start))
df_lowDO$welin <- df_lowDO$welin %>%
  mutate(start = ymd(date_start))

df_lowPH$acesp <- df_lowPH$acesp %>%
  mutate(start = ymd(date_start))
df_lowPH$apaeb <- df_lowPH$apaeb %>%
  mutate(start = ymd(date_start))
df_lowPH$apaes <- df_lowPH$apaes %>%
  mutate(start = ymd(date_start))
df_lowPH$cbvtc <- df_lowPH$cbvtc %>%
  mutate(start = ymd(date_start))
df_lowPH$delbl <- df_lowPH$delbl %>%
  mutate(start = ymd(date_start))
df_lowPH$delsl <- df_lowPH$delsl %>%
  mutate(start = ymd(date_start))
df_lowPH$elkap <- df_lowPH$elkap %>%
  mutate(start = ymd(date_start))
df_lowPH$elksm <- df_lowPH$elksm %>%
  mutate(start = ymd(date_start))
df_lowPH$grbgb <- df_lowPH$grbgb %>%
  mutate(start = ymd(date_start))
df_lowPH$hudsk <- df_lowPH$hudsk %>%
  mutate(start = ymd(date_start))
df_lowPH$hudts <- df_lowPH$hudts %>%
  mutate(start = ymd(date_start))
df_lowPH$job09 <- df_lowPH$job09 %>%
  mutate(start = ymd(date_start))
df_lowPH$narpc <- df_lowPH$narpc %>%
  mutate(start = ymd(date_start))
df_lowPH$nocec <- df_lowPH$nocec %>%
  mutate(start = ymd(date_start))
df_lowPH$nocrc <- df_lowPH$nocrc %>%
  mutate(start = ymd(date_start))
df_lowPH$pdbby <- df_lowPH$pdbby %>%
  mutate(start = ymd(date_start))
df_lowPH$welin <- df_lowPH$welin %>%
  mutate(start = ymd(date_start))

# Third determine start date overlap of low DO & low PH events during MHW interval

df_mhw3$acesp <- df_mhw3$acesp %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$acesp$start %within% interval) & any(df_lowPH$acesp$start %within% interval))

df_mhw3$apaeb <- df_mhw3$apaeb %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$apaeb$start %within% interval) & any(df_lowPH$apaeb$start %within% interval))

df_mhw3$apaes <- df_mhw3$apaes %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$apaes$start %within% interval) & any(df_lowPH$apaes$start %within% interval))

df_mhw3$cbvtc <- df_mhw3$cbvtc %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$cbvtc$start %within% interval) & any(df_lowPH$cbvtc$start %within% interval))

df_mhw3$delbl <- df_mhw3$delbl %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$delbl$start %within% interval) & any(df_lowPH$delbl$start %within% interval))

df_mhw3$delsl <- df_mhw3$delsl %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$delsl$start %within% interval) & any(df_lowPH$delsl$start %within% interval))

df_mhw3$elkap <- df_mhw3$elkap %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$elkap$start %within% interval) & any(df_lowPH$elkap$start %within% interval))

df_mhw3$elksm <- df_mhw3$elksm %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$elksm$start %within% interval) & any(df_lowPH$elksm$start %within% interval))

df_mhw3$grbgb <- df_mhw3$grbgb %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$grbgb$start %within% interval) & any(df_lowPH$grbgb$start %within% interval))

df_mhw3$hudsk <- df_mhw3$hudsk %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$hudsk$start %within% interval) & any(df_lowPH$hudsk$start %within% interval))

df_mhw3$hudts <- df_mhw3$hudts %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$hudts$start %within% interval) & any(df_lowPH$hudts$start %within% interval))

df_mhw3$job09 <- df_mhw3$job09 %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$job09$start %within% interval) & any(df_lowPH$job09$start %within% interval))

df_mhw3$narpc <- df_mhw3$narpc %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$narpc$start %within% interval) & any(df_lowPH$narpc$start %within% interval))

df_mhw3$nocec <- df_mhw3$nocec %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$nocec$start %within% interval) & any(df_lowPH$nocec$start %within% interval))

df_mhw3$nocrc <- df_mhw3$nocrc %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$nocrc$start %within% interval) & any(df_lowPH$nocrc$start %within% interval))

df_mhw3$pdbby <- df_mhw3$pdbby %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$pdbby$start %within% interval) & any(df_lowPH$pdbby$start %within% interval))

df_mhw3$welin <- df_mhw3$welin %>%
  rowwise() %>%
  mutate(tripleWhammy = any(df_lowDO$welin$start %within% interval) & any(df_lowPH$welin$start %within% interval))

tw_acesp <- data.frame(sum(table(df_mhw3$acesp$tripleWhammy)["TRUE"]))
tw_acesp$Station <- "acesp"
names(tw_acesp)[1] <- "TotalEvents"
tw_acesp$Proportion <- round((tw_acesp$`TotalEvents`/nrow(df_mhw3$acesp)*100),0)
names(tw_acesp)[3] <- "Proportion_CoOccurrance(%)"

tw_apaeb <- data.frame(sum(table(df_mhw3$apaeb$tripleWhammy)["TRUE"]))
tw_apaeb$Station <- "apaeb"
names(tw_apaeb)[1] <- "TotalEvents"
tw_apaeb$Proportion <- round((tw_apaeb$`TotalEvents`/nrow(df_mhw3$apaeb)*100),0)
names(tw_apaeb)[3] <- "Proportion_CoOccurrance(%)"  

tw_apaes <- data.frame(sum(table(df_mhw3$apaes$tripleWhammy)["TRUE"]))
tw_apaes$Station <- "apaes"
names(tw_apaes)[1] <- "TotalEvents"
tw_apaes$Proportion <- round((tw_apaes$`TotalEvents`/nrow(df_mhw3$apaes)*100),0)
names(tw_apaes)[3] <- "Proportion_CoOccurrance(%)" 

tw_cbvtc <- data.frame(sum(table(df_mhw3$cbvtc$tripleWhammy)["TRUE"]))
tw_cbvtc$Station <- "cbvtc"
names(tw_cbvtc)[1] <- "TotalEvents"
tw_cbvtc$Proportion <- round((tw_cbvtc$`TotalEvents`/nrow(df_mhw3$cbvtc)*100),0)
names(tw_cbvtc)[3] <- "Proportion_CoOccurrance(%)" 

tw_delbl <- data.frame(sum(table(df_mhw3$delbl$tripleWhammy)["TRUE"]))
tw_delbl$Station <- "delbl"
names(tw_delbl)[1] <- "TotalEvents"
tw_delbl$Proportion <- round((tw_delbl$`TotalEvents`/nrow(df_mhw3$delbl)*100),0)
names(tw_delbl)[3] <- "Proportion_CoOccurrance(%)" 

tw_delsl <- data.frame(sum(table(df_mhw3$delsl$tripleWhammy)["TRUE"]))
tw_delsl$Station <- "delsl"
names(tw_delsl)[1] <- "TotalEvents"
tw_delsl$Proportion <- round((tw_delsl$`TotalEvents`/nrow(df_mhw3$delsl)*100),0)
names(tw_delsl)[3] <- "Proportion_CoOccurrance(%)" 

tw_elkap <- data.frame(sum(table(df_mhw3$elkap$tripleWhammy)["TRUE"]))
tw_elkap$Station <- "elkap"
names(tw_elkap)[1] <- "TotalEvents"
tw_elkap$Proportion <- round((tw_elkap$`TotalEvents`/nrow(df_mhw3$elkap)*100),0)
names(tw_elkap)[3] <- "Proportion_CoOccurrance(%)" 

tw_elksm <- data.frame(sum(table(df_mhw3$elksm$tripleWhammy)["TRUE"]))
tw_elksm$Station <- "elksm"
names(tw_elksm)[1] <- "TotalEvents"
tw_elksm$Proportion <- round((tw_elksm$`TotalEvents`/nrow(df_mhw3$elksm)*100),0)
names(tw_elksm)[3] <- "Proportion_CoOccurrance(%)" 

tw_grbgb <- data.frame(sum(table(df_mhw3$grbgb$tripleWhammy)["TRUE"]))
tw_grbgb$Station <- "grbgb"
names(tw_grbgb)[1] <- "TotalEvents"
tw_grbgb$Proportion <- round((tw_grbgb$`TotalEvents`/nrow(df_mhw3$grbgb)*100),0)
names(tw_grbgb)[3] <- "Proportion_CoOccurrance(%)" 

tw_hudsk <- data.frame(sum(table(df_mhw3$hudsk$tripleWhammy)["TRUE"]))
tw_hudsk$Station <- "hudsk"
names(tw_hudsk)[1] <- "TotalEvents"
tw_hudsk$Proportion <- round((tw_hudsk$`TotalEvents`/nrow(df_mhw3$hudsk)*100),0)
names(tw_hudsk)[3] <- "Proportion_CoOccurrance(%)" 

tw_hudts <- data.frame(sum(table(df_mhw3$hudts$tripleWhammy)["TRUE"]))
tw_hudts$Station <- "hudts"
names(tw_hudts)[1] <- "TotalEvents"
tw_hudts$Proportion <- round((tw_hudts$`TotalEvents`/nrow(df_mhw3$hudts)*100),0)
names(tw_hudts)[3] <- "Proportion_CoOccurrance(%)" 

tw_job09 <- data.frame(sum(table(df_mhw3$job09$tripleWhammy)["TRUE"]))
tw_job09$Station <- "job09"
names(tw_job09)[1] <- "TotalEvents"
tw_job09$Proportion <- round((tw_job09$`TotalEvents`/nrow(df_mhw3$job09)*100),0)
names(tw_job09)[3] <- "Proportion_CoOccurrance(%)" 

tw_narpc <- data.frame(sum(table(df_mhw3$narpc$tripleWhammy)["TRUE"]))
tw_narpc$Station <- "narpc"
names(tw_narpc)[1] <- "TotalEvents"
tw_narpc$Proportion <- round((tw_narpc$`TotalEvents`/nrow(df_mhw3$narpc)*100),0)
names(tw_narpc)[3] <- "Proportion_CoOccurrance(%)" 

tw_nocec <- data.frame(sum(table(df_mhw3$nocec$tripleWhammy)["TRUE"]))
tw_nocec$Station <- "nocec"
names(tw_nocec)[1] <- "TotalEvents"
tw_nocec$Proportion <- round((tw_nocec$`TotalEvents`/nrow(df_mhw3$nocec)*100),0)
names(tw_nocec)[3] <- "Proportion_CoOccurrance(%)"

tw_nocrc <- data.frame(sum(table(df_mhw3$nocrc$tripleWhammy)["TRUE"]))
tw_nocrc$Station <- "nocrc"
names(tw_nocrc)[1] <- "TotalEvents"
tw_nocrc$Proportion <- round((tw_nocrc$`TotalEvents`/nrow(df_mhw3$nocrc)*100),0)
names(tw_nocrc)[3] <- "Proportion_CoOccurrance(%)" 

tw_pdbby <- data.frame(sum(table(df_mhw3$pdbby$tripleWhammy)["TRUE"]))
tw_pdbby$Station <- "pdbby"
names(tw_pdbby)[1] <- "TotalEvents"
tw_pdbby$Proportion <- round((tw_pdbby$`TotalEvents`/nrow(df_mhw3$pdbby)*100),0)
names(tw_pdbby)[3] <- "Proportion_CoOccurrance(%)" 

tw_welin <- data.frame(sum(table(df_mhw3$welin$tripleWhammy)["TRUE"]))
tw_welin$Station <- "welin"
names(tw_welin)[1] <- "TotalEvents"
tw_welin$Proportion <- round((tw_welin$`TotalEvents`/nrow(df_mhw3$welin)*100),0)
names(tw_welin)[3] <- "Proportion_CoOccurrance(%)" 

df_triple <- rbind(tw_acesp, tw_apaeb, tw_apaes, tw_cbvtc,
                        tw_delbl, tw_delsl, tw_elkap, tw_elksm,
                        tw_grbgb, tw_hudsk, tw_hudts, tw_job09,
                        tw_narpc, tw_nocec, tw_nocrc, tw_pdbby,
                        tw_welin)

df_triple[is.na(df_triple)] <- 0

### Data used to make figure

df_AHWMHW$Type <- "AHW & EHW"
df_mhwDO$Type <- "EHW & Low DO"
df_mhwPH$Type <- "EHW & Low pH"
df_triple$Type <- "EHW & Low DO & Low pH"

df_AHWMHW$Reserve <- c("ace","apa","apa","cbv","del","del","elk","elk","grb","hud","hud",
                       "job","nar","noc","noc","pdb","wel")
df_mhwDO$Reserve <- c("ace","apa","apa","cbv","del","del","elk","elk","grb","hud","hud",
                       "job","nar","noc","noc","pdb","wel")
df_mhwPH$Reserve <- c("ace","apa","apa","cbv","del","del","elk","elk","grb","hud","hud",
                       "job","nar","noc","noc","pdb","wel")
df_triple$Reserve <- c("ace","apa","apa","cbv","del","del","elk","elk","grb","hud","hud",
                       "job","nar","noc","noc","pdb","wel")

df_AHWMHW <- df_AHWMHW[,c(6,1,5,4)]
df_mhwDO <- df_mhwDO[,c(6,1,5,4)]
df_mhwPH <- df_mhwPH[,c(6,1,5,4)]
df_triple <- df_triple[,c(5,2,4,3)]

names(df_AHWMHW)[4] <- "Proportion_CoOccurrance"
names(df_mhwDO)[4] <- "Proportion_CoOccurrance"
names(df_mhwPH)[4] <- "Proportion_CoOccurrance"
names(df_triple)[4] <- "Proportion_CoOccurrance"

Fig3_AHWMHW <- df_AHWMHW %>%
  group_by(Reserve,Type) %>%
  summarise(MeanProp = mean(Proportion_CoOccurrance),
            upper = max(Proportion_CoOccurrance),
            lower = min(Proportion_CoOccurrance))
Fig3_AHWMHW$order <- c(8,10,6,5,12,2,3,9,4,7,11,1)
Fig3_AHWMHW$Region <- c("Southeast","GoM","Mid. Atl.","Mid. Atl.","West","Northeast","Northeast","Southeast","Northeast","Southeast","West","Northeast")

Fig3_mhwDO <- df_mhwDO %>%
  group_by(Reserve,Type) %>%
  summarise(MeanProp = mean(Proportion_CoOccurrance),
            upper = max(Proportion_CoOccurrance),
            lower = min(Proportion_CoOccurrance))
Fig3_mhwDO$order <- c(8,10,6,5,12,2,3,9,4,7,11,1)
Fig3_mhwDO$Region <- c("Southeast","GoM","Mid. Atl.","Mid. Atl.","West","Northeast","Northeast","Southeast","Northeast","Southeast","West","Northeast")

Atlantic_mhwDO <- Fig3_mhwDO[c(1,3,4,6,7,9,10,12),]
NonAtlantic_mhwDO <- Fig3_mhwDO[c(2,5,8,11),]

round(mean(Atlantic_mhwDO$MeanProp),0)
round(sd(Atlantic_mhwDO$MeanProp),0)
round(mean(NonAtlantic_mhwDO$MeanProp),0)
round(sd(NonAtlantic_mhwDO$MeanProp),0)

Fig3_mhwPH <- df_mhwPH %>%
  group_by(Reserve,Type) %>%
  summarise(MeanProp = mean(Proportion_CoOccurrance),
            upper = max(Proportion_CoOccurrance),
            lower = min(Proportion_CoOccurrance))
Fig3_mhwPH$order <- c(8,10,6,5,12,2,3,9,4,7,11,1)
Fig3_mhwPH$Region <- c("Southeast","GoM","Mid. Atl.","Mid. Atl.","West","Northeast","Northeast","Southeast","Northeast","Southeast","West","Northeast")

Fig3_triple <- df_triple %>%
  group_by(Reserve,Type) %>%
  summarise(MeanProp = mean(Proportion_CoOccurrance),
            upper = max(Proportion_CoOccurrance),
            lower = min(Proportion_CoOccurrance))
Fig3_triple$order <- c(8,10,6,5,12,2,3,9,4,7,11,1)
Fig3_triple$Region <- c("Southeast","GoM","Mid. Atl.","Mid. Atl.","West","Northeast","Northeast","Southeast","Northeast","Southeast","West","Northeast")

Fig3_table <- rbind(Fig3_AHWMHW,Fig3_mhwDO,Fig3_mhwPH,Fig3_triple)
Fig3_table <- Fig3_table[,c(6:7,1:5)]

cols <- c("AHW & EHW" = "#000000", "EHW & Low DO" = "#525252", "EHW & Low pH" = "#969696", "EHW & Low DO & Low pH" = "#ffffff")

Fig3_table %>%
  arrange(-desc(order)) %>%
  mutate(Type = factor(Type, levels = c("AHW & EHW","EHW & Low DO",'EHW & Low pH',"EHW & Low DO & Low pH"))) %>%
  mutate(Reserve = factor(Reserve, levels = c("wel","grb","hud","nar","del","cbv","noc","ace","job","apa","pdb","elk"))) %>%
  ggplot(aes(x = Reserve, y = MeanProp)) +
  geom_col(aes(fill = Type), position = "dodge", color = "black") +
  scale_fill_manual(values = cols) +
  scale_y_continuous(breaks = seq(0,70,10)) +
  geom_errorbar(aes(fill = Type, ymin = lower, ymax = upper), position = "dodge", width = 0.9, color = "gray15") +
  labs(y = "Proportion of Co-Occurrences (%)",
       x = "NERRS Reserves & Regions") +
  theme_bw() +
  theme(plot.margin = margin(5,5,50,5,"pt"),
        panel.grid = element_blank(),
        text = element_text(size = 16),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = "black"),
        axis.title.x = element_text(vjust = -9),
        legend.title = element_blank(),
        legend.direction = "vertical",
        legend.position = c(0.80,0.91),
        legend.background = element_blank()) +
  coord_cartesian(clip = "off", ylim = c(0, NA)) +
  annotate("text", x = c(2.5,5.5,8,10,11.5), y = -10, label = c("Northeast", "Mid. Atl.", "Southeast","GoM","West"), size = 5) +
  annotate("segment", x = c(4.5,6.5,9.5,10.5), xend = c(4.5,6.5,9.5,10.5), y = -3.5, yend = -12.75)

ahwMHW <- df_AHWMHW
ahwMHW$Region[ahwMHW$Reserve%in%c("wel","grb","hud","nar")] <- "NE"
ahwMHW$Region[ahwMHW$Reserve%in%c("del","cbv")] <- "MidAtl"
ahwMHW$Region[ahwMHW$Reserve%in%c("noc","ace","job")] <- "SE"
ahwMHW$Region[ahwMHW$Reserve%in%"apa"] <- "GoM"
ahwMHW$Region[ahwMHW$Reserve%in%c("pdb","elk")] <- "West"

round(mean(ahwMHW$Proportion_CoOccurrance),0)
min(ahwMHW$Proportion_CoOccurrance)
max(ahwMHW$Proportion_CoOccurrance)

ahwMHW %>%
  group_by(Region) %>%
  summarise(Mean = round(mean(Proportion_CoOccurrance),0),
            SD = round(sd(Proportion_CoOccurrance),0))
df_mhwDO %>%
  summarise(Mean = round(mean(Proportion_CoOccurrance),0),
            SD = round(sd(Proportion_CoOccurrance),0))
df_mhwPH %>%
  summarise(Mean = round(mean(Proportion_CoOccurrance),0),
            SD = round(sd(Proportion_CoOccurrance),0))
df_triple %>%
  summarise(Mean = round(mean(Proportion_CoOccurrance),0),
            SD = round(sd(Proportion_CoOccurrance),0))

### Figure 4: Exported image as width = 750 height = 650
### Determine number of offset days between ATM HW and Aquatic HW

names(df_mhw$acesp)[2] <- "date_end"
names(df_mhw$apaeb)[2] <- "date_end"
names(df_mhw$apaes)[2] <- "date_end"
names(df_mhw$cbvtc)[2] <- "date_end"
names(df_mhw$delbl)[2] <- "date_end"
names(df_mhw$delsl)[2] <- "date_end"
names(df_mhw$elkap)[2] <- "date_end"
names(df_mhw$elksm)[2] <- "date_end"
names(df_mhw$grbgb)[2] <- "date_end"
names(df_mhw$hudsk)[2] <- "date_end"
names(df_mhw$hudts)[2] <- "date_end"
names(df_mhw$job09)[2] <- "date_end"
names(df_mhw$narpc)[2] <- "date_end"
names(df_mhw$nocec)[2] <- "date_end"
names(df_mhw$nocrc)[2] <- "date_end"
names(df_mhw$pdbby)[2] <- "date_end"
names(df_mhw$welin)[2] <- "date_end"

names(df_mhw$acesp)[3] <- "StationCode"
names(df_mhw$apaeb)[3] <- "StationCode"
names(df_mhw$apaes)[3] <- "StationCode"
names(df_mhw$cbvtc)[3] <- "StationCode"
names(df_mhw$delbl)[3] <- "StationCode"
names(df_mhw$delsl)[3] <- "StationCode"
names(df_mhw$elkap)[3] <- "StationCode"
names(df_mhw$elksm)[3] <- "StationCode"
names(df_mhw$grbgb)[3] <- "StationCode"
names(df_mhw$hudsk)[3] <- "StationCode"
names(df_mhw$hudts)[3] <- "StationCode"
names(df_mhw$job09)[3] <- "StationCode"
names(df_mhw$narpc)[3] <- "StationCode"
names(df_mhw$nocec)[3] <- "StationCode"
names(df_mhw$nocrc)[3] <- "StationCode"
names(df_mhw$pdbby)[3] <- "StationCode"
names(df_mhw$welin)[3] <- "StationCode"

df_acesp <- as.data.frame(df_mhw$acesp[,1:3])
df_apaeb <- as.data.frame(df_mhw$apaeb[,1:3])
df_apaes <- as.data.frame(df_mhw$apaes[,1:3])
df_cbvtc <- as.data.frame(df_mhw$cbvtc[,1:3])
df_delbl <- as.data.frame(df_mhw$delbl[,1:3])
df_delsl <- as.data.frame(df_mhw$delsl[,1:3])
df_elkap <- as.data.frame(df_mhw$elkap[,1:3])
df_elksm <- as.data.frame(df_mhw$elksm[,1:3])
df_grbgb <- as.data.frame(df_mhw$grbgb[,1:3])
df_hudsk <- as.data.frame(df_mhw$hudsk[,1:3])
df_hudts <- as.data.frame(df_mhw$hudts[,1:3])
df_job09 <- as.data.frame(df_mhw$job09[,1:3])
df_narpc <- as.data.frame(df_mhw$narpc[,1:3])
df_nocec <- as.data.frame(df_mhw$nocec[,1:3])
df_nocrc <- as.data.frame(df_mhw$nocrc[,1:3])
df_pdbby <- as.data.frame(df_mhw$pdbby[,1:3])
df_welin <- as.data.frame(df_mhw$welin[,1:3])

df_ace <- as.data.frame(df_ahw$ace)
df_apa <- as.data.frame(df_ahw$apa)
df_cbv <- as.data.frame(df_ahw$cbv)
df_del <- as.data.frame(df_ahw$del)
df_elk <- as.data.frame(df_ahw$elk)
df_grb <- as.data.frame(df_ahw$grb)
df_hud <- as.data.frame(df_ahw$hud)
df_job <- as.data.frame(df_ahw$job)
df_nar <- as.data.frame(df_ahw$nar)
df_noc <- as.data.frame(df_ahw$noc)
df_pdb <- as.data.frame(df_ahw$pdb)
df_wel <- as.data.frame(df_ahw$wel)

df_acesp$Overlap <- df_acesp$date_start %in% unlist(Map(':', df_ace$date_start, df_ace$date_end))
df_apaeb$Overlap <- df_apaeb$date_start %in% unlist(Map(':', df_apa$date_start, df_apa$date_end))
df_apaes$Overlap <- df_apaes$date_start %in% unlist(Map(':', df_apa$date_start, df_apa$date_end))
df_cbvtc$Overlap <- df_cbvtc$date_start %in% unlist(Map(':', df_cbv$date_start, df_cbv$date_end))
df_delbl$Overlap <- df_delbl$date_start %in% unlist(Map(':', df_del$date_start, df_del$date_end))
df_delsl$Overlap <- df_delsl$date_start %in% unlist(Map(':', df_del$date_start, df_del$date_end))
df_elkap$Overlap <- df_elkap$date_start %in% unlist(Map(':', df_elk$date_start, df_elk$date_end))
df_elksm$Overlap <- df_elksm$date_start %in% unlist(Map(':', df_elk$date_start, df_elk$date_end))
df_grbgb$Overlap <- df_grbgb$date_start %in% unlist(Map(':', df_grb$date_start, df_grb$date_end))
df_hudsk$Overlap <- df_hudsk$date_start %in% unlist(Map(':', df_hud$date_start, df_hud$date_end))
df_hudts$Overlap <- df_hudts$date_start %in% unlist(Map(':', df_hud$date_start, df_hud$date_end))
df_job09$Overlap <- df_job09$date_start %in% unlist(Map(':', df_job$date_start, df_job$date_end))
df_narpc$Overlap <- df_narpc$date_start %in% unlist(Map(':', df_nar$date_start, df_nar$date_end))
df_nocec$Overlap <- df_nocec$date_start %in% unlist(Map(':', df_noc$date_start, df_noc$date_end))
df_nocrc$Overlap <- df_nocrc$date_start %in% unlist(Map(':', df_noc$date_start, df_noc$date_end))
df_pdbby$Overlap <- df_pdbby$date_start %in% unlist(Map(':', df_pdb$date_start, df_pdb$date_end))
df_welin$Overlap <- df_welin$date_start %in% unlist(Map(':', df_wel$date_start, df_wel$date_end))

df_lowDO$acesp$Overlap <- df_lowDO$acesp$date_start %in% unlist(Map(':', df_mhw3$acesp$date_start, df_mhw3$acesp$date_end))
df_lowDO$apaeb$Overlap <- df_lowDO$apaeb$date_start %in% unlist(Map(':', df_mhw3$apaeb$date_start, df_mhw3$apaeb$date_end))
df_lowDO$apaes$Overlap <- df_lowDO$apaes$date_start %in% unlist(Map(':', df_mhw3$apaeb$date_start, df_mhw3$apaeb$date_end))
df_lowDO$cbvtc$Overlap <- df_lowDO$cbvtc$date_start %in% unlist(Map(':', df_mhw3$cbvtc$date_start, df_mhw3$cbvtc$date_end))
df_lowDO$delbl$Overlap <- df_lowDO$delbl$date_start %in% unlist(Map(':', df_mhw3$delbl$date_start, df_mhw3$delbl$date_end))
df_lowDO$delsl$Overlap <- df_lowDO$delsl$date_start %in% unlist(Map(':', df_mhw3$delsl$date_start, df_mhw3$delsl$date_end))
df_lowDO$elkap$Overlap <- df_lowDO$elkap$date_start %in% unlist(Map(':', df_mhw3$elkap$date_start, df_mhw3$elkap$date_end))
df_lowDO$elksm$Overlap <- df_lowDO$elksm$date_start %in% unlist(Map(':', df_mhw3$elksm$date_start, df_mhw3$elksm$date_end))
df_lowDO$grbgb$Overlap <- df_lowDO$grbgb$date_start %in% unlist(Map(':', df_mhw3$grbgb$date_start, df_mhw3$grbgb$date_end))
df_lowDO$hudsk$Overlap <- df_lowDO$hudsk$date_start %in% unlist(Map(':', df_mhw3$hudsk$date_start, df_mhw3$hudsk$date_end))
df_lowDO$hudts$Overlap <- df_lowDO$hudts$date_start %in% unlist(Map(':', df_mhw3$hudts$date_start, df_mhw3$hudts$date_end))
df_lowDO$job09$Overlap <- df_lowDO$job09$date_start %in% unlist(Map(':', df_mhw3$job09$date_start, df_mhw3$job09$date_end))
df_lowDO$narpc$Overlap <- df_lowDO$narpc$date_start %in% unlist(Map(':', df_mhw3$narpc$date_start, df_mhw3$narpc$date_end))
df_lowDO$nocec$Overlap <- df_lowDO$nocec$date_start %in% unlist(Map(':', df_mhw3$nocec$date_start, df_mhw3$nocec$date_end))
df_lowDO$nocrc$Overlap <- df_lowDO$nocrc$date_start %in% unlist(Map(':', df_mhw3$nocrc$date_start, df_mhw3$nocrc$date_end))
df_lowDO$pdbby$Overlap <- df_lowDO$pdbby$date_start %in% unlist(Map(':', df_mhw3$pdbby$date_start, df_mhw3$pdbby$date_end))
df_lowDO$welin$Overlap <- df_lowDO$welin$date_start %in% unlist(Map(':', df_mhw3$welin$date_start, df_mhw3$welin$date_end))

df_lowPH$acesp$Overlap <- df_lowPH$acesp$date_start %in% unlist(Map(':', df_mhw3$acesp$date_start, df_mhw3$acesp$date_end))
df_lowPH$apaeb$Overlap <- df_lowPH$apaeb$date_start %in% unlist(Map(':', df_mhw3$apaeb$date_start, df_mhw3$apaeb$date_end))
df_lowPH$apaes$Overlap <- df_lowPH$apaes$date_start %in% unlist(Map(':', df_mhw3$apaeb$date_start, df_mhw3$apaeb$date_end))
df_lowPH$cbvtc$Overlap <- df_lowPH$cbvtc$date_start %in% unlist(Map(':', df_mhw3$cbvtc$date_start, df_mhw3$cbvtc$date_end))
df_lowPH$delbl$Overlap <- df_lowPH$delbl$date_start %in% unlist(Map(':', df_mhw3$delbl$date_start, df_mhw3$delbl$date_end))
df_lowPH$delsl$Overlap <- df_lowPH$delsl$date_start %in% unlist(Map(':', df_mhw3$delsl$date_start, df_mhw3$delsl$date_end))
df_lowPH$elkap$Overlap <- df_lowPH$elkap$date_start %in% unlist(Map(':', df_mhw3$elkap$date_start, df_mhw3$elkap$date_end))
df_lowPH$elksm$Overlap <- df_lowPH$elksm$date_start %in% unlist(Map(':', df_mhw3$elksm$date_start, df_mhw3$elksm$date_end))
df_lowPH$grbgb$Overlap <- df_lowPH$grbgb$date_start %in% unlist(Map(':', df_mhw3$grbgb$date_start, df_mhw3$grbgb$date_end))
df_lowPH$hudsk$Overlap <- df_lowPH$hudsk$date_start %in% unlist(Map(':', df_mhw3$hudsk$date_start, df_mhw3$hudsk$date_end))
df_lowPH$hudts$Overlap <- df_lowPH$hudts$date_start %in% unlist(Map(':', df_mhw3$hudts$date_start, df_mhw3$hudts$date_end))
df_lowPH$job09$Overlap <- df_lowPH$job09$date_start %in% unlist(Map(':', df_mhw3$job09$date_start, df_mhw3$job09$date_end))
df_lowPH$narpc$Overlap <- df_lowPH$narpc$date_start %in% unlist(Map(':', df_mhw3$narpc$date_start, df_mhw3$narpc$date_end))
df_lowPH$nocec$Overlap <- df_lowPH$nocec$date_start %in% unlist(Map(':', df_mhw3$nocec$date_start, df_mhw3$nocec$date_end))
df_lowPH$nocrc$Overlap <- df_lowPH$nocrc$date_start %in% unlist(Map(':', df_mhw3$nocrc$date_start, df_mhw3$nocrc$date_end))
df_lowPH$pdbby$Overlap <- df_lowPH$pdbby$date_start %in% unlist(Map(':', df_mhw3$pdbby$date_start, df_mhw3$pdbby$date_end))
df_lowPH$welin$Overlap <- df_lowPH$welin$date_start %in% unlist(Map(':', df_mhw3$welin$date_start, df_mhw3$welin$date_end))

names(df_mhw3$acesp)[2] <- "date_end"
names(df_mhw3$apaeb)[2] <- "date_end"
names(df_mhw3$apaes)[2] <- "date_end"
names(df_mhw3$cbvtc)[2] <- "date_end"
names(df_mhw3$delbl)[2] <- "date_end"
names(df_mhw3$delsl)[2] <- "date_end"
names(df_mhw3$elkap)[2] <- "date_end"
names(df_mhw3$elksm)[2] <- "date_end"
names(df_mhw3$grbgb)[2] <- "date_end"
names(df_mhw3$hudsk)[2] <- "date_end"
names(df_mhw3$hudts)[2] <- "date_end"
names(df_mhw3$job09)[2] <- "date_end"
names(df_mhw3$narpc)[2] <- "date_end"
names(df_mhw3$nocec)[2] <- "date_end"
names(df_mhw3$nocrc)[2] <- "date_end"
names(df_mhw3$pdbby)[2] <- "date_end"
names(df_mhw3$welin)[2] <- "date_end"
names(df_mhw3$acesp)[3] <- "StationCode"
names(df_mhw3$apaeb)[3] <- "StationCode"
names(df_mhw3$apaes)[3] <- "StationCode"
names(df_mhw3$cbvtc)[3] <- "StationCode"
names(df_mhw3$delbl)[3] <- "StationCode"
names(df_mhw3$delsl)[3] <- "StationCode"
names(df_mhw3$elkap)[3] <- "StationCode"
names(df_mhw3$elksm)[3] <- "StationCode"
names(df_mhw3$grbgb)[3] <- "StationCode"
names(df_mhw3$hudsk)[3] <- "StationCode"
names(df_mhw3$hudts)[3] <- "StationCode"
names(df_mhw3$job09)[3] <- "StationCode"
names(df_mhw3$narpc)[3] <- "StationCode"
names(df_mhw3$nocec)[3] <- "StationCode"
names(df_mhw3$nocrc)[3] <- "StationCode"
names(df_mhw3$pdbby)[3] <- "StationCode"
names(df_mhw3$welin)[3] <- "StationCode"

names(df_lowDO$acesp)[2] <- "date_end"
names(df_lowDO$apaeb)[2] <- "date_end"
names(df_lowDO$apaes)[2] <- "date_end"
names(df_lowDO$cbvtc)[2] <- "date_end"
names(df_lowDO$delbl)[2] <- "date_end"
names(df_lowDO$delsl)[2] <- "date_end"
names(df_lowDO$elkap)[2] <- "date_end"
names(df_lowDO$elksm)[2] <- "date_end"
names(df_lowDO$grbgb)[2] <- "date_end"
names(df_lowDO$hudsk)[2] <- "date_end"
names(df_lowDO$hudts)[2] <- "date_end"
names(df_lowDO$job09)[2] <- "date_end"
names(df_lowDO$narpc)[2] <- "date_end"
names(df_lowDO$nocec)[2] <- "date_end"
names(df_lowDO$nocrc)[2] <- "date_end"
names(df_lowDO$pdbby)[2] <- "date_end"
names(df_lowDO$welin)[2] <- "date_end"
names(df_lowDO$acesp)[3] <- "StationCode"
names(df_lowDO$apaeb)[3] <- "StationCode"
names(df_lowDO$apaes)[3] <- "StationCode"
names(df_lowDO$cbvtc)[3] <- "StationCode"
names(df_lowDO$delbl)[3] <- "StationCode"
names(df_lowDO$delsl)[3] <- "StationCode"
names(df_lowDO$elkap)[3] <- "StationCode"
names(df_lowDO$elksm)[3] <- "StationCode"
names(df_lowDO$grbgb)[3] <- "StationCode"
names(df_lowDO$hudsk)[3] <- "StationCode"
names(df_lowDO$hudts)[3] <- "StationCode"
names(df_lowDO$job09)[3] <- "StationCode"
names(df_lowDO$narpc)[3] <- "StationCode"
names(df_lowDO$nocec)[3] <- "StationCode"
names(df_lowDO$nocrc)[3] <- "StationCode"
names(df_lowDO$pdbby)[3] <- "StationCode"
names(df_lowDO$welin)[3] <- "StationCode"

names(df_lowPH$acesp)[2] <- "date_end"
names(df_lowPH$apaeb)[2] <- "date_end"
names(df_lowPH$apaes)[2] <- "date_end"
names(df_lowPH$cbvtc)[2] <- "date_end"
names(df_lowPH$delbl)[2] <- "date_end"
names(df_lowPH$delsl)[2] <- "date_end"
names(df_lowPH$elkap)[2] <- "date_end"
names(df_lowPH$elksm)[2] <- "date_end"
names(df_lowPH$grbgb)[2] <- "date_end"
names(df_lowPH$hudsk)[2] <- "date_end"
names(df_lowPH$hudts)[2] <- "date_end"
names(df_lowPH$job09)[2] <- "date_end"
names(df_lowPH$narpc)[2] <- "date_end"
names(df_lowPH$nocec)[2] <- "date_end"
names(df_lowPH$nocrc)[2] <- "date_end"
names(df_lowPH$pdbby)[2] <- "date_end"
names(df_lowPH$welin)[2] <- "date_end"
names(df_lowPH$acesp)[3] <- "StationCode"
names(df_lowPH$apaeb)[3] <- "StationCode"
names(df_lowPH$apaes)[3] <- "StationCode"
names(df_lowPH$cbvtc)[3] <- "StationCode"
names(df_lowPH$delbl)[3] <- "StationCode"
names(df_lowPH$delsl)[3] <- "StationCode"
names(df_lowPH$elkap)[3] <- "StationCode"
names(df_lowPH$elksm)[3] <- "StationCode"
names(df_lowPH$grbgb)[3] <- "StationCode"
names(df_lowPH$hudsk)[3] <- "StationCode"
names(df_lowPH$hudts)[3] <- "StationCode"
names(df_lowPH$job09)[3] <- "StationCode"
names(df_lowPH$narpc)[3] <- "StationCode"
names(df_lowPH$nocec)[3] <- "StationCode"
names(df_lowPH$nocrc)[3] <- "StationCode"
names(df_lowPH$pdbby)[3] <- "StationCode"
names(df_lowPH$welin)[3] <- "StationCode"

df_acesp_hw <- as.data.frame(df_mhw3$acesp[,1:3])
df_apaeb_hw <- as.data.frame(df_mhw3$apaeb[,1:3])
df_apaes_hw <- as.data.frame(df_mhw3$apaes[,1:3])
df_cbvtc_hw <- as.data.frame(df_mhw3$cbvtc[,1:3])
df_delbl_hw <- as.data.frame(df_mhw3$delbl[,1:3])
df_delsl_hw <- as.data.frame(df_mhw3$delsl[,1:3])
df_elkap_hw <- as.data.frame(df_mhw3$elkap[,1:3])
df_elksm_hw <- as.data.frame(df_mhw3$elksm[,1:3])
df_grbgb_hw <- as.data.frame(df_mhw3$grbgb[,1:3])
df_hudsk_hw <- as.data.frame(df_mhw3$hudsk[,1:3])
df_hudts_hw <- as.data.frame(df_mhw3$hudts[,1:3])
df_job09_hw <- as.data.frame(df_mhw3$job09[,1:3])
df_narpc_hw <- as.data.frame(df_mhw3$narpc[,1:3])
df_nocec_hw <- as.data.frame(df_mhw3$nocec[,1:3])
df_nocrc_hw <- as.data.frame(df_mhw3$nocrc[,1:3])
df_pdbby_hw <- as.data.frame(df_mhw3$pdbby[,1:3])
df_welin_hw <- as.data.frame(df_mhw3$welin[,1:3])

df_acesp_do <- as.data.frame(df_lowDO$acesp[,1:4])
df_apaeb_do <- as.data.frame(df_lowDO$apaeb[,1:4])
df_apaes_do <- as.data.frame(df_lowDO$apaes[,1:4])
df_cbvtc_do <- as.data.frame(df_lowDO$cbvtc[,1:4])
df_delbl_do <- as.data.frame(df_lowDO$delbl[,1:4])
df_delsl_do <- as.data.frame(df_lowDO$delsl[,1:4])
df_elkap_do <- as.data.frame(df_lowDO$elkap[,1:4])
df_elksm_do <- as.data.frame(df_lowDO$elksm[,1:4])
df_grbgb_do <- as.data.frame(df_lowDO$grbgb[,1:4])
df_hudsk_do <- as.data.frame(df_lowDO$hudsk[,1:4])
df_hudts_do <- as.data.frame(df_lowDO$hudts[,1:4])
df_job09_do <- as.data.frame(df_lowDO$job09[,1:4])
df_narpc_do <- as.data.frame(df_lowDO$narpc[,1:4])
df_nocec_do <- as.data.frame(df_lowDO$nocec[,1:4])
df_nocrc_do <- as.data.frame(df_lowDO$nocrc[,1:4])
df_pdbby_do <- as.data.frame(df_lowDO$pdbby[,1:4])
df_welin_do <- as.data.frame(df_lowDO$welin[,1:4])

df_acesp_ph <- as.data.frame(df_lowPH$acesp[,1:4])
df_apaeb_ph <- as.data.frame(df_lowPH$apaeb[,1:4])
df_apaes_ph <- as.data.frame(df_lowPH$apaes[,1:4])
df_cbvtc_ph <- as.data.frame(df_lowPH$cbvtc[,1:4])
df_delbl_ph <- as.data.frame(df_lowPH$delbl[,1:4])
df_delsl_ph <- as.data.frame(df_lowPH$delsl[,1:4])
df_elkap_ph <- as.data.frame(df_lowPH$elkap[,1:4])
df_elksm_ph <- as.data.frame(df_lowPH$elksm[,1:4])
df_grbgb_ph <- as.data.frame(df_lowPH$grbgb[,1:4])
df_hudsk_ph <- as.data.frame(df_lowPH$hudsk[,1:4])
df_hudts_ph <- as.data.frame(df_lowPH$hudts[,1:4])
df_job09_ph <- as.data.frame(df_lowPH$job09[,1:4])
df_narpc_ph <- as.data.frame(df_lowPH$narpc[,1:4])
df_nocec_ph <- as.data.frame(df_lowPH$nocec[,1:4])
df_nocrc_ph <- as.data.frame(df_lowPH$nocrc[,1:4])
df_pdbby_ph <- as.data.frame(df_lowPH$pdbby[,1:4])
df_welin_ph <- as.data.frame(df_lowPH$welin[,1:4])

for (i in 1:nrow(df_acesp)) {
  # Go through only those that overlap
  if (df_acesp[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_ace)) {
      # Check if within range of df_acesp
      sec_date_range <- df_ace[j, "date_start"]:df_ace[j, "date_end"]
      if (df_acesp[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_acesp[i, "Offset"] <- df_acesp[i, "date_start"] - df_ace[j, "date_start"]
        df_acesp[i, "Offset"] <- abs(df_acesp[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_apaeb)) {
  # Go through only those that overlap
  if (df_apaeb[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_apa)) {
      # Check if within range of df_apaeb
      sec_date_range <- df_apa[j, "date_start"]:df_apa[j, "date_end"]
      if (df_apaeb[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_apaeb[i, "Offset"] <- df_apaeb[i, "date_start"] - df_apa[j, "date_start"]
        df_apaeb[i, "Offset"] <- abs(df_apaeb[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_apaes)) {
  # Go through only those that overlap
  if (df_apaes[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_apa)) {
      # Check if within range of df_apaes
      sec_date_range <- df_apa[j, "date_start"]:df_apa[j, "date_end"]
      if (df_apaes[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_apaes[i, "Offset"] <- df_apaes[i, "date_start"] - df_apa[j, "date_start"]
        df_apaes[i, "Offset"] <- abs(df_apaes[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_cbvtc)) {
  # Go through only those that overlap
  if (df_cbvtc[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_cbv)) {
      # Check if within range of df_cbvtc
      sec_date_range <- df_cbv[j, "date_start"]:df_cbv[j, "date_end"]
      if (df_cbvtc[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_cbvtc[i, "Offset"] <- df_cbvtc[i, "date_start"] - df_cbv[j, "date_start"]
        df_cbvtc[i, "Offset"] <- abs(df_cbvtc[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_delbl)) {
  # Go through only those that overlap
  if (df_delbl[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_del)) {
      # Check if within range of df_delbl
      sec_date_range <- df_del[j, "date_start"]:df_del[j, "date_end"]
      if (df_delbl[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_delbl[i, "Offset"] <- df_delbl[i, "date_start"] - df_del[j, "date_start"]
        df_delbl[i, "Offset"] <- abs(df_delbl[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_delsl)) {
  # Go through only those that overlap
  if (df_delsl[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_del)) {
      # Check if within range of df_delsl
      sec_date_range <- df_del[j, "date_start"]:df_del[j, "date_end"]
      if (df_delsl[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_delsl[i, "Offset"] <- df_delsl[i, "date_start"] - df_del[j, "date_start"]
        df_delsl[i, "Offset"] <- abs(df_delsl[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_elkap)) {
  # Go through only those that overlap
  if (df_elkap[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_elk)) {
      # Check if within range of df_elkap
      sec_date_range <- df_elk[j, "date_start"]:df_elk[j, "date_end"]
      if (df_elkap[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_elkap[i, "Offset"] <- df_elkap[i, "date_start"] - df_elk[j, "date_start"]
        df_elkap[i, "Offset"] <- abs(df_elkap[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_elksm)) {
  # Go through only those that overlap
  if (df_elksm[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_elk)) {
      # Check if within range of df_elksm
      sec_date_range <- df_elk[j, "date_start"]:df_elk[j, "date_end"]
      if (df_elksm[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_elksm[i, "Offset"] <- df_elksm[i, "date_start"] - df_elk[j, "date_start"]
        df_elksm[i, "Offset"] <- abs(df_elksm[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_grbgb)) {
  # Go through only those that overlap
  if (df_grbgb[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_grb)) {
      # Check if within range of df_grbgb
      sec_date_range <- df_grb[j, "date_start"]:df_grb[j, "date_end"]
      if (df_grbgb[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_grbgb[i, "Offset"] <- df_grbgb[i, "date_start"] - df_grb[j, "date_start"]
        df_grbgb[i, "Offset"] <- abs(df_grbgb[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_hudsk)) {
  # Go through only those that overlap
  if (df_hudsk[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_hud)) {
      # Check if within range of df_hudsk
      sec_date_range <- df_hud[j, "date_start"]:df_hud[j, "date_end"]
      if (df_hudsk[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_hudsk[i, "Offset"] <- df_hudsk[i, "date_start"] - df_hud[j, "date_start"]
        df_hudsk[i, "Offset"] <- abs(df_hudsk[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_hudts)) {
  # Go through only those that overlap
  if (df_hudts[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_hud)) {
      # Check if within range of df_hudts
      sec_date_range <- df_hud[j, "date_start"]:df_hud[j, "date_end"]
      if (df_hudts[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_hudts[i, "Offset"] <- df_hudts[i, "date_start"] - df_hud[j, "date_start"]
        df_hudts[i, "Offset"] <- abs(df_hudts[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_job09)) {
  # Go through only those that overlap
  if (df_job09[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_job)) {
      # Check if within range of df_job09
      sec_date_range <- df_job[j, "date_start"]:df_job[j, "date_end"]
      if (df_job09[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_job09[i, "Offset"] <- df_job09[i, "date_start"] - df_job[j, "date_start"]
        df_job09[i, "Offset"] <- abs(df_job09[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_narpc)) {
  # Go through only those that overlap
  if (df_narpc[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_nar)) {
      # Check if within range of df_narpc
      sec_date_range <- df_nar[j, "date_start"]:df_nar[j, "date_end"]
      if (df_narpc[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_narpc[i, "Offset"] <- df_narpc[i, "date_start"] - df_nar[j, "date_start"]
        df_narpc[i, "Offset"] <- abs(df_narpc[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_nocec)) {
  # Go through only those that overlap
  if (df_nocec[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_noc)) {
      # Check if within range of df_nocec
      sec_date_range <- df_noc[j, "date_start"]:df_noc[j, "date_end"]
      if (df_nocec[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_nocec[i, "Offset"] <- df_nocec[i, "date_start"] - df_noc[j, "date_start"]
        df_nocec[i, "Offset"] <- abs(df_nocec[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_nocrc)) {
  # Go through only those that overlap
  if (df_nocrc[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_noc)) {
      # Check if within range of df_nocrc
      sec_date_range <- df_noc[j, "date_start"]:df_noc[j, "date_end"]
      if (df_nocrc[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_nocrc[i, "Offset"] <- df_nocrc[i, "date_start"] - df_noc[j, "date_start"]
        df_nocrc[i, "Offset"] <- abs(df_nocrc[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_pdbby)) {
  # Go through only those that overlap
  if (df_pdbby[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_pdb)) {
      # Check if within range of df_pdbby
      sec_date_range <- df_pdb[j, "date_start"]:df_pdb[j, "date_end"]
      if (df_pdbby[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_pdbby[i, "Offset"] <- df_pdbby[i, "date_start"] - df_pdb[j, "date_start"]
        df_pdbby[i, "Offset"] <- abs(df_pdbby[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_welin)) {
  # Go through only those that overlap
  if (df_welin[i, "Overlap"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_wel)) {
      # Check if within range of df_welin
      sec_date_range <- df_wel[j, "date_start"]:df_wel[j, "date_end"]
      if (df_welin[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_welin[i, "Offset"] <- df_welin[i, "date_start"] - df_wel[j, "date_start"]
        df_welin[i, "Offset"] <- abs(df_welin[i, "Offset"])
      }
    }
  }
}

df_acesp_offset <- df_acesp[df_acesp$Overlap, ]
df_apaeb_offset <- df_apaeb[df_apaeb$Overlap, ]
df_apaes_offset <- df_apaes[df_apaes$Overlap, ]
df_cbvtc_offset <- df_cbvtc[df_cbvtc$Overlap, ]
df_delbl_offset <- df_delbl[df_delbl$Overlap, ]
df_delsl_offset <- df_delsl[df_delsl$Overlap, ]
df_elkap_offset <- df_elkap[df_elkap$Overlap, ]
df_elksm_offset <- df_elksm[df_elksm$Overlap, ]
df_grbgb_offset <- df_grbgb[df_grbgb$Overlap, ]
df_hudsk_offset <- df_hudsk[df_hudsk$Overlap, ]
df_hudts_offset <- df_hudts[df_hudts$Overlap, ]
df_job09_offset <- df_job09[df_job09$Overlap, ]
df_narpc_offset <- df_narpc[df_narpc$Overlap, ]
df_nocec_offset <- df_nocec[df_nocec$Overlap, ]
df_nocrc_offset <- df_nocrc[df_nocrc$Overlap, ]
df_pdbby_offset <- df_pdbby[df_pdbby$Overlap, ]
df_welin_offset <- df_welin[df_welin$Overlap, ]

df_all_offest <- rbind(df_acesp_offset, df_apaeb_offset, df_apaes_offset,
                       df_cbvtc_offset, df_delbl_offset, df_delsl_offset,
                       df_elkap_offset, df_elksm_offset, df_grbgb_offset,
                       df_hudsk_offset, df_hudts_offset, df_job09_offset,
                       df_narpc_offset, df_nocec_offset, df_nocrc_offset,
                       df_pdbby_offset, df_welin_offset)

df_all_offset2 <- aggregate(df_all_offest[,5], list(df_all_offest$StationCode), mean)

acesp <- as.data.frame(mean(df_acesp_offset$Offset))
acesp$Site <- "acesp"
names(acesp)[1] <- "Avg."

apaeb <- as.data.frame(mean(df_apaeb_offset$Offset))
apaeb$Site <- "apaeb"
names(apaeb)[1] <- "Avg."

apaes <- as.data.frame(mean(df_apaes_offset$Offset))
apaes$Site <- "apaes"
names(apaes)[1] <- "Avg."

cbvtc <- as.data.frame(mean(df_cbvtc_offset$Offset))
cbvtc$Site <- "cbvtc"
names(cbvtc)[1] <- "Avg."

delbl <- as.data.frame(mean(df_delbl_offset$Offset))
delbl$Site <- "delbl"
names(delbl)[1] <- "Avg."

delsl <- as.data.frame(mean(df_delsl_offset$Offset))
delsl$Site <- "delsl"
names(delsl)[1] <- "Avg."

elkap <- as.data.frame(mean(df_elkap_offset$Offset))
elkap$Site <- "elkap"
names(elkap)[1] <- "Avg."

elksm <- as.data.frame(mean(df_elksm_offset$Offset))
elksm$Site <- "elksm"
names(elksm)[1] <- "Avg."

grbgb <- as.data.frame(mean(df_grbgb_offset$Offset))
grbgb$Site <- "grbgb"
names(grbgb)[1] <- "Avg."

hudsk <- as.data.frame(mean(df_hudsk_offset$Offset))
hudsk$Site <- "hudsk"
names(hudsk)[1] <- "Avg."

hudts <- as.data.frame(mean(df_hudts_offset$Offset))
hudts$Site <- "hudts"
names(hudts)[1] <- "Avg."

job09 <- as.data.frame(mean(df_job09_offset$Offset))
job09$Site <- "job09"
names(job09)[1] <- "Avg."

narpc <- as.data.frame(mean(df_narpc_offset$Offset))
narpc$Site <- "narpc"
names(narpc)[1] <- "Avg."

nocec <- as.data.frame(mean(df_nocec_offset$Offset))
nocec$Site <- "nocec"
names(nocec)[1] <- "Avg."

nocrc <- as.data.frame(mean(df_nocrc_offset$Offset))
nocrc$Site <- "nocrc"
names(nocrc)[1] <- "Avg."

pdbby <- as.data.frame(mean(df_pdbby_offset$Offset))
pdbby$Site <- "pdbby"
names(pdbby)[1] <- "Avg."

welin <- as.data.frame(mean(df_welin_offset$Offset))
welin$Site <- "welin"
names(welin)[1] <- "Avg."

all_sites <- rbind(acesp,apaeb,apaes,cbvtc,delbl,delsl,elkap,elksm,
                   grbgb,hudsk,hudts,job09,narpc,nocec,nocrc,pdbby,
                   welin)

all_sites$Type <- "EHW"
all_sites$Avg. <- round(all_sites$Avg., 0)
all_sites$Reserve <- c("ace","apa","apa","cbv","del","del","elk","elk","grb","hud","hud",
                       "job","nar","noc","noc","pdb","wel")
all_sites$Order <- c(11,13,14,8,6,7,16,17,2:4,12,5,9,10,15,1)
all_sites <- all_sites[,c(5,4,2,3,1)]

Fig4_EHW_table <- all_sites %>%
  group_by(Reserve,Type) %>%
  summarise(MeanLag = mean(Avg.),
            upper = max(Avg.),
            lower = min(Avg.))
Fig4_EHW_table$order <- c(8,10,6,5,12,2,3,9,4,7,11,1)
Fig4_EHW_table$Region <- c("Southeast","GoM","Mid. Atl.","Mid. Atl.","West","Northeast","Northeast","Southeast","Northeast","Southeast","West","Northeast")

for (i in 1:nrow(df_acesp_do)) {
  # Go through only those that overlap
  if (df_acesp_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_acesp_hw)) {
      # Check if within range of df_acesp
      sec_date_range <- df_acesp_hw[j, "date_start"]:df_acesp_hw[j, "date_end"]
      if (df_acesp_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_acesp_do[i, "Offset"] <- df_acesp_do[i, "date_start"] - df_acesp_hw[j, "date_start"]
        df_acesp_do[i, "Offset"] <- abs(df_acesp_do[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_apaeb_do)) {
  # Go through only those that overlap
  if (df_apaeb_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_apaeb_hw)) {
      # Check if within range of df_apaeb
      sec_date_range <- df_apaeb_hw[j, "date_start"]:df_apaeb_hw[j, "date_end"]
      if (df_apaeb_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_apaeb_do[i, "Offset"] <- df_apaeb_do[i, "date_start"] - df_apaeb_hw[j, "date_start"]
        df_apaeb_do[i, "Offset"] <- abs(df_apaeb_do[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_apaes_do)) {
  # Go through only those that overlap
  if (df_apaes_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_apaes_hw)) {
      # Check if within range of df_apaes
      sec_date_range <- df_apaes_hw[j, "date_start"]:df_apaes_hw[j, "date_end"]
      if (df_apaes_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_apaes_do[i, "Offset"] <- df_apaes_do[i, "date_start"] - df_apaes_hw[j, "date_start"]
        df_apaes_do[i, "Offset"] <- abs(df_apaes_do[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_cbvtc_do)) {
  # Go through only those that overlap
  if (df_cbvtc_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_cbvtc_hw)) {
      # Check if within range of df_cbvtc
      sec_date_range <- df_cbvtc_hw[j, "date_start"]:df_cbvtc_hw[j, "date_end"]
      if (df_cbvtc_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_cbvtc_do[i, "Offset"] <- df_cbvtc_do[i, "date_start"] - df_cbvtc_hw[j, "date_start"]
        df_cbvtc_do[i, "Offset"] <- abs(df_cbvtc_do[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_delbl_do)) {
  # Go through only those that overlap
  if (df_delbl_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_delbl_hw)) {
      # Check if within range of df_delbl
      sec_date_range <- df_delbl_hw[j, "date_start"]:df_delbl_hw[j, "date_end"]
      if (df_delbl_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_delbl_do[i, "Offset"] <- df_delbl_do[i, "date_start"] - df_delbl_hw[j, "date_start"]
        df_delbl_do[i, "Offset"] <- abs(df_delbl_do[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_delsl_do)) {
  # Go through only those that overlap
  if (df_delsl_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_delsl_hw)) {
      # Check if within range of df_delsl
      sec_date_range <- df_delsl_hw[j, "date_start"]:df_delsl_hw[j, "date_end"]
      if (df_delsl_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_delsl_do[i, "Offset"] <- df_delsl_do[i, "date_start"] - df_delsl_hw[j, "date_start"]
        df_delsl_do[i, "Offset"] <- abs(df_delsl_do[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_elkap_do)) {
  # Go through only those that overlap
  if (df_elkap_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_elkap_hw)) {
      # Check if within range of df_elkap
      sec_date_range <- df_elkap_hw[j, "date_start"]:df_elkap_hw[j, "date_end"]
      if (df_elkap_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_elkap_do[i, "Offset"] <- df_elkap_do[i, "date_start"] - df_elkap_hw[j, "date_start"]
        df_elkap_do[i, "Offset"] <- abs(df_elkap_do[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_elksm_do)) {
  # Go through only those that overlap
  if (df_elksm_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_elksm_hw)) {
      # Check if within range of df_elksm
      sec_date_range <- df_elksm_hw[j, "date_start"]:df_elksm_hw[j, "date_end"]
      if (df_elksm_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_elksm_do[i, "Offset"] <- df_elksm_do[i, "date_start"] - df_elksm_hw[j, "date_start"]
        df_elksm_do[i, "Offset"] <- abs(df_elksm_do[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_grbgb_do)) {
  # Go through only those that overlap
  if (df_grbgb_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_grbgb_hw)) {
      # Check if within range of df_grbgb
      sec_date_range <- df_grbgb_hw[j, "date_start"]:df_grbgb_hw[j, "date_end"]
      if (df_grbgb_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_grbgb_do[i, "Offset"] <- df_grbgb_do[i, "date_start"] - df_grbgb_hw[j, "date_start"]
        df_grbgb_do[i, "Offset"] <- abs(df_grbgb_do[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_hudsk_do)) {
  # Go through only those that overlap
  if (df_hudsk_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_hudsk_hw)) {
      # Check if within range of df_hudsk
      sec_date_range <- df_hudsk_hw[j, "date_start"]:df_hudsk_hw[j, "date_end"]
      if (df_hudsk_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_hudsk_do[i, "Offset"] <- df_hudsk_do[i, "date_start"] - df_hudsk_hw[j, "date_start"]
        df_hudsk_do[i, "Offset"] <- abs(df_hudsk_do[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_hudts_do)) {
  # Go through only those that overlap
  if (df_hudts_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_hudts_hw)) {
      # Check if within range of df_hudts
      sec_date_range <- df_hudts_hw[j, "date_start"]:df_hudts_hw[j, "date_end"]
      if (df_hudts_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_hudts_do[i, "Offset"] <- df_hudts_do[i, "date_start"] - df_hudts_hw[j, "date_start"]
        df_hudts_do[i, "Offset"] <- abs(df_hudts_do[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_job09_do)) {
  # Go through only those that overlap
  if (df_job09_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_job09_hw)) {
      # Check if within range of df_job09
      sec_date_range <- df_job09_hw[j, "date_start"]:df_job09_hw[j, "date_end"]
      if (df_job09_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_job09_do[i, "Offset"] <- df_job09_do[i, "date_start"] - df_job09_hw[j, "date_start"]
        df_job09_do[i, "Offset"] <- abs(df_job09_do[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_narpc_do)) {
  # Go through only those that overlap
  if (df_narpc_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_narpc_hw)) {
      # Check if within range of df_narpc
      sec_date_range <- df_narpc_hw[j, "date_start"]:df_narpc_hw[j, "date_end"]
      if (df_narpc_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_narpc_do[i, "Offset"] <- df_narpc_do[i, "date_start"] - df_narpc_hw[j, "date_start"]
        df_narpc_do[i, "Offset"] <- abs(df_narpc_do[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_nocec_do)) {
  # Go through only those that overlap
  if (df_nocec_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_nocec_hw)) {
      # Check if within range of df_nocec
      sec_date_range <- df_nocec_hw[j, "date_start"]:df_nocec_hw[j, "date_end"]
      if (df_nocec_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_nocec_do[i, "Offset"] <- df_nocec_do[i, "date_start"] - df_nocec_hw[j, "date_start"]
        df_nocec_do[i, "Offset"] <- abs(df_nocec_do[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_nocrc_do)) {
  # Go through only those that overlap
  if (df_nocrc_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_nocrc_hw)) {
      # Check if within range of df_nocrc
      sec_date_range <- df_nocrc_hw[j, "date_start"]:df_nocrc_hw[j, "date_end"]
      if (df_nocrc_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_nocrc_do[i, "Offset"] <- df_nocrc_do[i, "date_start"] - df_nocrc_hw[j, "date_start"]
        df_nocrc_do[i, "Offset"] <- abs(df_nocrc_do[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_pdbby_do)) {
  # Go through only those that overlap
  if (df_pdbby_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_pdbby_hw)) {
      # Check if within range of df_pdbby
      sec_date_range <- df_pdbby_hw[j, "date_start"]:df_pdbby_hw[j, "date_end"]
      if (df_pdbby_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_pdbby_do[i, "Offset"] <- df_pdbby_do[i, "date_start"] - df_pdbby_hw[j, "date_start"]
        df_pdbby_do[i, "Offset"] <- abs(df_pdbby_do[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_welin_do)) {
  # Go through only those that overlap
  if (df_welin_do[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_welin_hw)) {
      # Check if within range of df_welin
      sec_date_range <- df_welin_hw[j, "date_start"]:df_welin_hw[j, "date_end"]
      if (df_welin_do[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_welin_do[i, "Offset"] <- df_welin_do[i, "date_start"] - df_welin_hw[j, "date_start"]
        df_welin_do[i, "Offset"] <- abs(df_welin_do[i, "Offset"])
      }
    }
  }
}

df_acesp_offset_do <- df_acesp_do[df_acesp_do$InRange, ]
df_apaeb_offset_do <- df_apaeb_do[df_apaeb_do$InRange, ]
df_apaes_offset_do <- df_apaes_do[df_apaes_do$InRange, ]
df_cbvtc_offset_do <- df_cbvtc_do[df_cbvtc_do$InRange, ]
df_delbl_offset_do <- df_delbl_do[df_delbl_do$InRange, ]
df_delsl_offset_do <- df_delsl_do[df_delsl_do$InRange, ]
df_elkap_offset_do <- df_elkap_do[df_elkap_do$InRange, ]
df_elksm_offset_do <- df_elksm_do[df_elksm_do$InRange, ]
df_grbgb_offset_do <- df_grbgb_do[df_grbgb_do$InRange, ]
df_hudsk_offset_do <- df_hudsk_do[df_hudsk_do$InRange, ]
df_hudts_offset_do <- df_hudts_do[df_hudts_do$InRange, ]
df_job09_offset_do <- df_job09_do[df_job09_do$InRange, ]
df_narpc_offset_do <- df_narpc_do[df_narpc_do$InRange, ]
df_nocec_offset_do <- df_nocec_do[df_nocec_do$InRange, ]
df_nocrc_offset_do <- df_nocrc_do[df_nocrc_do$InRange, ]
df_pdbby_offset_do <- df_pdbby_do[df_pdbby_do$InRange, ]
df_welin_offset_do <- df_welin_do[df_welin_do$InRange, ]

df_all_offset_do <- rbind(df_acesp_offset_do, df_apaeb_offset_do, df_apaes_offset_do,
                          df_cbvtc_offset_do, df_delbl_offset_do, df_delsl_offset_do,
                          df_elkap_offset_do, df_elksm_offset_do, df_grbgb_offset_do,
                          df_hudsk_offset_do, df_hudts_offset_do, df_job09_offset_do,
                          df_narpc_offset_do, df_nocec_offset_do, df_nocrc_offset_do,
                          df_pdbby_offset_do, df_welin_offset_do)

df_all_offset_do2 <- aggregate(df_all_offset_do[,5], list(df_all_offset_do$StationCode), mean)

acesp <- as.data.frame(mean(df_acesp_offset_do$Offset))
acesp$Site <- "acesp"
names(acesp)[1] <- "Avg."

apaeb <- as.data.frame(mean(df_apaeb_offset_do$Offset))
apaeb$Site <- "apaeb"
names(apaeb)[1] <- "Avg."

apaes <- as.data.frame(mean(df_apaes_offset_do$Offset))
apaes$Site <- "apaes"
names(apaes)[1] <- "Avg."

cbvtc <- as.data.frame(mean(df_cbvtc_offset_do$Offset))
cbvtc$Site <- "cbvtc"
names(cbvtc)[1] <- "Avg."

delbl <- as.data.frame(mean(df_delbl_offset_do$Offset))
delbl$Site <- "delbl"
names(delbl)[1] <- "Avg."

delsl <- as.data.frame(mean(df_delsl_offset_do$Offset))
delsl$Site <- "delsl"
names(delsl)[1] <- "Avg."

elkap <- as.data.frame(mean(df_elkap_offset_do$Offset))
elkap$Site <- "elkap"
names(elkap)[1] <- "Avg."

elksm <- as.data.frame(mean(df_elksm_offset_do$Offset))
elksm$Site <- "elksm"
names(elksm)[1] <- "Avg."

grbgb <- as.data.frame(mean(df_grbgb_offset_do$Offset))
grbgb$Site <- "grbgb"
names(grbgb)[1] <- "Avg."

hudsk <- as.data.frame(mean(df_hudsk_offset_do$Offset))
hudsk$Site <- "hudsk"
names(hudsk)[1] <- "Avg."

hudts <- as.data.frame(mean(df_hudts_offset_do$Offset))
hudts$Site <- "hudts"
names(hudts)[1] <- "Avg."

job09 <- as.data.frame(mean(df_job09_offset_do$Offset))
job09$Site <- "job09"
names(job09)[1] <- "Avg."

narpc <- as.data.frame(mean(df_narpc_offset_do$Offset))
narpc$Site <- "narpc"
names(narpc)[1] <- "Avg."

nocec <- as.data.frame(mean(df_nocec_offset_do$Offset))
nocec$Site <- "nocec"
names(nocec)[1] <- "Avg."

nocrc <- as.data.frame(mean(df_nocrc_offset_do$Offset))
nocrc$Site <- "nocrc"
names(nocrc)[1] <- "Avg."

pdbby <- as.data.frame(mean(df_pdbby_offset_do$Offset))
pdbby$Site <- "pdbby"
names(pdbby)[1] <- "Avg."

welin <- as.data.frame(mean(df_welin_offset_do$Offset))
welin$Site <- "welin"
names(welin)[1] <- "Avg."

all_sites_do <- rbind(acesp,apaeb,apaes,cbvtc,delbl,delsl,elkap,elksm,
                      grbgb,hudsk,hudts,job09,narpc,nocec,nocrc,pdbby,
                      welin)

all_sites_do$Type <- "Low DO"
all_sites_do$Avg. <- round(all_sites_do$Avg., 0)
all_sites_do$Reserve <- c("ace","apa","apa","cbv","del","del","elk","elk","grb","hud","hud",
                       "job","nar","noc","noc","pdb","wel")
all_sites_do$Order <- c(11,13,14,8,6,7,16,17,2:4,12,5,9,10,15,1)
all_sites_do <- all_sites_do[,c(5,4,2,3,1)]

Fig4_DO_table <- all_sites_do %>%
  group_by(Reserve,Type) %>%
  summarise(MeanLag = mean(Avg.),
            upper = max(Avg.),
            lower = min(Avg.))
Fig4_DO_table$order <- c(8,10,6,5,12,2,3,9,4,7,11,1)
Fig4_DO_table$Region <- c("Southeast","GoM","Mid. Atl.","Mid. Atl.","West","Northeast","Northeast","Southeast","Northeast","Southeast","West","Northeast")

for (i in 1:nrow(df_acesp_ph)) {
  # Go through only those that overlap
  if (df_acesp_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_acesp_hw)) {
      # Check if within range of df_acesp_hwsp_ph
      sec_date_range <- df_acesp_hw[j, "date_start"]:df_acesp_hw[j, "date_end"]
      if (df_acesp_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_acesp_ph[i, "Offset"] <- df_acesp_ph[i, "date_start"] - df_acesp_hw[j, "date_start"]
        df_acesp_ph[i, "Offset"] <- abs(df_acesp_ph[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_apaeb_ph)) {
  # Go through only those that overlap
  if (df_apaeb_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_apaeb_hw)) {
      # Check if within range of df_apaeb
      sec_date_range <- df_apaeb_hw[j, "date_start"]:df_apaeb_hw[j, "date_end"]
      if (df_apaeb_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_apaeb_ph[i, "Offset"] <- df_apaeb_ph[i, "date_start"] - df_apaeb_hw[j, "date_start"]
        df_apaeb_ph[i, "Offset"] <- abs(df_apaeb_ph[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_apaes_ph)) {
  # Go through only those that overlap
  if (df_apaes_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_apaes_hw)) {
      # Check if within range of df_apaes
      sec_date_range <- df_apaes_hw[j, "date_start"]:df_apaes_hw[j, "date_end"]
      if (df_apaes_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_apaes_ph[i, "Offset"] <- df_apaes_ph[i, "date_start"] - df_apaes_hw[j, "date_start"]
        df_apaes_ph[i, "Offset"] <- abs(df_apaes_ph[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_cbvtc_ph)) {
  # Go through only those that overlap
  if (df_cbvtc_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_cbvtc_hw)) {
      # Check if within range of df_cbvtc
      sec_date_range <- df_cbvtc_hw[j, "date_start"]:df_cbvtc_hw[j, "date_end"]
      if (df_cbvtc_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_cbvtc_ph[i, "Offset"] <- df_cbvtc_ph[i, "date_start"] - df_cbvtc_hw[j, "date_start"]
        df_cbvtc_ph[i, "Offset"] <- abs(df_cbvtc_ph[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_delbl_ph)) {
  # Go through only those that overlap
  if (df_delbl_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_delbl_hw)) {
      # Check if within range of df_delbl
      sec_date_range <- df_delbl_hw[j, "date_start"]:df_delbl_hw[j, "date_end"]
      if (df_delbl_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_delbl_ph[i, "Offset"] <- df_delbl_ph[i, "date_start"] - df_delbl_hw[j, "date_start"]
        df_delbl_ph[i, "Offset"] <- abs(df_delbl_ph[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_delsl_ph)) {
  # Go through only those that overlap
  if (df_delsl_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_delsl_hw)) {
      # Check if within range of df_delsl
      sec_date_range <- df_delsl_hw[j, "date_start"]:df_delsl_hw[j, "date_end"]
      if (df_delsl_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_delsl_ph[i, "Offset"] <- df_delsl_ph[i, "date_start"] - df_delsl_hw[j, "date_start"]
        df_delsl_ph[i, "Offset"] <- abs(df_delsl_ph[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_elkap_ph)) {
  # Go through only those that overlap
  if (df_elkap_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_elkap_hw)) {
      # Check if within range of df_elkap
      sec_date_range <- df_elkap_hw[j, "date_start"]:df_elkap_hw[j, "date_end"]
      if (df_elkap_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_elkap_ph[i, "Offset"] <- df_elkap_ph[i, "date_start"] - df_elkap_hw[j, "date_start"]
        df_elkap_ph[i, "Offset"] <- abs(df_elkap_ph[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_elksm_ph)) {
  # Go through only those that overlap
  if (df_elksm_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_elksm_hw)) {
      # Check if within range of df_elksm
      sec_date_range <- df_elksm_hw[j, "date_start"]:df_elksm_hw[j, "date_end"]
      if (df_elksm_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_elksm_ph[i, "Offset"] <- df_elksm_ph[i, "date_start"] - df_elksm_hw[j, "date_start"]
        df_elksm_ph[i, "Offset"] <- abs(df_elksm_ph[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_grbgb_ph)) {
  # Go through only those that overlap
  if (df_grbgb_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_grbgb_hw)) {
      # Check if within range of df_grbgb
      sec_date_range <- df_grbgb_hw[j, "date_start"]:df_grbgb_hw[j, "date_end"]
      if (df_grbgb_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_grbgb_ph[i, "Offset"] <- df_grbgb_ph[i, "date_start"] - df_grbgb_hw[j, "date_start"]
        df_grbgb_ph[i, "Offset"] <- abs(df_grbgb_ph[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_hudsk_ph)) {
  # Go through only those that overlap
  if (df_hudsk_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_hudsk_hw)) {
      # Check if within range of df_hudsk
      sec_date_range <- df_hudsk_hw[j, "date_start"]:df_hudsk_hw[j, "date_end"]
      if (df_hudsk_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_hudsk_ph[i, "Offset"] <- df_hudsk_ph[i, "date_start"] - df_hudsk_hw[j, "date_start"]
        df_hudsk_ph[i, "Offset"] <- abs(df_hudsk_ph[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_hudts_ph)) {
  # Go through only those that overlap
  if (df_hudts_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_hudts_hw)) {
      # Check if within range of df_hudts
      sec_date_range <- df_hudts_hw[j, "date_start"]:df_hudts_hw[j, "date_end"]
      if (df_hudts_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_hudts_ph[i, "Offset"] <- df_hudts_ph[i, "date_start"] - df_hudts_hw[j, "date_start"]
        df_hudts_ph[i, "Offset"] <- abs(df_hudts_ph[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_job09_ph)) {
  # Go through only those that overlap
  if (df_job09_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_job09_hw)) {
      # Check if within range of df_job09
      sec_date_range <- df_job09_hw[j, "date_start"]:df_job09_hw[j, "date_end"]
      if (df_job09_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_job09_ph[i, "Offset"] <- df_job09_ph[i, "date_start"] - df_job09_hw[j, "date_start"]
        df_job09_ph[i, "Offset"] <- abs(df_job09_ph[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_narpc_ph)) {
  # Go through only those that overlap
  if (df_narpc_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_narpc_hw)) {
      # Check if within range of df_narpc
      sec_date_range <- df_narpc_hw[j, "date_start"]:df_narpc_hw[j, "date_end"]
      if (df_narpc_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_narpc_ph[i, "Offset"] <- df_narpc_ph[i, "date_start"] - df_narpc_hw[j, "date_start"]
        df_narpc_ph[i, "Offset"] <- abs(df_narpc_ph[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_nocec_ph)) {
  # Go through only those that overlap
  if (df_nocec_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_nocec_hw)) {
      # Check if within range of df_nocec
      sec_date_range <- df_nocec_hw[j, "date_start"]:df_nocec_hw[j, "date_end"]
      if (df_nocec_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_nocec_ph[i, "Offset"] <- df_nocec_ph[i, "date_start"] - df_nocec_hw[j, "date_start"]
        df_nocec_ph[i, "Offset"] <- abs(df_nocec_ph[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_nocrc_ph)) {
  # Go through only those that overlap
  if (df_nocrc_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_nocrc_hw)) {
      # Check if within range of df_nocrc
      sec_date_range <- df_nocrc_hw[j, "date_start"]:df_nocrc_hw[j, "date_end"]
      if (df_nocrc_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_nocrc_ph[i, "Offset"] <- df_nocrc_ph[i, "date_start"] - df_nocrc_hw[j, "date_start"]
        df_nocrc_ph[i, "Offset"] <- abs(df_nocrc_ph[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_pdbby_ph)) {
  # Go through only those that overlap
  if (df_pdbby_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_pdbby_hw)) {
      # Check if within range of df_pdbby
      sec_date_range <- df_pdbby_hw[j, "date_start"]:df_pdbby_hw[j, "date_end"]
      if (df_pdbby_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_pdbby_ph[i, "Offset"] <- df_pdbby_ph[i, "date_start"] - df_pdbby_hw[j, "date_start"]
        df_pdbby_ph[i, "Offset"] <- abs(df_pdbby_ph[i, "Offset"])
      }
    }
  }
}
for (i in 1:nrow(df_welin_ph)) {
  # Go through only those that overlap
  if (df_welin_ph[i, "InRange"]) {
    # Loop through all rows in other data frame
    for (j in 1:nrow(df_welin_hw)) {
      # Check if within range of df_welin
      sec_date_range <- df_welin_hw[j, "date_start"]:df_welin_hw[j, "date_end"]
      if (df_welin_ph[i, "date_start"] %in% sec_date_range) {
        # Find absolute difference in start dates
        df_welin_ph[i, "Offset"] <- df_welin_ph[i, "date_start"] - df_welin_hw[j, "date_start"]
        df_welin_ph[i, "Offset"] <- abs(df_welin_ph[i, "Offset"])
      }
    }
  }
}

df_acesp_offset_ph <- df_acesp_ph[df_acesp_ph$InRange, ]
df_apaeb_offset_ph <- df_apaeb_ph[df_apaeb_ph$InRange, ]
df_apaes_offset_ph <- df_apaes_ph[df_apaes_ph$InRange, ]
df_cbvtc_offset_ph <- df_cbvtc_ph[df_cbvtc_ph$InRange, ]
df_delbl_offset_ph <- df_delbl_ph[df_delbl_ph$InRange, ]
df_delsl_offset_ph <- df_delsl_ph[df_delsl_ph$InRange, ]
df_elkap_offset_ph <- df_elkap_ph[df_elkap_ph$InRange, ]
df_elksm_offset_ph <- df_elksm_ph[df_elksm_ph$InRange, ]
df_grbgb_offset_ph <- df_grbgb_ph[df_grbgb_ph$InRange, ]
df_hudsk_offset_ph <- df_hudsk_ph[df_hudsk_ph$InRange, ]
df_hudts_offset_ph <- df_hudts_ph[df_hudts_ph$InRange, ]
df_job09_offset_ph <- df_job09_ph[df_job09_ph$InRange, ]
df_narpc_offset_ph <- df_narpc_ph[df_narpc_ph$InRange, ]
df_nocec_offset_ph <- df_nocec_ph[df_nocec_ph$InRange, ]
df_nocrc_offset_ph <- df_nocrc_ph[df_nocrc_ph$InRange, ]
df_pdbby_offset_ph <- df_pdbby_ph[df_pdbby_ph$InRange, ]
df_welin_offset_ph <- df_welin_ph[df_welin_ph$InRange, ]

df_all_offest_ph <- rbind(df_acesp_offset_ph, df_apaeb_offset_ph, df_apaes_offset_ph,
                          df_cbvtc_offset_ph, df_delbl_offset_ph, df_delsl_offset_ph,
                          df_elkap_offset_ph, df_elksm_offset_ph, df_grbgb_offset_ph,
                          df_hudsk_offset_ph, df_hudts_offset_ph, df_job09_offset_ph,
                          df_narpc_offset_ph, df_nocec_offset_ph, df_nocrc_offset_ph,
                          df_pdbby_offset_ph, df_welin_offset_ph)

df_all_offset_ph2 <- aggregate(df_all_offest_ph[,5], list(df_all_offest_ph$StationCode), mean)

acesp <- as.data.frame(mean(df_acesp_offset_ph$Offset))
acesp$Site <- "acesp"
names(acesp)[1] <- "Avg."

apaeb <- as.data.frame(mean(df_apaeb_offset_ph$Offset))
apaeb$Site <- "apaeb"
names(apaeb)[1] <- "Avg."

apaes <- as.data.frame(mean(df_apaes_offset_ph$Offset))
apaes$Site <- "apaes"
names(apaes)[1] <- "Avg."

cbvtc <- as.data.frame(mean(df_cbvtc_offset_ph$Offset))
cbvtc$Site <- "cbvtc"
names(cbvtc)[1] <- "Avg."

delbl <- as.data.frame(mean(df_delbl_offset_ph$Offset))
delbl$Site <- "delbl"
names(delbl)[1] <- "Avg."

delsl <- as.data.frame(mean(df_delsl_offset_ph$Offset))
delsl$Site <- "delsl"
names(delsl)[1] <- "Avg."

elkap <- as.data.frame(mean(df_elkap_offset_ph$Offset))
elkap$Site <- "elkap"
names(elkap)[1] <- "Avg."

elksm <- as.data.frame(mean(df_elksm_offset_ph$Offset))
elksm$Site <- "elksm"
names(elksm)[1] <- "Avg."

grbgb <- as.data.frame(mean(df_grbgb_offset_ph$Offset))
grbgb$Site <- "grbgb"
names(grbgb)[1] <- "Avg."

hudsk <- as.data.frame(mean(df_hudsk_offset_ph$Offset))
hudsk$Site <- "hudsk"
names(hudsk)[1] <- "Avg."

hudts <- as.data.frame(mean(df_hudts_offset_ph$Offset))
hudts$Site <- "hudts"
names(hudts)[1] <- "Avg."

job09 <- as.data.frame(mean(df_job09_offset_ph$Offset))
job09$Site <- "job09"
names(job09)[1] <- "Avg."

narpc <- as.data.frame(mean(df_narpc_offset_ph$Offset))
narpc$Site <- "narpc"
names(narpc)[1] <- "Avg."

nocec <- as.data.frame(mean(df_nocec_offset_ph$Offset))
nocec$Site <- "nocec"
names(nocec)[1] <- "Avg."

nocrc <- as.data.frame(mean(df_nocrc_offset_ph$Offset))
nocrc$Site <- "nocrc"
names(nocrc)[1] <- "Avg."

pdbby <- as.data.frame(mean(df_pdbby_offset_ph$Offset))
pdbby$Site <- "pdbby"
names(pdbby)[1] <- "Avg."

welin <- as.data.frame(mean(df_welin_offset_ph$Offset))
welin$Site <- "welin"
names(welin)[1] <- "Avg."

all_sites_pH <- rbind(acesp,apaeb,apaes,cbvtc,delbl,delsl,elkap,elksm,
                      grbgb,hudsk,hudts,job09,narpc,nocec,nocrc,pdbby,
                      welin)

all_sites_pH$Type <- "Low pH"
all_sites_pH$Avg. <- round(all_sites_pH$Avg., 0)
all_sites_pH$Reserve <- c("ace","apa","apa","cbv","del","del","elk","elk","grb","hud","hud",
                          "job","nar","noc","noc","pdb","wel")
all_sites_pH$Order <- c(11,13,14,8,6,7,16,17,2:4,12,5,9,10,15,1)
all_sites_pH <- all_sites_pH[,c(5,4,2,3,1)]

Fig4_PH_table <- all_sites_pH %>%
  group_by(Reserve,Type) %>%
  summarise(MeanLag = mean(Avg.),
            upper = max(Avg.),
            lower = min(Avg.))
Fig4_PH_table$order <- c(8,10,6,5,12,2,3,9,4,7,11,1)
Fig4_PH_table$Region <- c("Southeast","GoM","Mid. Atl.","Mid. Atl.","West","Northeast","Northeast","Southeast","Northeast","Southeast","West","Northeast")

Fig4_table <- rbind(Fig4_EHW_table,Fig4_DO_table,Fig4_PH_table)
Fig4_table <- Fig4_table[,c(6:7,1:5)]
Fig4_table <- as.data.frame(Fig4_table)
Fig4_table$MeanLag <- as.numeric(Fig4_table$MeanLag)
Fig4_table$upper <- as.numeric(Fig4_table$upper)
Fig4_table$lower <- as.numeric(Fig4_table$lower)

Fig4_table <- Fig4_table %>%
  arrange(-desc(order)) %>%
  arrange(-desc(Type))

cols <- c("EHW" = "#525252", "Low DO" = "#969696", "Low pH" = "#ffffff")

Fig4_table %>%
  arrange(-desc(order)) %>%
  arrange(-desc(Type)) %>%
  mutate(Reserve = factor(Reserve, levels = c("wel","grb","hud","nar","del","cbv","noc","ace","job","apa","pdb","elk"))) %>%
  ggplot(aes(x = Reserve, y = MeanLag)) +
  geom_col(aes(fill = Type), position = "dodge", color = "black") +
  scale_fill_manual(values = cols) +
  geom_errorbar(aes(fill = Type, ymin = lower, ymax = upper), position = "dodge", width = 0.9, color = "black") +
  labs(y = "Average Lag Time (days)",
       x = "NERRS Reserves & Regions") +
  theme_bw() +
  theme(plot.margin = margin(5,5,50,5,"pt"),
        panel.grid = element_blank(),
        text = element_text(size = 16),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = "black"),
        axis.title.x = element_text(vjust = -9),
        legend.title = element_blank(),
        legend.direction = "horizontal",
        legend.position = c(0.28,0.95),
        legend.background = element_blank()) +
  coord_cartesian(clip = "off", ylim = c(0, NA)) +
  annotate("text", x = c(2.5,5.5,8,10,11.5), y = -1.15, label = c("Northeast", "Mid. Atl.","Southeast","GoM","West"), size = 5) +
  annotate("segment", x = c(4.5,6.5,9.5,10.5), xend = c(4.5,6.5,9.5,10.5), y = -0.4, yend = -1.5)

all_sites %>%
  summarise(lower = min(Avg.),
            upper = max(Avg.))
all_sites_do %>%
  summarise(Mean = round(mean(Avg., na.rm = TRUE),0),
            SD = round(sd(Avg., na.rm = TRUE),0))
all_sites_pH %>%
  summarise(Mean = round(mean(Avg., na.rm = TRUE),0),
            SD = round(sd(Avg., na.rm = TRUE),0))

# Figure 5: Exported image as width = 750 height = 650

df1 <- cbind(saveDatWarm,saveCatWarm[,c(3:5,11:12)])
df_keep_warm <- df1[,c(1:5,23,28,24,27,25,6:8,26,9,10:22)]

AHW_table <- df_keep_warm %>%
  group_by(Station) %>%
  summarise(NumAHW_Events = length(duration),
            Type = "AHW")
names(AHW_table)[1] <- "site"

MHW2 <- MHW[MHW$Year >= 2002 & MHW$Year <= 2019,]
LDO2 <- LDO[LDO$Year >= 2002 & LDO$Year <= 2019,]
LPH2 <- LPH[LPH$Year >= 2002 & LPH$Year <= 2019,]

MHW_table <- MHW2 %>%
  group_by(Station) %>%
  summarise(NumMHW_Events = length(duration),
            Type = "MHW")

LDO_table <- LDO2 %>%
  group_by(Station) %>%
  summarise(NumLDO_Events = length(duration),
            Type = "LowDO")

LPH_table <- LPH2 %>%
  group_by(Station) %>%
  summarise(NumLPH_Events = length(duration),
            Type = 'LowPH')

WQ_table <- left_join(MHW_table,LDO_table, by = "Station")
WQ_table <- left_join(WQ_table,LPH_table, by = "Station")
WQ_table$site <- c("ace","apa","apa","cbv","del","del","elk","elk","grb","hud","hud","job","nar","noc","noc","pdb","wel")

# Below could be written better however dplyr is not working properly at the moment

AHW_table1 <- AHW_table %>%
  dplyr::group_by(site) %>%
  dplyr::summarize(Mean_Events = mean(NumAHW_Events),
                   Type = "AHW")
AHW_table2 <- AHW_table %>%
  dplyr::group_by(site) %>%
  dplyr::summarize(upper = max(NumAHW_Events))
AHW_table3 <- AHW_table %>%
  dplyr::group_by(site) %>%
  dplyr::summarize(lower = min(NumAHW_Events))
AHW_table4 <- left_join(AHW_table1,AHW_table2, by = "site")
AHW_table4 <- left_join(AHW_table4,AHW_table3, by = "site")
AHW_table4$order <- c(8,10,6,5,12,2,3,9,4,7,11,1)
AHW_table4$Region <- c("Southeast","GoM","Mid. Atl.","Mid. Atl.","West","Northeast","Northeast","Southeast","Northeast","Southeast","West","Northeast")
AHW_table4 <- AHW_table4[,c(6,1,7,3,2,4:5)]

MHW_table1 <- WQ_table %>%
  dplyr::group_by(site) %>%
  dplyr::summarize(Mean_Events = mean(NumMHW_Events),
                   Type = "EHW")
MHW_table2 <- WQ_table %>%
  dplyr::group_by(site) %>%
  dplyr::summarize(upper = max(NumMHW_Events))
MHW_table3 <- WQ_table %>%
  dplyr::group_by(site) %>%
  dplyr::summarize(lower = min(NumMHW_Events))
MHW_table4 <- left_join(MHW_table1,MHW_table2, by = "site")
MHW_table4 <- left_join(MHW_table4,MHW_table3, by = "site")
MHW_table4$order <- c(8,10,6,5,12,2,3,9,4,7,11,1)
MHW_table4$Region <- c("Southeast","GoM","Mid. Atl.","Mid. Atl.","West","Northeast","Northeast","Southeast","Northeast","Southeast","West","Northeast")
MHW_table4 <- MHW_table4[,c(6,1,7,3,2,4:5)]

LDO_table1 <- WQ_table %>%
  dplyr::group_by(site) %>%
  dplyr::summarize(Mean_Events = mean(NumLDO_Events),
                   Type = "Low DO")
LDO_table2 <- WQ_table %>%
  dplyr::group_by(site) %>%
  dplyr::summarize(upper = max(NumLDO_Events))
LDO_table3 <- WQ_table %>%
  dplyr::group_by(site) %>%
  dplyr::summarize(lower = min(NumLDO_Events))
LDO_table4 <- left_join(LDO_table1,LDO_table2, by = "site")
LDO_table4 <- left_join(LDO_table4,LDO_table3, by = "site")
LDO_table4$order <- c(8,10,6,5,12,2,3,9,4,7,11,1)
LDO_table4$Region <- c("Southeast","GoM","Mid. Atl.","Mid. Atl.","West","Northeast","Northeast","Southeast","Northeast","Southeast","West","Northeast")
LDO_table4 <- LDO_table4[,c(6,1,7,3,2,4:5)]

LPH_table1 <- WQ_table %>%
  dplyr::group_by(site) %>%
  dplyr::summarize(Mean_Events = mean(NumLPH_Events),
                   Type = "Low pH")
LPH_table2 <- WQ_table %>%
  dplyr::group_by(site) %>%
  dplyr::summarize(upper = max(NumLPH_Events))
LPH_table3 <- WQ_table %>%
  dplyr::group_by(site) %>%
  dplyr::summarize(lower = min(NumLPH_Events))
LPH_table4 <- left_join(LPH_table1,LPH_table2, by = "site")
LPH_table4 <- left_join(LPH_table4,LPH_table3, by = "site")
LPH_table4$order <- c(8,10,6,5,12,2,3,9,4,7,11,1)
LPH_table4$Region <- c("Southeast","GoM","Mid. Atl.","Mid. Atl.","West","Northeast","Northeast","Southeast","Northeast","Southeast","West","Northeast")
LPH_table4 <- LPH_table4[,c(6,1,7,3,2,4:5)]

Fig5_table <- rbind(AHW_table4,MHW_table4,LDO_table4,LPH_table4)
Fig5_table <- Fig5_table %>%
  arrange(-desc(order)) %>%
  arrange(-desc(Type))

cols <- c("AHW" = "#000000", "EHW" = "#525252", "Low DO" = "#969696", "Low pH" = "#ffffff")

Fig5_table %>%
  arrange(-desc(order)) %>%
  arrange(-desc(Type)) %>%
  mutate(site = factor(site, levels = c("wel","grb","hud","nar","del","cbv","noc","ace","job","apa","pdb","elk"))) %>%
  ggplot(aes(x = site, y = Mean_Events)) +
  geom_col(aes(fill = Type), position = "dodge", color = "black") +
  scale_fill_manual(values = cols) +
  geom_errorbar(aes(fill = Type, ymin = lower, ymax = upper), position = "dodge", width = 0.9, color = "black") +
  labs(y = "Total Number of Events ('02-'19)",
       x = "NERRS Reserves & Regions") +
  theme_bw() +
  theme(plot.margin = margin(5,5,50,5,"pt"),
        panel.grid = element_blank(),
        text = element_text(size = 16),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = "black"),
        axis.title.x = element_text(vjust = -9),
        legend.title = element_blank(),
        legend.direction = "horizontal",
        legend.position = c(0.28,0.95),
        legend.background = element_blank()) +
  coord_cartesian(clip = "off", ylim = c(0, NA)) +
  annotate("text", x = c(2.5,5.5,8,10,11.5), y = -13, label = c("Northeast", "Mid. Atl.", "Southeast","GoM","West"), size = 5) +
  annotate("segment", x = c(4.5,6.5,9.5,10.5), xend = c(4.5,6.5,9.5,10.5), y = -4.6, yend = -17)

AHW_table %>%
  summarise(Mean = round(mean(NumAHW_Events),0),
            SD = round(sd(NumAHW_Events),0))

### Table 2: 10% False Discovery Rate (FDR: http://www.biostathandbook.com/multiplecomparisons.html)

fdr_table <- data.frame(matrix(ncol = 3, nrow = 75))
x <- c("TestType", "Rank", "FDR_0.1")
colnames(fdr_table) <- x
fdr_table[1:5,1] <- "Time"
fdr_table[6:25,1] <- "Season"
fdr_table[26:50,1] <- "Salinity"
fdr_table[51:75,1] <- "Region"
fdr_table[1:5,2] <- seq(1,5,1)
fdr_table[6:25,2] <- seq(1,20,1)
fdr_table[26:50,2] <- seq(1,25,1)
fdr_table[51:75,2] <- seq(1,25,1)
fdr_table[1:5,3] <- (fdr_table$Rank[1:5]/5)*.1
fdr_table[6:25,3] <- (fdr_table$Rank[6:25]/20)*.1
fdr_table[26:50,3] <- (fdr_table$Rank[26:50]/25)*.1
fdr_table[51:75,3] <- (fdr_table$Rank[51:75]/25)*.1

mhw.time <- rbind(mhw_time_decline,mhw_time_duration,mhw_time_events,mhw_time_intensity,mhw_time_onset)
mhw.time <- mhw.time %>%
  arrange(-desc(p.val))
mhw.time$Rank <- seq(1,5,1)

mhw.season <- rbind(mhw_season_decline,mhw_season_duration,mhw_season_events,mhw_season_intensity,mhw_season_onset)
mhw.season <- mhw.season %>%
  arrange(-desc(p.val))
mhw.season$Rank <- seq(1,20,1)

mhw.salinity <- rbind(mhw_sal_decline,mhw_sal_duration,mhw_sal_events,mhw_sal_intensity,mhw_sal_onset)
mhw.salinity <- mhw.salinity %>%
  arrange(-desc(p.val))
mhw.salinity$Rank <- seq(1,25,1)

mhw.region <- rbind(mhw_region_decline,mhw_region_duration,mhw_region_events,mhw_region_intensity,mhw_region_onset)
mhw.region <- mhw.region %>%
  arrange(-desc(p.val))
mhw.region$Rank <- seq(1,25,1)

do.time <- rbind(do_time_decline,do_time_duration,do_time_events,do_time_intensity,do_time_onset)
do.time <- do.time %>%
  arrange(-desc(p.val))
do.time$Rank <- seq(1,5,1)

do.season <- rbind(do_season_decline,do_season_duration,do_season_events,do_season_intensity,do_season_onset)
do.season <- do.season %>%
  arrange(-desc(p.val))
do.season$Rank <- seq(1,20,1)

do.salinity <- rbind(do_sal_decline,do_sal_duration,do_sal_events,do_sal_intensity,do_sal_onset)
do.salinity <- do.salinity %>%
  arrange(-desc(p.val))
do.salinity$Rank <- seq(1,25,1)

do.region <- rbind(do_region_decline,do_region_duration,do_region_events,do_region_intensity,do_region_onset)
do.region <- do.region %>%
  arrange(-desc(p.val))
do.region$Rank <- seq(1,25,1)

ph.time <- rbind(ph_time_decline,ph_time_duration,ph_time_events,ph_time_intensity,ph_time_onset)
ph.time <- ph.time %>%
  arrange(-desc(p.val))
ph.time$Rank <- seq(1,5,1)

ph.season <- rbind(ph_season_decline,ph_season_duration,ph_season_events,ph_season_intensity,ph_season_onset)
ph.season <- ph.season %>%
  arrange(-desc(p.val))
ph.season$Rank <- seq(1,20,1)

ph.salinity <- rbind(ph_sal_decline,ph_sal_duration,ph_sal_events,ph_sal_intensity,ph_sal_onset)
ph.salinity <- ph.salinity %>%
  arrange(-desc(p.val))
ph.salinity$Rank <- seq(1,25,1)

ph.region <- rbind(ph_region_decline,ph_region_duration,ph_region_events,ph_region_intensity,ph_region_onset)
ph.region <- ph.region %>%
  arrange(-desc(p.val))
ph.region$Rank <- seq(1,25,1)

mhw_MKSS_results <- rbind(mhw.time,mhw.season,mhw.salinity,mhw.region)
mhw_MKSS_results <- mhw_MKSS_results[,c(6,1:5)]
mhw_MKSS_results <- left_join(mhw_MKSS_results,fdr_table, by = c("TestType","Rank"))
mhw_MKSS_results$SigTest <- ifelse(mhw_MKSS_results$p.val < mhw_MKSS_results$FDR_0.1,"Sig","NS")
View(mhw_MKSS_results)

do_MKSS_results <- rbind(do.time,do.season,do.salinity,do.region)
do_MKSS_results <- do_MKSS_results[,c(6,1:5)]
do_MKSS_results <- left_join(do_MKSS_results,fdr_table, by = c("TestType","Rank"))
do_MKSS_results$SigTest <- ifelse(do_MKSS_results$p.val < do_MKSS_results$FDR_0.1,"Sig","NS")
View(do_MKSS_results)

ph_MKSS_results <- rbind(ph.time,ph.season,ph.salinity,ph.region)
ph_MKSS_results <- ph_MKSS_results[,c(6,1:5)]
ph_MKSS_results <- left_join(ph_MKSS_results,fdr_table, by = c("TestType","Rank"))
ph_MKSS_results$SigTest <- ifelse(ph_MKSS_results$p.val < ph_MKSS_results$FDR_0.1,"Sig","NS")
View(ph_MKSS_results)

mhw_MKSS_results_sig <- mhw_MKSS_results[c(1:3,6,51),]
mhw_MKSS_results_sig$Test <- "mhw"
do_MKSS_results_sig <- do_MKSS_results[c(1:4,6,26:30,51:58),]
do_MKSS_results_sig$Test <- "lowDO"
ph_MKSS_results_sig <- ph_MKSS_results[c(1,6:10,51:58),]
ph_MKSS_results_sig$Test <- "lowPH"

sig_MKSS_results <- rbind(mhw_MKSS_results_sig,do_MKSS_results_sig,ph_MKSS_results_sig)

#Table 2: Atmospheric Heatwaves (AHW)

AHW$Year <- year(AHW$date_start)
AHW$Month <- month(AHW$date_start)
AHW$Season <- ifelse(AHW$Month >=12, "Winter",
                     ifelse(AHW$Month >= 9, "Fall",
                            ifelse(AHW$Month >= 6, "Summer",
                                   ifelse(AHW$Month >= 3, "Spring",
                                          ifelse(AHW$Month >=1, "Winter", NA)))))
AHW$Region <- ifelse(AHW$StationCode == "pdb", "West",
                     ifelse(AHW$StationCode == "elk", "West",
                            ifelse(AHW$StationCode == "apa", "GoM",
                                   ifelse(AHW$StationCode == "ace", "SE",
                                          ifelse(AHW$StationCode == "noc", "SE",
                                                 ifelse(AHW$StationCode == "job", "SE",
                                                        ifelse(AHW$StationCode == "cbv", "MidAtl",
                                                               ifelse(AHW$StationCode == "del", "MidAtl",
                                                                      ifelse(AHW$StationCode == "grb", "NE",
                                                                             ifelse(AHW$StationCode == "hud", "NE",
                                                                                    ifelse(AHW$StationCode == "nar", "NE",
                                                                                           ifelse(AHW$StationCode == "wel", "NE", NA))))))))))))

ahw_region <- AHW %>%
  group_by(Year, Region) %>%
  summarise(Avg.Duration = mean(duration),
            Avg.CuInt = mean(intensity_cumulative_relThresh),
            Avg.Onset = mean(rate_onset),
            Avg.Decline = mean(rate_decline),
            SumEvents = length(duration))
ahw_season <- AHW %>%
  group_by(Year, Season) %>%
  summarise(Avg.Duration = mean(duration),
            Avg.CuInt = mean(intensity_cumulative_relThresh),
            Avg.Onset = mean(rate_onset),
            Avg.Decline = mean(rate_decline),
            Frequency = length(duration)/12)
ahw_time <- AHW %>%
  group_by(Year) %>%
  summarise(Avg.Duration = mean(duration),
            Avg.CuInt = mean(intensity_cumulative_relThresh),
            Avg.Onset = mean(rate_onset),
            Avg.Decline = mean(rate_decline),
            Frequency = length(duration)/12)

ahw_region$nStations[ahw_region$Region == 'NE'] <- 4
ahw_region$nStations[ahw_region$Region == 'MidAtl'] <- 2
ahw_region$nStations[ahw_region$Region == 'SE'] <- 3
ahw_region$nStations[ahw_region$Region == 'GoM'] <- 1
ahw_region$nStations[ahw_region$Region == 'West'] <- 2
ahw_region$Frequency = round(ahw_region$SumEvents/ahw_region$nStations, digits = 2)

x1 <- as.data.frame(seq(from = 2002, to = 2019, by = 1))
x2 <- as.data.frame(seq(from = 2002, to = 2019, by = 1))
x3 <- as.data.frame(seq(from = 2002, to = 2019, by = 1))
x4 <- as.data.frame(seq(from = 2002, to = 2019, by = 1))
x5 <- as.data.frame(seq(from = 2002, to = 2019, by = 1))
names(x1)[1] <- "Year"
names(x2)[1] <- "Year"
names(x3)[1] <- "Year"
names(x4)[1] <- "Year"
names(x5)[1] <- "Year"
x1$Region <- "GoM"
x2$Region <- "MidAtl"
x3$Region <- "SE"
x4$Region <- "West"
x5$Region <- "NE"
region <- rbind(x1,x2,x3,x4,x5)
ahw_region <- merge(ahw_region, region, by = c("Year","Region"), all = TRUE)
ahw_region <- ahw_region[,c(1:6,9)]
ahw_region[c(39,61),3:7] <- 0

ahw_time$Type <- "AHW"
ahw_time <- ahw_time[,c(1,7,2:6)]

aa <- unique(ahw_season$Season)
bb <- unique(ahw_region$Region)
cc <- unique(ahw_time$Type)

# AHW Season

for(i in 1:length(aa)){
  curDat = ahw_season[ahw_season$Season == aa[i],]
  ts = ts(data = curDat[, 3],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = aa[i]
  cur_ahw_season = data.frame(TestType = "Season",
                             Variable = "Avg.Duration",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ahw_season_duration = cur_ahw_season
  } else{
    ahw_season_duration = rbind(ahw_season_duration, cur_ahw_season)
  }
}
for(i in 1:length(aa)){
  curDat = ahw_season[ahw_season$Season == aa[i],]
  ts = ts(data = curDat[, 4],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = aa[i]
  cur_ahw_season = data.frame(TestType = "Season",
                             Variable = "Avg.CuInt",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ahw_season_intensity = cur_ahw_season
  } else{
    ahw_season_intensity = rbind(ahw_season_intensity, cur_ahw_season)
  }
}
for(i in 1:length(aa)){
  curDat = ahw_season[ahw_season$Season == aa[i],]
  ts = ts(data = curDat[, 5],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = aa[i]
  cur_ahw_season = data.frame(TestType = "Season",
                             Variable = "Avg.Onset",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ahw_season_onset = cur_ahw_season
  } else{
    ahw_season_onset = rbind(ahw_season_onset, cur_ahw_season)
  }
}
for(i in 1:length(aa)){
  curDat = ahw_season[ahw_season$Season == aa[i],]
  ts = ts(data = curDat[, 6],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = aa[i]
  cur_ahw_season = data.frame(TestType = "Season",
                             Variable = "Avg.Decline",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ahw_season_decline = cur_ahw_season
  } else{
    ahw_season_decline = rbind(ahw_season_decline, cur_ahw_season)
  }
}
for(i in 1:length(aa)){
  curDat = ahw_season[ahw_season$Season == aa[i],]
  ts = ts(data = curDat[, 7],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Season = aa[i]
  cur_ahw_season = data.frame(TestType = "Season",
                             Variable = "Frequency",
                             Category = Season,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ahw_season_events = cur_ahw_season
  } else{
    ahw_season_events = rbind(ahw_season_events, cur_ahw_season)
  }
}

# AHW Region

for(i in 1:length(bb)){
  curDat = ahw_region[ahw_region$Region == bb[i],]
  ts = ts(data = curDat[, 3],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = bb[i]
  cur_ahw_region = data.frame(TestType = "Region",
                             Variable = "Avg.Duration",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ahw_region_duration = cur_ahw_region
  } else{
    ahw_region_duration = rbind(ahw_region_duration, cur_ahw_region)
  }
}
for(i in 1:length(bb)){
  curDat = ahw_region[ahw_region$Region == bb[i],]
  ts = ts(data = curDat[, 4],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = bb[i]
  cur_ahw_region = data.frame(TestType = "Region",
                             Variable = "Avg.CuInt",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ahw_region_intensity = cur_ahw_region
  } else{
    ahw_region_intensity = rbind(ahw_region_intensity, cur_ahw_region)
  }
}
for(i in 1:length(bb)){
  curDat = ahw_region[ahw_region$Region == bb[i],]
  ts = ts(data = curDat[, 5],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = bb[i]
  cur_ahw_region = data.frame(TestType = "Region",
                             Variable = "Avg.Onset",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ahw_region_onset = cur_ahw_region
  } else{
    ahw_region_onset = rbind(ahw_region_onset, cur_ahw_region)
  }
}
for(i in 1:length(bb)){
  curDat = ahw_region[ahw_region$Region == bb[i],]
  ts = ts(data = curDat[, 6],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = bb[i]
  cur_ahw_region = data.frame(TestType = "Region",
                             Variable = "Avg.Decline",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ahw_region_decline = cur_ahw_region
  } else{
    ahw_region_decline = rbind(ahw_region_decline, cur_ahw_region)
  }
}
for(i in 1:length(bb)){
  curDat = ahw_region[ahw_region$Region == bb[i],]
  ts = ts(data = curDat[, 7],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Region = bb[i]
  cur_ahw_region = data.frame(TestType = "Region",
                             Variable = "Frequency",
                             Category = Region,
                             slope = round(slope, 3),
                             p.val = round(p.val, 4))
  if( i == 1){
    ahw_region_events = cur_ahw_region
  } else{
    ahw_region_events = rbind(ahw_region_events, cur_ahw_region)
  }
}

# AHW Time

for(i in 1:length(cc)){
  curDat = ahw_time[ahw_time$Type == cc[i],]
  ts = ts(data = curDat[, 3],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = cc[i]
  cur_ahw_time = data.frame(TestType = "Time",
                           Variable = "Avg.Duration",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    ahw_time_duration = cur_ahw_time
  } else{
    ahw_time_duration = rbind(ahw_time_duration, cur_ahw_time)
  }
}
for(i in 1:length(cc)){
  curDat = ahw_time[ahw_time$Type == cc[i],]
  ts = ts(data = curDat[, 4],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = cc[i]
  cur_ahw_time = data.frame(TestType = "Time",
                           Variable = "Avg.CuInt",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    ahw_time_intensity = cur_ahw_time
  } else{
    ahw_time_intensity = rbind(ahw_time_intensity, cur_ahw_time)
  }
}
for(i in 1:length(cc)){
  curDat = ahw_time[ahw_time$Type == cc[i],]
  ts = ts(data = curDat[, 5],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = cc[i]
  cur_ahw_time = data.frame(TestType = "Time",
                           Variable = "Avg.Onset",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    ahw_time_onset = cur_ahw_time
  } else{
    ahw_time_onset = rbind(ahw_time_onset, cur_ahw_time)
  }
}
for(i in 1:length(cc)){
  curDat = ahw_time[ahw_time$Type == cc[i],]
  ts = ts(data = curDat[, 6],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = cc[i]
  cur_ahw_time = data.frame(TestType = "Time",
                           Variable = "Avg.Decline",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    ahw_time_decline = cur_ahw_time
  } else{
    ahw_time_decline = rbind(ahw_time_decline, cur_ahw_time)
  }
}
for(i in 1:length(cc)){
  curDat = ahw_time[ahw_time$Type == cc[i],]
  ts = ts(data = curDat[, 7],
          frequency = 1,
          start = min(curDat$Year),
          end = max(curDat$Year))
  ManKen = MannKendall(ts)
  ss = sens.slope(ts)
  p.val = ManKen$sl
  slope = ss$estimates
  Type = cc[i]
  cur_ahw_time = data.frame(TestType = "Time",
                           Variable = "Frequency",
                           Category = "Time",
                           slope = round(slope, 3),
                           p.val = round(p.val, 4))
  if( i == 1){
    ahw_time_events = cur_ahw_time
  } else{
    ahw_time_events = rbind(ahw_time_events, cur_ahw_time)
  }
}

fdr_table_ahw <- data.frame(matrix(ncol = 3, nrow = 50))
x <- c("TestType", "Rank", "FDR_0.1")
colnames(fdr_table_ahw) <- x
fdr_table_ahw[1:5,1] <- "Time"
fdr_table_ahw[6:25,1] <- "Season"
fdr_table_ahw[26:50,1] <- "Region"
fdr_table_ahw[1:5,2] <- seq(1,5,1)
fdr_table_ahw[6:25,2] <- seq(1,20,1)
fdr_table_ahw[26:50,2] <- seq(1,25,1)
fdr_table_ahw[1:5,3] <- (fdr_table_ahw$Rank[1:5]/5)*.1
fdr_table_ahw[6:25,3] <- (fdr_table_ahw$Rank[6:25]/20)*.1
fdr_table_ahw[26:50,3] <- (fdr_table_ahw$Rank[26:50]/25)*.1

ahw.time <- rbind(ahw_time_decline,ahw_time_duration,ahw_time_events,ahw_time_intensity,ahw_time_onset)
ahw.time <- ahw.time %>%
  arrange(-desc(p.val))
ahw.time$Rank <- seq(1,5,1)

ahw.season <- rbind(ahw_season_decline,ahw_season_duration,ahw_season_events,ahw_season_intensity,ahw_season_onset)
ahw.season <- ahw.season %>%
  arrange(-desc(p.val))
ahw.season$Rank <- seq(1,20,1)

ahw.region <- rbind(ahw_region_decline,ahw_region_duration,ahw_region_events,ahw_region_intensity,ahw_region_onset)
ahw.region <- ahw.region %>%
  arrange(-desc(p.val))
ahw.region$Rank <- seq(1,25,1)

ahw_MKSS_results <- rbind(ahw.time,ahw.season,ahw.region)
ahw_MKSS_results <- ahw_MKSS_results[,c(6,1:5)]
ahw_MKSS_results <- left_join(ahw_MKSS_results,fdr_table_ahw, by = c("TestType","Rank"))
ahw_MKSS_results$SigTest <- ifelse(ahw_MKSS_results$p.val < ahw_MKSS_results$FDR_0.1,"Sig","NS")
View(ahw_MKSS_results)

sig_MKSS_results <- rbind(mhw_MKSS_results_sig,do_MKSS_results_sig,ph_MKSS_results_sig)
setwd("D:/School/NERRSdata/Manuscript/Figures/Take2")
write.csv(sig_MKSS_results,'Table2_v2.csv')

### Figure 6: Export all figures as width = 1000 height = 1300

saveCat_obsTemp$Year <- year(saveCat_obsTemp$peak_date)
saveCat_obsDO$Year <- year(saveCat_obsDO$peak_date)
saveCat_obsPH$Year <- year(saveCat_obsPH$peak_date)

dat_temp <- saveCat_obsTemp %>% count(category, Year, sort = TRUE)
dat_do <- saveCat_obsDO %>% count(category, Year, sort = TRUE)
dat_ph <- saveCat_obsPH %>% count(category, Year, sort = TRUE)

fillout_year <- rep(seq(from = 1996, to = 2019, by = 1), 4)
fillout_year <- sort(fillout_year)
fillout_cat <- rep(c("I Moderate", "II Strong", "III Severe", "IV Extreme"), 24)
fillout <- cbind(fillout_year,fillout_cat)
fillout <- as.data.frame(fillout)
names(fillout)[1] <- "Year"
names(fillout)[2] <- "category"

temp_fill <- merge(dat_temp, fillout, by = c("Year","category"), all = TRUE)
temp_fill$n[is.na(temp_fill$n)] <- 0
do_fill <- merge(dat_do, fillout, by = c("Year","category"), all = TRUE)
do_fill$n[is.na(do_fill$n)] <- 0
ph_fill <- merge(dat_ph, fillout, by = c("Year","category"), all = TRUE)
ph_fill$n[is.na(ph_fill$n)] <- 0

hw_sum_cat <- saveCat_obsTemp %>% group_by(Year, category) %>% summarise(TotalDuration = sum(duration))
lowDO_sum_cat <- saveCat_obsDO %>% group_by(Year, category) %>% summarise(TotalDuration = sum(duration))
lowPH_sum_cat <- saveCat_obsPH %>% group_by(Year, category) %>% summarise(TotalDuration = sum(duration))
hw_sum <- saveCat_obsTemp %>% group_by(Year) %>% summarise(TotalDuration = sum(duration))
lowDO_sum <- saveCat_obsDO %>% group_by(Year) %>% summarise(TotalDuration = sum(duration))
lowPH_sum <- saveCat_obsPH %>% group_by(Year) %>% summarise(TotalDuration = sum(duration))

Fig6A <- ggplot(data = temp_fill) +
  geom_col(aes(x = as.numeric(Year), y = n,
               fill = fct_rev(as_factor(category))), color = "black",
           width = 1) +
  scale_fill_manual(values = c("#000000", "#777777","#C7C7C7","#FFFFFF")) +
  xlab("Year") +
  scale_x_continuous(breaks = seq(1995, 2020, by = 5)) +
  ylim(c(0,100)) +
  ylab("Number of Estuarine HW Events") +
  annotate("text", x = 2019.5, y = 100, label = "(a", size = 6) +
  guides(fill=guide_legend(title="Category")) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        plot.margin = margin(5,5,5,-2.3,"pt"),
        axis.title.y = element_text(vjust = -1),
        text = element_text(size = 16),
        axis.text.x = element_blank(),
        axis.title.x = element_blank(),
        axis.text.y = element_text(size = 16, color = "black"),
        legend.position = c(0.20,0.78),
        legend.title = element_text(face = "bold"),
        legend.background = element_blank())

Fig6B <- ggplot(data = do_fill) +
  geom_col(aes(x = as.numeric(Year), y = n,
               fill = fct_rev(as_factor(category))), color = "black",
           width = 1) +
  scale_fill_manual(values = c("#000000", "#777777","#C7C7C7","#FFFFFF")) +
  xlab("Year") +
  scale_x_continuous(breaks = seq(1995, 2020, by = 5)) +
  ylim(c(0,70)) +
  ylab("Number of Low DO Events") +
  annotate("text", x = 2019.5, y = 70, label = "(b", size = 6) +
  guides(fill=guide_legend(title="Category")) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16),
        axis.text.x = element_blank(),
        axis.title.x = element_blank(),
        axis.text.y = element_text(size = 16, color = "black"),
        legend.position = "none",
        legend.title = element_blank())

Fig6C <- ggplot(data = ph_fill) +
  geom_col(aes(x = as.numeric(Year), y = n,
               fill = fct_rev(as_factor(category))), color = "black",
           width = 1) +
  scale_fill_manual(values = c("#000000", "#777777","#C7C7C7","#FFFFFF")) +
  xlab("Year") +
  scale_x_continuous(breaks = seq(1995, 2020, by = 5)) +
  ylim(c(0,75)) +
  ylab("Number of Low pH Events") +
  annotate("text", x = 2019.5, y = 70, label = "(c", size = 6) +
  guides(fill=guide_legend(title="Category")) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16),
        axis.text.x = element_text(size = 16, color = "black", angle = 30, vjust = 0.95, hjust = 1),
        axis.text.y = element_text(size = 16, color = "black"),
        legend.position = "none",
        legend.title = element_blank())

hw_sum_lm <- lm(hw_sum$TotalDuration~hw_sum$Year)
summary(hw_sum_lm)

Fig6D <- ggplot(data = hw_sum, aes(x = Year, y = TotalDuration)) +
  geom_smooth(method = "lm", formula = y~x, color = "black", size = 0.5, se = TRUE) +
  geom_point(shape = 21, size = 2, color = "black", fill = "white", stroke = 1) +
  xlab("Year") +
  scale_x_continuous(breaks = seq(1995, 2020, by = 5)) +
  ylab("Total Estuarine HW Days") +
  annotate("text", x = 1999.99, y = 800, label = "y = 17.1x - 34051", size = 5) +
  annotate("text", x = 1999.75, y = 720,
           label = "paste(Adj.R ^ 2, \" = 0.35\")", parse = TRUE, size = 5) +
  annotate("text", x = 1999.75, y = 640, label = "p-value = 0.001", size = 5) +
  annotate("text", x = 2019.5, y = 800, label = "(d", size = 6) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16),
        axis.text.x = element_blank(),
        axis.title.x = element_blank(),
        axis.text.y = element_text(size = 16, color = "black"))

lowDO_sum_lm <- lm(lowDO_sum$TotalDuration~lowDO_sum$Year)
summary(lowDO_sum_lm)

Fig6E <- ggplot(data = lowDO_sum, aes(x = Year, y = TotalDuration)) +
  geom_smooth(method = "lm", formula = y~x, color = "black", size = 0.5, se = TRUE) +
  geom_point(shape = 21, size = 2, color = "black", fill = "white", stroke = 1) +
  xlab("Year") +
  scale_x_continuous(breaks = seq(1995, 2020, by = 5)) +
  ylab("Total Low DO Days") +
  annotate("text", x = 1999.99, y = 635, label = "y = -4.51x + 9372", size = 5) +
  annotate("text", x = 2009.5, y = 635,
           label = "paste(Adj.R ^ 2, \" = 0.04\")", parse = TRUE, size = 5) +
  annotate("text", x = 1999.15, y = 585, label = "p-value > 0.05", size = 5) +
  annotate("text", x = 2019.5, y = 635, label = "(e", size = 6) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16),
        axis.text.x = element_blank(),
        axis.title.x = element_blank(),
        axis.text.y = element_text(size = 16, color = "black"))

lowPH_sum_lm <- lm(lowPH_sum$TotalDuration~lowPH_sum$Year)
summary(lowPH_sum_lm)

Fig6F <- ggplot(data = lowPH_sum, aes(x = Year, y = TotalDuration)) +
  geom_smooth(method = "lm", formula = y~x, color = "black", size = 0.5, se = TRUE) +
  geom_point(shape = 21, size = 2, color = "black", fill = "white", stroke = 1) +
  xlab("Year") +
  scale_x_continuous(breaks = seq(1995, 2020, by = 5)) +
  ylab("Total Low pH Days") +
  annotate("text", x = 2014, y = 1200, label = "y = -26.47x + 53576", size = 5) +
  annotate("text", x = 2013.5, y = 1075,
           label = "paste(Adj.R ^ 2, \" = 0.45\")", parse = TRUE, size = 5) +
  annotate("text", x = 2013.5, y = 950, label = "p-value < 0.001", size = 5) +
  annotate("text", x = 1995.5, y = 1200, label = "f)", size = 6) +
  theme_bw() +
  theme(plot.margin = margin(5,5,5,-2.2,"pt"),
        axis.title.y = element_text(vjust = -1),
        panel.grid = element_blank(),
        text = element_text(size = 16),
        axis.text.x = element_text(size = 16, color = "black", angle = 30, vjust = 0.95, hjust = 1),
        axis.text.y = element_text(size = 16, color = "black"))

ggarrange(Fig6A,Fig6D,Fig6B,Fig6E,Fig6C,Fig6F, nrow = 3, ncol = 2)

### SI Table 1: Station specific trends in low DO and low pH duration

HW_AnnualSum_duration_station <- saveCat_obsTemp %>%
  group_by(Year, Station) %>%
  summarise_at(vars(duration), sum, na.rm = TRUE)

LowDO_AnnualSum_duration_station <- saveCat_obsDO %>%
  group_by(Year, Station) %>%
  summarise_at(vars(duration), sum, na.rm = TRUE)

LowPH_AnnualSum_duration_station <- saveCat_obsPH %>%
  group_by(Year, Station) %>%
  summarise_at(vars(duration), sum, na.rm = TRUE)

library(plyr)

HW_fitted_SumAnnualDuration_models <- dlply(HW_AnnualSum_duration_station, "Station", function(xx)
  lm(duration~Year, data = xx))

LowDO_fitted_SumAnnualDuration_models <- dlply(LowDO_AnnualSum_duration_station, "Station", function(yy)
  lm(duration~Year, data = yy))

LowPH_fitted_SumAnnualDuration_models <- dlply(LowPH_AnnualSum_duration_station, "Station", function(zz)
  lm(duration~Year, data = zz))

detach("package:plyr", unload = TRUE)

df_station_HW <- data.frame(matrix(ncol = 4, nrow = 0))
x <- c("HW_slope", "HW_slope_SE", "HW_slope_p.val" , "site")
colnames(df_station_HW) <- x

df_station_lowDO <- data.frame(matrix(ncol = 4, nrow = 0))
x <- c("lowDO_slope", "lowDO_slope_SE", "lowDO_slope_p.val" , "site")
colnames(df_station_lowDO) <- x

df_station_lowPH <- data.frame(matrix(ncol = 4, nrow = 0))
y <- c("lowPH_slope", "lowPH_slope_SE", "lowPH_slope_p.val" , "site")
colnames(df_station_lowPH) <- y

df_station_HW[1,4] <- "acesp"
df_station_HW[2,4] <- "apaeb"
df_station_HW[3,4] <- "apaes"
df_station_HW[4,4] <- "cbvtc"
df_station_HW[5,4] <- "delbl"
df_station_HW[6,4] <- "delsl"
df_station_HW[7,4] <- "elkap"
df_station_HW[8,4] <- "elksm"
df_station_HW[9,4] <- "grbgb"
df_station_HW[10,4] <- "hudsk"
df_station_HW[11,4] <- "hudts"
df_station_HW[12,4] <- "job09"
df_station_HW[13,4] <- "narpc"
df_station_HW[14,4] <- "nocec"
df_station_HW[15,4] <- "nocrc"
df_station_HW[16,4] <- "pdbby"
df_station_HW[17,4] <- "welin"

df_station_lowDO[1,4] <- "acesp"
df_station_lowDO[2,4] <- "apaeb"
df_station_lowDO[3,4] <- "apaes"
df_station_lowDO[4,4] <- "cbvtc"
df_station_lowDO[5,4] <- "delbl"
df_station_lowDO[6,4] <- "delsl"
df_station_lowDO[7,4] <- "elkap"
df_station_lowDO[8,4] <- "elksm"
df_station_lowDO[9,4] <- "grbgb"
df_station_lowDO[10,4] <- "hudsk"
df_station_lowDO[11,4] <- "hudts"
df_station_lowDO[12,4] <- "job09"
df_station_lowDO[13,4] <- "narpc"
df_station_lowDO[14,4] <- "nocec"
df_station_lowDO[15,4] <- "nocrc"
df_station_lowDO[16,4] <- "pdbby"
df_station_lowDO[17,4] <- "welin"

df_station_lowPH[1,4] <- "acesp"
df_station_lowPH[2,4] <- "apaeb"
df_station_lowPH[3,4] <- "apaes"
df_station_lowPH[4,4] <- "cbvtc"
df_station_lowPH[5,4] <- "delbl"
df_station_lowPH[6,4] <- "delsl"
df_station_lowPH[7,4] <- "elkap"
df_station_lowPH[8,4] <- "elksm"
df_station_lowPH[9,4] <- "grbgb"
df_station_lowPH[10,4] <- "hudsk"
df_station_lowPH[11,4] <- "hudts"
df_station_lowPH[12,4] <- "job09"
df_station_lowPH[13,4] <- "narpc"
df_station_lowPH[14,4] <- "nocec"
df_station_lowPH[15,4] <- "nocrc"
df_station_lowPH[16,4] <- "pdbby"
df_station_lowPH[17,4] <- "welin"

df_station_HW[1,1] <- summary(HW_fitted_SumAnnualDuration_models$acesp)$coefficients[2,1]
df_station_HW[2,1] <- summary(HW_fitted_SumAnnualDuration_models$apaeb)$coefficients[2,1]
df_station_HW[3,1] <- summary(HW_fitted_SumAnnualDuration_models$apaes)$coefficients[2,1]
df_station_HW[4,1] <- summary(HW_fitted_SumAnnualDuration_models$cbvtc)$coefficients[2,1]
df_station_HW[5,1] <- summary(HW_fitted_SumAnnualDuration_models$delbl)$coefficients[2,1]
df_station_HW[6,1] <- summary(HW_fitted_SumAnnualDuration_models$delsl)$coefficients[2,1]
df_station_HW[7,1] <- summary(HW_fitted_SumAnnualDuration_models$elkap)$coefficients[2,1]
df_station_HW[8,1] <- summary(HW_fitted_SumAnnualDuration_models$elksm)$coefficients[2,1]
df_station_HW[9,1] <- summary(HW_fitted_SumAnnualDuration_models$grbgb)$coefficients[2,1]
df_station_HW[10,1] <- summary(HW_fitted_SumAnnualDuration_models$hudsk)$coefficients[2,1]
df_station_HW[11,1] <- summary(HW_fitted_SumAnnualDuration_models$hudts)$coefficients[2,1]
df_station_HW[12,1] <- summary(HW_fitted_SumAnnualDuration_models$job09)$coefficients[2,1]
df_station_HW[13,1] <- summary(HW_fitted_SumAnnualDuration_models$narpc)$coefficients[2,1]
df_station_HW[14,1] <- summary(HW_fitted_SumAnnualDuration_models$nocec)$coefficients[2,1]
df_station_HW[15,1] <- summary(HW_fitted_SumAnnualDuration_models$nocrc)$coefficients[2,1]
df_station_HW[16,1] <- summary(HW_fitted_SumAnnualDuration_models$pdbby)$coefficients[2,1]
df_station_HW[17,1] <- summary(HW_fitted_SumAnnualDuration_models$welin)$coefficients[2,1]

df_station_lowDO[1,1] <- summary(LowDO_fitted_SumAnnualDuration_models$acesp)$coefficients[2,1]
df_station_lowDO[2,1] <- summary(LowDO_fitted_SumAnnualDuration_models$apaeb)$coefficients[2,1]
df_station_lowDO[3,1] <- summary(LowDO_fitted_SumAnnualDuration_models$apaes)$coefficients[2,1]
df_station_lowDO[4,1] <- summary(LowDO_fitted_SumAnnualDuration_models$cbvtc)$coefficients[2,1]
df_station_lowDO[5,1] <- summary(LowDO_fitted_SumAnnualDuration_models$delbl)$coefficients[2,1]
df_station_lowDO[6,1] <- summary(LowDO_fitted_SumAnnualDuration_models$delsl)$coefficients[2,1]
df_station_lowDO[7,1] <- summary(LowDO_fitted_SumAnnualDuration_models$elkap)$coefficients[2,1]
df_station_lowDO[8,1] <- summary(LowDO_fitted_SumAnnualDuration_models$elksm)$coefficients[2,1]
df_station_lowDO[9,1] <- summary(LowDO_fitted_SumAnnualDuration_models$grbgb)$coefficients[2,1]
df_station_lowDO[10,1] <- summary(LowDO_fitted_SumAnnualDuration_models$hudsk)$coefficients[2,1]
df_station_lowDO[11,1] <- summary(LowDO_fitted_SumAnnualDuration_models$hudts)$coefficients[2,1]
df_station_lowDO[12,1] <- summary(LowDO_fitted_SumAnnualDuration_models$job09)$coefficients[2,1]
df_station_lowDO[13,1] <- summary(LowDO_fitted_SumAnnualDuration_models$narpc)$coefficients[2,1]
df_station_lowDO[14,1] <- summary(LowDO_fitted_SumAnnualDuration_models$nocec)$coefficients[2,1]
df_station_lowDO[15,1] <- summary(LowDO_fitted_SumAnnualDuration_models$nocrc)$coefficients[2,1]
df_station_lowDO[16,1] <- summary(LowDO_fitted_SumAnnualDuration_models$pdbby)$coefficients[2,1]
df_station_lowDO[17,1] <- summary(LowDO_fitted_SumAnnualDuration_models$welin)$coefficients[2,1]

df_station_lowPH[1,1] <- summary(LowPH_fitted_SumAnnualDuration_models$acesp)$coefficients[2,1]
df_station_lowPH[2,1] <- summary(LowPH_fitted_SumAnnualDuration_models$apaeb)$coefficients[2,1]
df_station_lowPH[3,1] <- summary(LowPH_fitted_SumAnnualDuration_models$apaes)$coefficients[2,1]
df_station_lowPH[4,1] <- summary(LowPH_fitted_SumAnnualDuration_models$cbvtc)$coefficients[2,1]
df_station_lowPH[5,1] <- summary(LowPH_fitted_SumAnnualDuration_models$delbl)$coefficients[2,1]
df_station_lowPH[6,1] <- summary(LowPH_fitted_SumAnnualDuration_models$delsl)$coefficients[2,1]
df_station_lowPH[7,1] <- summary(LowPH_fitted_SumAnnualDuration_models$elkap)$coefficients[2,1]
df_station_lowPH[8,1] <- summary(LowPH_fitted_SumAnnualDuration_models$elksm)$coefficients[2,1]
df_station_lowPH[9,1] <- summary(LowPH_fitted_SumAnnualDuration_models$grbgb)$coefficients[2,1]
df_station_lowPH[10,1] <- summary(LowPH_fitted_SumAnnualDuration_models$hudsk)$coefficients[2,1]
df_station_lowPH[11,1] <- summary(LowPH_fitted_SumAnnualDuration_models$hudts)$coefficients[2,1]
df_station_lowPH[12,1] <- summary(LowPH_fitted_SumAnnualDuration_models$job09)$coefficients[2,1]
df_station_lowPH[13,1] <- summary(LowPH_fitted_SumAnnualDuration_models$narpc)$coefficients[2,1]
df_station_lowPH[14,1] <- summary(LowPH_fitted_SumAnnualDuration_models$nocec)$coefficients[2,1]
df_station_lowPH[15,1] <- summary(LowPH_fitted_SumAnnualDuration_models$nocrc)$coefficients[2,1]
df_station_lowPH[16,1] <- summary(LowPH_fitted_SumAnnualDuration_models$pdbby)$coefficients[2,1]
df_station_lowPH[17,1] <- summary(LowPH_fitted_SumAnnualDuration_models$welin)$coefficients[2,1]

df_station_HW[1,2] <- summary(HW_fitted_SumAnnualDuration_models$acesp)$coefficients[2,2]
df_station_HW[2,2] <- summary(HW_fitted_SumAnnualDuration_models$apaeb)$coefficients[2,2]
df_station_HW[3,2] <- summary(HW_fitted_SumAnnualDuration_models$apaes)$coefficients[2,2]
df_station_HW[4,2] <- summary(HW_fitted_SumAnnualDuration_models$cbvtc)$coefficients[2,2]
df_station_HW[5,2] <- summary(HW_fitted_SumAnnualDuration_models$delbl)$coefficients[2,2]
df_station_HW[6,2] <- summary(HW_fitted_SumAnnualDuration_models$delsl)$coefficients[2,2]
df_station_HW[7,2] <- summary(HW_fitted_SumAnnualDuration_models$elkap)$coefficients[2,2]
df_station_HW[8,2] <- summary(HW_fitted_SumAnnualDuration_models$elksm)$coefficients[2,2]
df_station_HW[9,2] <- summary(HW_fitted_SumAnnualDuration_models$grbgb)$coefficients[2,2]
df_station_HW[10,2] <- summary(HW_fitted_SumAnnualDuration_models$hudsk)$coefficients[2,2]
df_station_HW[11,2] <- summary(HW_fitted_SumAnnualDuration_models$hudts)$coefficients[2,2]
df_station_HW[12,2] <- summary(HW_fitted_SumAnnualDuration_models$job09)$coefficients[2,2]
df_station_HW[13,2] <- summary(HW_fitted_SumAnnualDuration_models$narpc)$coefficients[2,2]
df_station_HW[14,2] <- summary(HW_fitted_SumAnnualDuration_models$nocec)$coefficients[2,2]
df_station_HW[15,2] <- summary(HW_fitted_SumAnnualDuration_models$nocrc)$coefficients[2,2]
df_station_HW[16,2] <- summary(HW_fitted_SumAnnualDuration_models$pdbby)$coefficients[2,2]
df_station_HW[17,2] <- summary(HW_fitted_SumAnnualDuration_models$welin)$coefficients[2,2]

df_station_lowDO[1,2] <- summary(LowDO_fitted_SumAnnualDuration_models$acesp)$coefficients[2,2]
df_station_lowDO[2,2] <- summary(LowDO_fitted_SumAnnualDuration_models$apaeb)$coefficients[2,2]
df_station_lowDO[3,2] <- summary(LowDO_fitted_SumAnnualDuration_models$apaes)$coefficients[2,2]
df_station_lowDO[4,2] <- summary(LowDO_fitted_SumAnnualDuration_models$cbvtc)$coefficients[2,2]
df_station_lowDO[5,2] <- summary(LowDO_fitted_SumAnnualDuration_models$delbl)$coefficients[2,2]
df_station_lowDO[6,2] <- summary(LowDO_fitted_SumAnnualDuration_models$delsl)$coefficients[2,2]
df_station_lowDO[7,2] <- summary(LowDO_fitted_SumAnnualDuration_models$elkap)$coefficients[2,2]
df_station_lowDO[8,2] <- summary(LowDO_fitted_SumAnnualDuration_models$elksm)$coefficients[2,2]
df_station_lowDO[9,2] <- summary(LowDO_fitted_SumAnnualDuration_models$grbgb)$coefficients[2,2]
df_station_lowDO[10,2] <- summary(LowDO_fitted_SumAnnualDuration_models$hudsk)$coefficients[2,2]
df_station_lowDO[11,2] <- summary(LowDO_fitted_SumAnnualDuration_models$hudts)$coefficients[2,2]
df_station_lowDO[12,2] <- summary(LowDO_fitted_SumAnnualDuration_models$job09)$coefficients[2,2]
df_station_lowDO[13,2] <- summary(LowDO_fitted_SumAnnualDuration_models$narpc)$coefficients[2,2]
df_station_lowDO[14,2] <- summary(LowDO_fitted_SumAnnualDuration_models$nocec)$coefficients[2,2]
df_station_lowDO[15,2] <- summary(LowDO_fitted_SumAnnualDuration_models$nocrc)$coefficients[2,2]
df_station_lowDO[16,2] <- summary(LowDO_fitted_SumAnnualDuration_models$pdbby)$coefficients[2,2]
df_station_lowDO[17,2] <- summary(LowDO_fitted_SumAnnualDuration_models$welin)$coefficients[2,2]

df_station_lowPH[1,2] <- summary(LowPH_fitted_SumAnnualDuration_models$acesp)$coefficients[2,2]
df_station_lowPH[2,2] <- summary(LowPH_fitted_SumAnnualDuration_models$apaeb)$coefficients[2,2]
df_station_lowPH[3,2] <- summary(LowPH_fitted_SumAnnualDuration_models$apaes)$coefficients[2,2]
df_station_lowPH[4,2] <- summary(LowPH_fitted_SumAnnualDuration_models$cbvtc)$coefficients[2,2]
df_station_lowPH[5,2] <- summary(LowPH_fitted_SumAnnualDuration_models$delbl)$coefficients[2,2]
df_station_lowPH[6,2] <- summary(LowPH_fitted_SumAnnualDuration_models$delsl)$coefficients[2,2]
df_station_lowPH[7,2] <- summary(LowPH_fitted_SumAnnualDuration_models$elkap)$coefficients[2,2]
df_station_lowPH[8,2] <- summary(LowPH_fitted_SumAnnualDuration_models$elksm)$coefficients[2,2]
df_station_lowPH[9,2] <- summary(LowPH_fitted_SumAnnualDuration_models$grbgb)$coefficients[2,2]
df_station_lowPH[10,2] <- summary(LowPH_fitted_SumAnnualDuration_models$hudsk)$coefficients[2,2]
df_station_lowPH[11,2] <- summary(LowPH_fitted_SumAnnualDuration_models$hudts)$coefficients[2,2]
df_station_lowPH[12,2] <- summary(LowPH_fitted_SumAnnualDuration_models$job09)$coefficients[2,2]
df_station_lowPH[13,2] <- summary(LowPH_fitted_SumAnnualDuration_models$narpc)$coefficients[2,2]
df_station_lowPH[14,2] <- summary(LowPH_fitted_SumAnnualDuration_models$nocec)$coefficients[2,2]
df_station_lowPH[15,2] <- summary(LowPH_fitted_SumAnnualDuration_models$nocrc)$coefficients[2,2]
df_station_lowPH[16,2] <- summary(LowPH_fitted_SumAnnualDuration_models$pdbby)$coefficients[2,2]
df_station_lowPH[17,2] <- summary(LowPH_fitted_SumAnnualDuration_models$welin)$coefficients[2,2]

df_station_HW[1,3] <- summary(HW_fitted_SumAnnualDuration_models$acesp)$coefficients[2,4]
df_station_HW[2,3] <- summary(HW_fitted_SumAnnualDuration_models$apaeb)$coefficients[2,4]
df_station_HW[3,3] <- summary(HW_fitted_SumAnnualDuration_models$apaes)$coefficients[2,4]
df_station_HW[4,3] <- summary(HW_fitted_SumAnnualDuration_models$cbvtc)$coefficients[2,4]
df_station_HW[5,3] <- summary(HW_fitted_SumAnnualDuration_models$delbl)$coefficients[2,4]
df_station_HW[6,3] <- summary(HW_fitted_SumAnnualDuration_models$delsl)$coefficients[2,4]
df_station_HW[7,3] <- summary(HW_fitted_SumAnnualDuration_models$elkap)$coefficients[2,4]
df_station_HW[8,3] <- summary(HW_fitted_SumAnnualDuration_models$elksm)$coefficients[2,4]
df_station_HW[9,3] <- summary(HW_fitted_SumAnnualDuration_models$grbgb)$coefficients[2,4]
df_station_HW[10,3] <- summary(HW_fitted_SumAnnualDuration_models$hudsk)$coefficients[2,4]
df_station_HW[11,3] <- summary(HW_fitted_SumAnnualDuration_models$hudts)$coefficients[2,4]
df_station_HW[12,3] <- summary(HW_fitted_SumAnnualDuration_models$job09)$coefficients[2,4]
df_station_HW[13,3] <- summary(HW_fitted_SumAnnualDuration_models$narpc)$coefficients[2,4]
df_station_HW[14,3] <- summary(HW_fitted_SumAnnualDuration_models$nocec)$coefficients[2,4]
df_station_HW[15,3] <- summary(HW_fitted_SumAnnualDuration_models$nocrc)$coefficients[2,4]
df_station_HW[16,3] <- summary(HW_fitted_SumAnnualDuration_models$pdbby)$coefficients[2,4]
df_station_HW[17,3] <- summary(HW_fitted_SumAnnualDuration_models$welin)$coefficients[2,4]

df_station_lowDO[1,3] <- summary(LowDO_fitted_SumAnnualDuration_models$acesp)$coefficients[2,4]
df_station_lowDO[2,3] <- summary(LowDO_fitted_SumAnnualDuration_models$apaeb)$coefficients[2,4]
df_station_lowDO[3,3] <- summary(LowDO_fitted_SumAnnualDuration_models$apaes)$coefficients[2,4]
df_station_lowDO[4,3] <- summary(LowDO_fitted_SumAnnualDuration_models$cbvtc)$coefficients[2,4]
df_station_lowDO[5,3] <- summary(LowDO_fitted_SumAnnualDuration_models$delbl)$coefficients[2,4]
df_station_lowDO[6,3] <- summary(LowDO_fitted_SumAnnualDuration_models$delsl)$coefficients[2,4]
df_station_lowDO[7,3] <- summary(LowDO_fitted_SumAnnualDuration_models$elkap)$coefficients[2,4]
df_station_lowDO[8,3] <- summary(LowDO_fitted_SumAnnualDuration_models$elksm)$coefficients[2,4]
df_station_lowDO[9,3] <- summary(LowDO_fitted_SumAnnualDuration_models$grbgb)$coefficients[2,4]
df_station_lowDO[10,3] <- summary(LowDO_fitted_SumAnnualDuration_models$hudsk)$coefficients[2,4]
df_station_lowDO[11,3] <- summary(LowDO_fitted_SumAnnualDuration_models$hudts)$coefficients[2,4]
df_station_lowDO[12,3] <- summary(LowDO_fitted_SumAnnualDuration_models$job09)$coefficients[2,4]
df_station_lowDO[13,3] <- summary(LowDO_fitted_SumAnnualDuration_models$narpc)$coefficients[2,4]
df_station_lowDO[14,3] <- summary(LowDO_fitted_SumAnnualDuration_models$nocec)$coefficients[2,4]
df_station_lowDO[15,3] <- summary(LowDO_fitted_SumAnnualDuration_models$nocrc)$coefficients[2,4]
df_station_lowDO[16,3] <- summary(LowDO_fitted_SumAnnualDuration_models$pdbby)$coefficients[2,4]
df_station_lowDO[17,3] <- summary(LowDO_fitted_SumAnnualDuration_models$welin)$coefficients[2,4]

df_station_lowPH[1,3] <- summary(LowPH_fitted_SumAnnualDuration_models$acesp)$coefficients[2,4]
df_station_lowPH[2,3] <- summary(LowPH_fitted_SumAnnualDuration_models$apaeb)$coefficients[2,4]
df_station_lowPH[3,3] <- summary(LowPH_fitted_SumAnnualDuration_models$apaes)$coefficients[2,4]
df_station_lowPH[4,3] <- summary(LowPH_fitted_SumAnnualDuration_models$cbvtc)$coefficients[2,4]
df_station_lowPH[5,3] <- summary(LowPH_fitted_SumAnnualDuration_models$delbl)$coefficients[2,4]
df_station_lowPH[6,3] <- summary(LowPH_fitted_SumAnnualDuration_models$delsl)$coefficients[2,4]
df_station_lowPH[7,3] <- summary(LowPH_fitted_SumAnnualDuration_models$elkap)$coefficients[2,4]
df_station_lowPH[8,3] <- summary(LowPH_fitted_SumAnnualDuration_models$elksm)$coefficients[2,4]
df_station_lowPH[9,3] <- summary(LowPH_fitted_SumAnnualDuration_models$grbgb)$coefficients[2,4]
df_station_lowPH[10,3] <- summary(LowPH_fitted_SumAnnualDuration_models$hudsk)$coefficients[2,4]
df_station_lowPH[11,3] <- summary(LowPH_fitted_SumAnnualDuration_models$hudts)$coefficients[2,4]
df_station_lowPH[12,3] <- summary(LowPH_fitted_SumAnnualDuration_models$job09)$coefficients[2,4]
df_station_lowPH[13,3] <- summary(LowPH_fitted_SumAnnualDuration_models$narpc)$coefficients[2,4]
df_station_lowPH[14,3] <- summary(LowPH_fitted_SumAnnualDuration_models$nocec)$coefficients[2,4]
df_station_lowPH[15,3] <- summary(LowPH_fitted_SumAnnualDuration_models$nocrc)$coefficients[2,4]
df_station_lowPH[16,3] <- summary(LowPH_fitted_SumAnnualDuration_models$pdbby)$coefficients[2,4]
df_station_lowPH[17,3] <- summary(LowPH_fitted_SumAnnualDuration_models$welin)$coefficients[2,4]

df_station_HW$HW_slope <- round(df_station_HW$HW_slope,2)
df_station_HW$HW_slope_SE <- round(df_station_HW$HW_slope_SE,2)
df_station_HW$HW_slope_p.val <- round(df_station_HW$HW_slope_p.val, 3)
df_station_HW <- df_station_HW[,c(4,1:3)]

df_station_lowDO$lowDO_slope <- round(df_station_lowDO$lowDO_slope,2)
df_station_lowDO$lowDO_slope_SE <- round(df_station_lowDO$lowDO_slope_SE,2)
df_station_lowDO$lowDO_slope_p.val <- round(df_station_lowDO$lowDO_slope_p.val, 3)
df_station_lowDO <- df_station_lowDO[,c(4,1:3)]

df_station_lowPH$lowPH_slope <- round(df_station_lowPH$lowPH_slope,2)
df_station_lowPH$lowPH_slope_SE <- round(df_station_lowPH$lowPH_slope_SE,2)
df_station_lowPH$lowPH_slope_p.val <- round(df_station_lowPH$lowPH_slope_p.val, 3)
df_station_lowPH <- df_station_lowPH[,c(4,1:3)]

SI_Table1 <- left_join(df_station_HW, df_station_lowDO, by = "site")
SI_Table1 <- left_join(SI_Table1, df_station_lowPH, by = "site")

SI_Table1$Order <- c(11,13,14,8,6,7,16,17,2,3,4,12,5,9,10,15,1)
SI_Table1 <- SI_Table1[,c(11,1:10)]
View(SI_Table1)
# write.csv(SI_Table1, 'SI_Table1.csv')

### SI Figure 1: width = 1500 height = 650

#SI_Fig1A: Atmospheric temperature trends

all_ATM_dailyAVG$Year <- year(all_ATM_dailyAVG$date)
names(all_ATM_dailyAVG)[4] <- "Reserve"

annual_Atemp <- all_ATM_dailyAVG %>%
  group_by(Year, Reserve) %>%
  summarise(MeanTemp = mean(ATemp, na.rm = TRUE),
            SD_Temp = sd(ATemp, na.rm = TRUE))

library(plyr)

fitted_MeanAnnualTemp_ReserveModels <- dlply(annual_Atemp, "Reserve", function(xx)
  lm(MeanTemp~Year, data = xx))

fitted_SDannualTemp_ReserveModels <- dlply(annual_Atemp, "Reserve", function(yy)
  lm(SD_Temp~Year, data = yy))

df_Atemp_reserve <- data.frame(matrix(ncol = 5, nrow = 0))
x <- c("slope", "slope_p.val" ,"STD.Dev_slope", "STD.Dev_p.val", "Reserve")
colnames(df_Atemp_reserve) <- x

df_Atemp_reserve[1,5] <- "ace"
df_Atemp_reserve[2,5] <- "apa"
df_Atemp_reserve[3,5] <- "cbv"
df_Atemp_reserve[4,5] <- "del"
df_Atemp_reserve[5,5] <- "elk"
df_Atemp_reserve[6,5] <- "grb"
df_Atemp_reserve[7,5] <- "hud"
df_Atemp_reserve[8,5] <- "job"
df_Atemp_reserve[9,5] <- "nar"
df_Atemp_reserve[10,5] <- "noc"
df_Atemp_reserve[11,5] <- "pdb"
df_Atemp_reserve[12,5] <- "wel"

df_Atemp_reserve[1,1] <- summary(fitted_MeanAnnualTemp_ReserveModels$ace)$coefficients[2,1]
df_Atemp_reserve[2,1] <- summary(fitted_MeanAnnualTemp_ReserveModels$apa)$coefficients[2,1]
df_Atemp_reserve[3,1] <- summary(fitted_MeanAnnualTemp_ReserveModels$cbv)$coefficients[2,1]
df_Atemp_reserve[4,1] <- summary(fitted_MeanAnnualTemp_ReserveModels$del)$coefficients[2,1]
df_Atemp_reserve[5,1] <- summary(fitted_MeanAnnualTemp_ReserveModels$elk)$coefficients[2,1]
df_Atemp_reserve[6,1] <- summary(fitted_MeanAnnualTemp_ReserveModels$grb)$coefficients[2,1]
df_Atemp_reserve[7,1] <- summary(fitted_MeanAnnualTemp_ReserveModels$hud)$coefficients[2,1]
df_Atemp_reserve[8,1] <- summary(fitted_MeanAnnualTemp_ReserveModels$job)$coefficients[2,1]
df_Atemp_reserve[9,1] <- summary(fitted_MeanAnnualTemp_ReserveModels$nar)$coefficients[2,1]
df_Atemp_reserve[10,1] <- summary(fitted_MeanAnnualTemp_ReserveModels$noc)$coefficients[2,1]
df_Atemp_reserve[11,1] <- summary(fitted_MeanAnnualTemp_ReserveModels$pdb)$coefficients[2,1]
df_Atemp_reserve[12,1] <- summary(fitted_MeanAnnualTemp_ReserveModels$wel)$coefficients[2,1]

df_Atemp_reserve[1,2] <- summary(fitted_MeanAnnualTemp_ReserveModels$ace)$coefficients[2,4]
df_Atemp_reserve[2,2] <- summary(fitted_MeanAnnualTemp_ReserveModels$apa)$coefficients[2,4]
df_Atemp_reserve[3,2] <- summary(fitted_MeanAnnualTemp_ReserveModels$cbv)$coefficients[2,4]
df_Atemp_reserve[4,2] <- summary(fitted_MeanAnnualTemp_ReserveModels$del)$coefficients[2,4]
df_Atemp_reserve[5,2] <- summary(fitted_MeanAnnualTemp_ReserveModels$elk)$coefficients[2,4]
df_Atemp_reserve[6,2] <- summary(fitted_MeanAnnualTemp_ReserveModels$grb)$coefficients[2,4]
df_Atemp_reserve[7,2] <- summary(fitted_MeanAnnualTemp_ReserveModels$hud)$coefficients[2,4]
df_Atemp_reserve[8,2] <- summary(fitted_MeanAnnualTemp_ReserveModels$job)$coefficients[2,4]
df_Atemp_reserve[9,2] <- summary(fitted_MeanAnnualTemp_ReserveModels$nar)$coefficients[2,4]
df_Atemp_reserve[10,2] <- summary(fitted_MeanAnnualTemp_ReserveModels$noc)$coefficients[2,4]
df_Atemp_reserve[11,2] <- summary(fitted_MeanAnnualTemp_ReserveModels$pdb)$coefficients[2,4]
df_Atemp_reserve[12,2] <- summary(fitted_MeanAnnualTemp_ReserveModels$wel)$coefficients[2,4]

df_Atemp_reserve[1,3] <- summary(fitted_SDannualTemp_ReserveModels$ace)$coefficients[2,1]
df_Atemp_reserve[2,3] <- summary(fitted_SDannualTemp_ReserveModels$apa)$coefficients[2,1]
df_Atemp_reserve[3,3] <- summary(fitted_SDannualTemp_ReserveModels$cbv)$coefficients[2,1]
df_Atemp_reserve[4,3] <- summary(fitted_SDannualTemp_ReserveModels$del)$coefficients[2,1]
df_Atemp_reserve[5,3] <- summary(fitted_SDannualTemp_ReserveModels$elk)$coefficients[2,1]
df_Atemp_reserve[6,3] <- summary(fitted_SDannualTemp_ReserveModels$grb)$coefficients[2,1]
df_Atemp_reserve[7,3] <- summary(fitted_SDannualTemp_ReserveModels$hud)$coefficients[2,1]
df_Atemp_reserve[8,3] <- summary(fitted_SDannualTemp_ReserveModels$job)$coefficients[2,1]
df_Atemp_reserve[9,3] <- summary(fitted_SDannualTemp_ReserveModels$nar)$coefficients[2,1]
df_Atemp_reserve[10,3] <- summary(fitted_SDannualTemp_ReserveModels$noc)$coefficients[2,1]
df_Atemp_reserve[11,3] <- summary(fitted_SDannualTemp_ReserveModels$pdb)$coefficients[2,1]
df_Atemp_reserve[12,3] <- summary(fitted_SDannualTemp_ReserveModels$wel)$coefficients[2,1]

df_Atemp_reserve[1,4] <- summary(fitted_SDannualTemp_ReserveModels$ace)$coefficients[2,4]
df_Atemp_reserve[2,4] <- summary(fitted_SDannualTemp_ReserveModels$apa)$coefficients[2,4]
df_Atemp_reserve[3,4] <- summary(fitted_SDannualTemp_ReserveModels$cbv)$coefficients[2,4]
df_Atemp_reserve[4,4] <- summary(fitted_SDannualTemp_ReserveModels$del)$coefficients[2,4]
df_Atemp_reserve[5,4] <- summary(fitted_SDannualTemp_ReserveModels$elk)$coefficients[2,4]
df_Atemp_reserve[6,4] <- summary(fitted_SDannualTemp_ReserveModels$grb)$coefficients[2,4]
df_Atemp_reserve[7,4] <- summary(fitted_SDannualTemp_ReserveModels$hud)$coefficients[2,4]
df_Atemp_reserve[8,4] <- summary(fitted_SDannualTemp_ReserveModels$job)$coefficients[2,4]
df_Atemp_reserve[9,4] <- summary(fitted_SDannualTemp_ReserveModels$nar)$coefficients[2,4]
df_Atemp_reserve[10,4] <- summary(fitted_SDannualTemp_ReserveModels$noc)$coefficients[2,4]
df_Atemp_reserve[11,4] <- summary(fitted_SDannualTemp_ReserveModels$pdb)$coefficients[2,4]
df_Atemp_reserve[12,4] <- summary(fitted_SDannualTemp_ReserveModels$wel)$coefficients[2,4]

detach("package:plyr")

mean_Atemp_table <- df_Atemp_reserve %>%
  group_by(Reserve) %>%
  summarise(MeanSlope = mean(slope),
            upper = max(slope),
            lower = min(slope))
mean_Atemp_table$MeanSlope <- round(mean_Atemp_table$MeanSlope,2)
mean_Atemp_table$order <- c(8,10,6,5,12,2,3,9,4,7,11,1)
mean_Atemp_table$Region <- c("Southeast","GoM","Mid. Atl.","Mid. Atl.","West","Northeast","Northeast","Southeast","Northeast","Southeast","West","Northeast")
mean_Atemp_table$Type <- "Mean"
mean_Atemp_table <- mean_Atemp_table[,c(5,7,6,1:4)]

mean_SD_table <- df_Atemp_reserve %>%
  group_by(Reserve) %>%
  summarise(MeanSlope = mean(STD.Dev_slope),
            upper = max(STD.Dev_slope),
            lower = min(STD.Dev_slope))
mean_SD_table$MeanSlope <- round(mean_SD_table$MeanSlope,2)
mean_SD_table$order <- c(8,10,6,5,12,2,3,9,4,7,11,1)
mean_SD_table$Region <- c("Southeast","GoM","Mid. Atl.","Mid. Atl.","West","Northeast","Northeast","Southeast","Northeast","Southeast","West","Northeast")
mean_SD_table$Type <- "STD. Deviation"
mean_SD_table <- mean_SD_table[,c(5,7,6,1:4)]

SI_Fig1A <- rbind(mean_Atemp_table,mean_SD_table)
SI_Fig1A$upper <- round(SI_Fig1A$upper,2)
SI_Fig1A$lower <- round(SI_Fig1A$lower,2)

SI_Fig1A %>%
  group_by(Type) %>%
  summarise(Max = max(MeanSlope),
            Min = min(MeanSlope))

#SI_Fig1B: Estuarine water temperature trends

all_daily_data$Year <- year(all_daily_data$date)
all_daily_data$Reserve <- substr(all_daily_data$Station,0,3)

annual_Wtemp <- all_daily_data %>%
  group_by(Year, Station) %>%
  summarise(MeanTemp = mean(obsTemp, na.rm = TRUE),
            SD_Temp = sd(obsTemp, na.rm = TRUE))

library(plyr)

fitted_MeanAnnualTemp_StationModels <- dlply(annual_Wtemp, "Station", function(xx)
  lm(MeanTemp~Year, data = xx))

fitted_SDannualTemp_StationModels <- dlply(annual_Wtemp, "Station", function(yy)
  lm(SD_Temp~Year, data = yy))

df_Wtemp_station <- data.frame(matrix(ncol = 5, nrow = 0))
x <- c("slope", "slope_p.val" ,"STD.Dev_slope", "STD.Dev_p.val", "Station")
colnames(df_Wtemp_station) <- x

df_Wtemp_station[1,5] <- "acesp"
df_Wtemp_station[2,5] <- "apaeb"
df_Wtemp_station[3,5] <- "apaes"
df_Wtemp_station[4,5] <- "cbvtc"
df_Wtemp_station[5,5] <- "delbl"
df_Wtemp_station[6,5] <- "delsl"
df_Wtemp_station[7,5] <- "elkap"
df_Wtemp_station[8,5] <- "elksm"
df_Wtemp_station[9,5] <- "grbgb"
df_Wtemp_station[10,5] <- "hudsk"
df_Wtemp_station[11,5] <- "hudts"
df_Wtemp_station[12,5] <- "job09"
df_Wtemp_station[13,5] <- "narpc"
df_Wtemp_station[14,5] <- "nocec"
df_Wtemp_station[15,5] <- "nocrc"
df_Wtemp_station[16,5] <- "pdbby"
df_Wtemp_station[17,5] <- "welin"

df_Wtemp_station[1,1] <- summary(fitted_MeanAnnualTemp_StationModels$acesp)$coefficients[2,1]
df_Wtemp_station[2,1] <- summary(fitted_MeanAnnualTemp_StationModels$apaeb)$coefficients[2,1]
df_Wtemp_station[3,1] <- summary(fitted_MeanAnnualTemp_StationModels$apaes)$coefficients[2,1]
df_Wtemp_station[4,1] <- summary(fitted_MeanAnnualTemp_StationModels$cbvtc)$coefficients[2,1]
df_Wtemp_station[5,1] <- summary(fitted_MeanAnnualTemp_StationModels$delbl)$coefficients[2,1]
df_Wtemp_station[6,1] <- summary(fitted_MeanAnnualTemp_StationModels$delsl)$coefficients[2,1]
df_Wtemp_station[7,1] <- summary(fitted_MeanAnnualTemp_StationModels$elkap)$coefficients[2,1]
df_Wtemp_station[8,1] <- summary(fitted_MeanAnnualTemp_StationModels$elksm)$coefficients[2,1]
df_Wtemp_station[9,1] <- summary(fitted_MeanAnnualTemp_StationModels$grbgb)$coefficients[2,1]
df_Wtemp_station[10,1] <- summary(fitted_MeanAnnualTemp_StationModels$hudsk)$coefficients[2,1]
df_Wtemp_station[11,1] <- summary(fitted_MeanAnnualTemp_StationModels$hudts)$coefficients[2,1]
df_Wtemp_station[12,1] <- summary(fitted_MeanAnnualTemp_StationModels$job09)$coefficients[2,1]
df_Wtemp_station[13,1] <- summary(fitted_MeanAnnualTemp_StationModels$narpc)$coefficients[2,1]
df_Wtemp_station[14,1] <- summary(fitted_MeanAnnualTemp_StationModels$nocec)$coefficients[2,1]
df_Wtemp_station[15,1] <- summary(fitted_MeanAnnualTemp_StationModels$nocrc)$coefficients[2,1]
df_Wtemp_station[16,1] <- summary(fitted_MeanAnnualTemp_StationModels$pdbby)$coefficients[2,1]
df_Wtemp_station[17,1] <- summary(fitted_MeanAnnualTemp_StationModels$welin)$coefficients[2,1]

df_Wtemp_station[1,2] <- summary(fitted_MeanAnnualTemp_StationModels$acesp)$coefficients[2,4]
df_Wtemp_station[2,2] <- summary(fitted_MeanAnnualTemp_StationModels$apaeb)$coefficients[2,4]
df_Wtemp_station[3,2] <- summary(fitted_MeanAnnualTemp_StationModels$apaes)$coefficients[2,4]
df_Wtemp_station[4,2] <- summary(fitted_MeanAnnualTemp_StationModels$cbvtc)$coefficients[2,4]
df_Wtemp_station[5,2] <- summary(fitted_MeanAnnualTemp_StationModels$delbl)$coefficients[2,4]
df_Wtemp_station[6,2] <- summary(fitted_MeanAnnualTemp_StationModels$delsl)$coefficients[2,4]
df_Wtemp_station[7,2] <- summary(fitted_MeanAnnualTemp_StationModels$elkap)$coefficients[2,4]
df_Wtemp_station[8,2] <- summary(fitted_MeanAnnualTemp_StationModels$elksm)$coefficients[2,4]
df_Wtemp_station[9,2] <- summary(fitted_MeanAnnualTemp_StationModels$grbgb)$coefficients[2,4]
df_Wtemp_station[10,2] <- summary(fitted_MeanAnnualTemp_StationModels$hudsk)$coefficients[2,4]
df_Wtemp_station[11,2] <- summary(fitted_MeanAnnualTemp_StationModels$hudts)$coefficients[2,4]
df_Wtemp_station[12,2] <- summary(fitted_MeanAnnualTemp_StationModels$job09)$coefficients[2,4]
df_Wtemp_station[13,2] <- summary(fitted_MeanAnnualTemp_StationModels$narpc)$coefficients[2,4]
df_Wtemp_station[14,2] <- summary(fitted_MeanAnnualTemp_StationModels$nocec)$coefficients[2,4]
df_Wtemp_station[15,2] <- summary(fitted_MeanAnnualTemp_StationModels$nocrc)$coefficients[2,4]
df_Wtemp_station[16,2] <- summary(fitted_MeanAnnualTemp_StationModels$pdbby)$coefficients[2,4]
df_Wtemp_station[17,2] <- summary(fitted_MeanAnnualTemp_StationModels$welin)$coefficients[2,4]

df_Wtemp_station[1,3] <- summary(fitted_SDannualTemp_StationModels$acesp)$coefficients[2,1]
df_Wtemp_station[2,3] <- summary(fitted_SDannualTemp_StationModels$apaeb)$coefficients[2,1]
df_Wtemp_station[3,3] <- summary(fitted_SDannualTemp_StationModels$apaes)$coefficients[2,1]
df_Wtemp_station[4,3] <- summary(fitted_SDannualTemp_StationModels$cbvtc)$coefficients[2,1]
df_Wtemp_station[5,3] <- summary(fitted_SDannualTemp_StationModels$delbl)$coefficients[2,1]
df_Wtemp_station[6,3] <- summary(fitted_SDannualTemp_StationModels$delsl)$coefficients[2,1]
df_Wtemp_station[7,3] <- summary(fitted_SDannualTemp_StationModels$elkap)$coefficients[2,1]
df_Wtemp_station[8,3] <- summary(fitted_SDannualTemp_StationModels$elksm)$coefficients[2,1]
df_Wtemp_station[9,3] <- summary(fitted_SDannualTemp_StationModels$grbgb)$coefficients[2,1]
df_Wtemp_station[10,3] <- summary(fitted_SDannualTemp_StationModels$hudsk)$coefficients[2,1]
df_Wtemp_station[11,3] <- summary(fitted_SDannualTemp_StationModels$hudts)$coefficients[2,1]
df_Wtemp_station[12,3] <- summary(fitted_SDannualTemp_StationModels$job09)$coefficients[2,1]
df_Wtemp_station[13,3] <- summary(fitted_SDannualTemp_StationModels$narpc)$coefficients[2,1]
df_Wtemp_station[14,3] <- summary(fitted_SDannualTemp_StationModels$nocec)$coefficients[2,1]
df_Wtemp_station[15,3] <- summary(fitted_SDannualTemp_StationModels$nocrc)$coefficients[2,1]
df_Wtemp_station[16,3] <- summary(fitted_SDannualTemp_StationModels$pdbby)$coefficients[2,1]
df_Wtemp_station[17,3] <- summary(fitted_SDannualTemp_StationModels$welin)$coefficients[2,1]

df_Wtemp_station[1,4] <- summary(fitted_SDannualTemp_StationModels$acesp)$coefficients[2,4]
df_Wtemp_station[2,4] <- summary(fitted_SDannualTemp_StationModels$apaeb)$coefficients[2,4]
df_Wtemp_station[3,4] <- summary(fitted_SDannualTemp_StationModels$apaes)$coefficients[2,4]
df_Wtemp_station[4,4] <- summary(fitted_SDannualTemp_StationModels$cbvtc)$coefficients[2,4]
df_Wtemp_station[5,4] <- summary(fitted_SDannualTemp_StationModels$delbl)$coefficients[2,4]
df_Wtemp_station[6,4] <- summary(fitted_SDannualTemp_StationModels$delsl)$coefficients[2,4]
df_Wtemp_station[7,4] <- summary(fitted_SDannualTemp_StationModels$elkap)$coefficients[2,4]
df_Wtemp_station[8,4] <- summary(fitted_SDannualTemp_StationModels$elksm)$coefficients[2,4]
df_Wtemp_station[9,4] <- summary(fitted_SDannualTemp_StationModels$grbgb)$coefficients[2,4]
df_Wtemp_station[10,4] <- summary(fitted_SDannualTemp_StationModels$hudsk)$coefficients[2,4]
df_Wtemp_station[11,4] <- summary(fitted_SDannualTemp_StationModels$hudts)$coefficients[2,4]
df_Wtemp_station[12,4] <- summary(fitted_SDannualTemp_StationModels$job09)$coefficients[2,4]
df_Wtemp_station[13,4] <- summary(fitted_SDannualTemp_StationModels$narpc)$coefficients[2,4]
df_Wtemp_station[14,4] <- summary(fitted_SDannualTemp_StationModels$nocec)$coefficients[2,4]
df_Wtemp_station[15,4] <- summary(fitted_SDannualTemp_StationModels$nocrc)$coefficients[2,4]
df_Wtemp_station[16,4] <- summary(fitted_SDannualTemp_StationModels$pdbby)$coefficients[2,4]
df_Wtemp_station[17,4] <- summary(fitted_SDannualTemp_StationModels$welin)$coefficients[2,4]

df_Wtemp_station$slope <- round(df_Wtemp_station$slope,2)
df_Wtemp_station$slope_p.val <- round(df_Wtemp_station$slope_p.val, 4)
df_Wtemp_station$STD.Dev_slope <- round(df_Wtemp_station$STD.Dev_slope,2)
df_Wtemp_station$STD.Dev_p.val <- round(df_Wtemp_station$STD.Dev_p.val, 4)
df_Wtemp_station$Reserve <- substr(df_Wtemp_station$Station,0,3)

detach("package:plyr")

mean_Wtemp_table <- df_Wtemp_station %>%
  group_by(Reserve) %>%
  summarise(MeanSlope = mean(slope),
            upper = max(slope),
            lower = min(slope))
mean_Wtemp_table$MeanSlope <- round(mean_Wtemp_table$MeanSlope,2)
mean_Wtemp_table$order <- c(8,10,6,5,12,2,3,9,4,7,11,1)
mean_Wtemp_table$Region <- c("Southeast","GoM","Mid. Atl.","Mid. Atl.","West","Northeast","Northeast","Southeast","Northeast","Southeast","West","Northeast")
mean_Wtemp_table$Type <- "Mean"
mean_Wtemp_table <- mean_Wtemp_table[,c(5,7,6,1:4)]

mean_SD_table <- df_Wtemp_station %>%
  group_by(Reserve) %>%
  summarise(MeanSlope = mean(STD.Dev_slope),
            upper = max(STD.Dev_slope),
            lower = min(STD.Dev_slope))
mean_SD_table$MeanSlope <- round(mean_SD_table$MeanSlope,2)
mean_SD_table$order <- c(8,10,6,5,12,2,3,9,4,7,11,1)
mean_SD_table$Region <- c("Southeast","GoM","Mid. Atl.","Mid. Atl.","West","Northeast","Northeast","Southeast","Northeast","Southeast","West","Northeast")
mean_SD_table$Type <- "STD. Deviation"
mean_SD_table <- mean_SD_table[,c(5,7,6,1:4)]

SI_Fig1B <- rbind(mean_Wtemp_table,mean_SD_table)

cols <- c("Mean" = "#ffffff","STD. Deviation" = "#000000")

SI_Fig1a <- SI_Fig1A %>%
  arrange(-desc(order)) %>%
  arrange(-desc(Type)) %>%
  mutate(Reserve = factor(Reserve, levels = c("wel","grb","hud","nar","del","cbv","noc","ace","job","apa","pdb","elk"))) %>%
  ggplot(aes(x = Reserve, y = MeanSlope)) +
  geom_col(aes(fill = Type), position = "dodge", color = "black") +
  scale_fill_manual(values = cols) +
  labs(y=expression(paste("Slope (°C  ", yr^-1,")")),
       x = "NERRS Reserves & Regions") +
  scale_y_continuous(breaks = seq(-0.04,0.14, by = 0.02)) +
  annotate("text", x = 1, y = 0.14, label = "a)", size = 6) +
  theme_bw() +
  theme(plot.margin = margin(5,5,55,5,"pt"),
        panel.grid = element_blank(),
        text = element_text(size = 16),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = "black"),
        axis.title.x = element_text(vjust = -12),
        legend.title = element_blank(),
        legend.direction = "vertical",
        legend.position = c(0.86,0.95),
        legend.background = element_blank()) +
  coord_cartesian(clip = "off", ylim = c(-0.04, 0.14)) +
  annotate("text", x = c(2.5,5.5,8,10,11.5), y = -0.068, label = c("Northeast", "Mid. Atl.", "Southeast","GoM","West"), size = 5) +
  annotate("segment", x = c(4.5,6.5,9.5,10.5), xend = c(4.5,6.5,9.5,10.5), y = 0, yend = -0.078)

SI_Fig1b <- SI_Fig1B %>%
  arrange(-desc(order)) %>%
  arrange(-desc(Type)) %>%
  mutate(Reserve = factor(Reserve, levels = c("wel","grb","hud","nar","del","cbv","noc","ace","job","apa","pdb","elk"))) %>%
  ggplot(aes(x = Reserve, y = MeanSlope)) +
  geom_col(aes(fill = Type), position = "dodge", color = "black") +
  geom_errorbar(aes(fill = Type, ymin = lower, ymax = upper), position = "dodge", width = 0.9, color = "black") +
  scale_fill_manual(values = cols) +
  labs(y=expression(paste("Slope (°C  ", yr^-1,")")),
       x = "NERRS Reserves & Regions") +
  scale_y_continuous(breaks = seq(-0.04,0.14, by = 0.02)) +
  annotate("text", x = 1, y = 0.14, label = "b)", size = 6) +
  theme_bw() +
  theme(plot.margin = margin(5,5,55,5,"pt"),
        panel.grid = element_blank(),
        text = element_text(size = 16),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_blank(),
        axis.title.y = element_blank(),
        axis.title.x = element_text(vjust = -12),
        legend.title = element_blank(),
        legend.position = "none") +
  coord_cartesian(clip = "off", ylim = c(-0.04, 0.14)) +
  annotate("text", x = c(2.5,5.5,8,10,11.5), y = -0.068, label = c("Northeast", "Mid. Atl.", "Southeast","GoM","West"), size = 5) +
  annotate("segment", x = c(4.5,6.5,9.5,10.5), xend = c(4.5,6.5,9.5,10.5), y = 0, yend = -0.078)

ggarrange(SI_Fig1a,SI_Fig1b, nrow = 1)

# SI Figure 2: Linear Regression & boxplot for EHW characteristics

MHW$Depth <- NA
MHW$Depth[MHW$Station == 'welin'] <- 4.08
MHW$Depth[MHW$Station == 'grbgb'] <- 5.51
MHW$Depth[MHW$Station == 'hudsk'] <- 1.04
MHW$Depth[MHW$Station == 'hudts'] <- 1.55
MHW$Depth[MHW$Station == 'narpc'] <- 2.8
MHW$Depth[MHW$Station == 'delbl'] <- 1.67
MHW$Depth[MHW$Station == 'delsl'] <- 1.71
MHW$Depth[MHW$Station == 'cbvtc'] <- 1.61
MHW$Depth[MHW$Station == 'nocec'] <- 1.13
MHW$Depth[MHW$Station == 'nocrc'] <- 1.55
MHW$Depth[MHW$Station == 'acesp'] <- 2.47
MHW$Depth[MHW$Station == 'job09'] <- 1.03
MHW$Depth[MHW$Station == 'apaes'] <- 2.16
MHW$Depth[MHW$Station == 'apaeb'] <- 2.16
MHW$Depth[MHW$Station == 'pdbby'] <- 3.36
MHW$Depth[MHW$Station == 'elkap'] <- 0.68
MHW$Depth[MHW$Station == 'elksm'] <- 1.79

mhw_table <- MHW %>%
  group_by(Station) %>%
  summarise(Total_MHW_events = n(),
            Avg.Duration = mean(duration),
            Frequency = n()/24,
            Depth = mean(Depth))

mhw_table$TideRange <- NA
mhw_table$TideRange[mhw_table$Station == 'welin'] <- 1.82
mhw_table$TideRange[mhw_table$Station == 'grbgb'] <- 1.40
mhw_table$TideRange[mhw_table$Station == 'hudsk'] <- 0.01
mhw_table$TideRange[mhw_table$Station == 'hudts'] <- 0.80
mhw_table$TideRange[mhw_table$Station == 'narpc'] <- 0.38
mhw_table$TideRange[mhw_table$Station == 'delbl'] <- 0.87
mhw_table$TideRange[mhw_table$Station == 'delsl'] <- 0.82
mhw_table$TideRange[mhw_table$Station == 'cbvtc'] <- 0.29
mhw_table$TideRange[mhw_table$Station == 'nocec'] <- 0.76
mhw_table$TideRange[mhw_table$Station == 'nocrc'] <- 0.88
mhw_table$TideRange[mhw_table$Station == 'acesp'] <- 1.20
mhw_table$TideRange[mhw_table$Station == 'job09'] <- 0.02
mhw_table$TideRange[mhw_table$Station == 'apaes'] <- 0.12
mhw_table$TideRange[mhw_table$Station == 'apaeb'] <- 0.12
mhw_table$TideRange[mhw_table$Station == 'pdbby'] <- 0.84
mhw_table$TideRange[mhw_table$Station == 'elkap'] <- 0.06
mhw_table$TideRange[mhw_table$Station == 'elksm'] <- 0.71

mhw_table$Habitat <- NA
mhw_table$Habitat[mhw_table$Station == 'welin'] <- 'SAV'
mhw_table$Habitat[mhw_table$Station == 'grbgb'] <- 'SAV'
mhw_table$Habitat[mhw_table$Station == 'hudsk'] <- 'Upland'
mhw_table$Habitat[mhw_table$Station == 'hudts'] <- 'Marsh'
mhw_table$Habitat[mhw_table$Station == 'narpc'] <- 'Open Water'
mhw_table$Habitat[mhw_table$Station == 'delbl'] <- 'Marsh'
mhw_table$Habitat[mhw_table$Station == 'delsl'] <- 'Marsh'
mhw_table$Habitat[mhw_table$Station == 'cbvtc'] <- 'Marsh'
mhw_table$Habitat[mhw_table$Station == 'nocec'] <- 'Marsh'
mhw_table$Habitat[mhw_table$Station == 'nocrc'] <- 'Marsh'
mhw_table$Habitat[mhw_table$Station == 'acesp'] <- 'Marsh'
mhw_table$Habitat[mhw_table$Station == 'job09'] <- 'Mangrove'
mhw_table$Habitat[mhw_table$Station == 'apaes'] <- 'Open Water'
mhw_table$Habitat[mhw_table$Station == 'apaeb'] <- 'Open Water'
mhw_table$Habitat[mhw_table$Station == 'pdbby'] <- 'SAV'
mhw_table$Habitat[mhw_table$Station == 'elkap'] <- 'Marsh'
mhw_table$Habitat[mhw_table$Station == 'elksm'] <- 'Marsh'

AvgDur_Depth_model <- lm(Avg.Duration~Depth, data = mhw_table)
totalEHW_Depth_model <- lm(Total_MHW_events~Depth, data = mhw_table)
freq_Depth_model <- lm(Frequency~Depth, data = mhw_table)
summary(AvgDur_Depth_model)
summary(totalEHW_Depth_model)
summary(freq_Depth_model)

g1 <- ggplot(data = mhw_table, aes(x = Depth, y = Avg.Duration)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Mean EHW Duration (days)',
       x = 'Mean Depth (m)') +
  annotate("text", x = 2 , y = 9.9,
           label = 'Slope = 0.41 ± 0.13',
           size = 5, fontface = 1) +
  ylim(5,11) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = c(0.80,0.25),
        legend.text = element_text(size = 16),
        legend.key = element_blank()) +
  scale_shape_discrete(name = 'Habitat Type') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 1, size = 5)

g2 <- ggplot(data = mhw_table, aes(x = Depth, y = Total_MHW_events)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Total EHW Events',
       x = 'Mean Depth (m)') +
  ylim(40,80) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = 'none') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 3, label.y = 77, size = 5)

g3 <- ggplot(data = mhw_table, aes(x = Depth, y = Frequency)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Mean EHW Frequency (events/year)',
       x = 'Mean Depth (m)') +
  scale_y_continuous(breaks = seq(from=1.8,to=3.1,by=0.2)) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = 'none') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 3, size = 5)

gg1 <- ggplot(data = mhw_table, aes(x = TideRange, y = Avg.Duration)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Mean EHW Duration (days)',
       x = 'Mean Tidal Range (m)') +
  ylim(5,11) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = 'none') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 0.15, size = 5)

gg2 <- ggplot(data = mhw_table, aes(x = TideRange, y = Total_MHW_events)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Total EHW Events',
       x = 'Mean Tidal Range (m)') +
  ylim(40,80) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = 'none') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 0.75, label.y = 77, size = 5)

gg3 <- ggplot(data = mhw_table, aes(x = TideRange, y = Frequency)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Mean EHW Frequency (events/year)',
       x = 'Mean Tidal Range (m)') +
  scale_y_continuous(breaks = seq(from=1.8,to=3.1,by=0.2)) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = 'none') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 0.75, size = 5)

library(scales)

p1 <- ggplot(data = mhw_table, aes(x = Habitat, y = Avg.Duration)) +
  geom_boxplot() +
  labs(x = 'Habitat Type',
       y = 'Mean EHW Duration (days)') +
  scale_x_discrete(labels = wrap_format(10)) +
  ylim(5,11) +
  geom_text(x = 'Mangrove' , y = 10.5, label = 'n = 1', size = 5, color = 'black') +
  geom_text(x = 'Marsh' , y = 10.5, label = 'n = 9', size = 5, color = 'black') +
  geom_text(x = 'Open Water' , y = 10.5, label = 'n = 3', size = 5, color = 'black') +
  geom_text(x = 'SAV' , y = 10.5, label = 'n = 3', size = 5, color = 'black') +
  geom_text(x = 'Upland' , y = 10.5, label = 'n = 1', size = 5, color = 'black') +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'))

p2 <- ggplot(data = mhw_table, aes(x = Habitat, y = Total_MHW_events)) +
  geom_boxplot() +
  labs(x = 'Habitat Type',
       y = 'Total EHW Events') +
  scale_x_discrete(labels = wrap_format(10)) +
  ylim(40,80) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'))

p3 <- ggplot(data = mhw_table, aes(x = Habitat, y = Frequency)) +
  geom_boxplot() +
  labs(x = 'Habitat Type',
       y = 'Mean EHW Frequency (events/year)') +
  scale_y_continuous(breaks = seq(from=1.8,to=3.1,by=0.2)) +
  scale_x_discrete(labels = wrap_format(10)) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'))

# save image as height = 1500, width = 1500
ggarrange(g1,g2,g3,gg1,gg2,gg3,p1,p2,p3, nrow = 3, ncol = 3)

# SI Figure 3: Linear Regression & boxplot for Low DO characteristics

LDO$Depth <- NA
LDO$Depth[LDO$Station == 'welin'] <- 4.08
LDO$Depth[LDO$Station == 'grbgb'] <- 5.51
LDO$Depth[LDO$Station == 'hudsk'] <- 1.04
LDO$Depth[LDO$Station == 'hudts'] <- 1.55
LDO$Depth[LDO$Station == 'narpc'] <- 2.8
LDO$Depth[LDO$Station == 'delbl'] <- 1.67
LDO$Depth[LDO$Station == 'delsl'] <- 1.71
LDO$Depth[LDO$Station == 'cbvtc'] <- 1.61
LDO$Depth[LDO$Station == 'nocec'] <- 1.13
LDO$Depth[LDO$Station == 'nocrc'] <- 1.55
LDO$Depth[LDO$Station == 'acesp'] <- 2.47
LDO$Depth[LDO$Station == 'job09'] <- 1.03
LDO$Depth[LDO$Station == 'apaes'] <- 2.16
LDO$Depth[LDO$Station == 'apaeb'] <- 2.16
LDO$Depth[LDO$Station == 'pdbby'] <- 3.36
LDO$Depth[LDO$Station == 'elkap'] <- 0.68
LDO$Depth[LDO$Station == 'elksm'] <- 1.79

do_table <- LDO %>%
  group_by(Station) %>%
  summarise(Total_do_events = n(),
            Avg.Duration = mean(duration),
            Frequency = n()/24,
            Depth = mean(Depth))

do_table$TideRange <- NA
do_table$TideRange[do_table$Station == 'welin'] <- 1.82
do_table$TideRange[do_table$Station == 'grbgb'] <- 1.40
do_table$TideRange[do_table$Station == 'hudsk'] <- 0.01
do_table$TideRange[do_table$Station == 'hudts'] <- 0.80
do_table$TideRange[do_table$Station == 'narpc'] <- 0.38
do_table$TideRange[do_table$Station == 'delbl'] <- 0.87
do_table$TideRange[do_table$Station == 'delsl'] <- 0.82
do_table$TideRange[do_table$Station == 'cbvtc'] <- 0.29
do_table$TideRange[do_table$Station == 'nocec'] <- 0.76
do_table$TideRange[do_table$Station == 'nocrc'] <- 0.88
do_table$TideRange[do_table$Station == 'acesp'] <- 1.20
do_table$TideRange[do_table$Station == 'job09'] <- 0.02
do_table$TideRange[do_table$Station == 'apaes'] <- 0.12
do_table$TideRange[do_table$Station == 'apaeb'] <- 0.12
do_table$TideRange[do_table$Station == 'pdbby'] <- 0.84
do_table$TideRange[do_table$Station == 'elkap'] <- 0.06
do_table$TideRange[do_table$Station == 'elksm'] <- 0.71

do_table$Habitat <- NA
do_table$Habitat[do_table$Station == 'welin'] <- 'SAV'
do_table$Habitat[do_table$Station == 'grbgb'] <- 'SAV'
do_table$Habitat[do_table$Station == 'hudsk'] <- 'Upland'
do_table$Habitat[do_table$Station == 'hudts'] <- 'Marsh'
do_table$Habitat[do_table$Station == 'narpc'] <- 'Open Water'
do_table$Habitat[do_table$Station == 'delbl'] <- 'Marsh'
do_table$Habitat[do_table$Station == 'delsl'] <- 'Marsh'
do_table$Habitat[do_table$Station == 'cbvtc'] <- 'Marsh'
do_table$Habitat[do_table$Station == 'nocec'] <- 'Marsh'
do_table$Habitat[do_table$Station == 'nocrc'] <- 'Marsh'
do_table$Habitat[do_table$Station == 'acesp'] <- 'Marsh'
do_table$Habitat[do_table$Station == 'job09'] <- 'Mangrove'
do_table$Habitat[do_table$Station == 'apaes'] <- 'Open Water'
do_table$Habitat[do_table$Station == 'apaeb'] <- 'Open Water'
do_table$Habitat[do_table$Station == 'pdbby'] <- 'SAV'
do_table$Habitat[do_table$Station == 'elkap'] <- 'Marsh'
do_table$Habitat[do_table$Station == 'elksm'] <- 'Marsh'

g1 <- ggplot(data = do_table, aes(x = Depth, y = Avg.Duration)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Mean low DO Duration (days)',
       x = 'Mean Depth (m)') +
  coord_cartesian(ylim = c(7,13)) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = c(0.80,0.22),
        legend.text = element_text(size = 16),
        legend.background = element_blank(),
        legend.key = element_blank()) +
  scale_shape_discrete(name = 'Habitat Type') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 1, label.y = 12.5, size = 5)

g2 <- ggplot(data = do_table, aes(x = Depth, y = Total_do_events)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Total low DO Events',
       x = 'Mean Depth (m)') +
  ylim(25,65) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = 'none') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 3, label.y = 30, size = 5)

g3 <- ggplot(data = do_table, aes(x = Depth, y = Frequency)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Mean low DO Frequency (events/year)',
       x = 'Mean Depth (m)') +
  coord_cartesian(ylim = c(1.2,2.6)) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = 'none') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 3, label.y = 1.3, size = 5)

model <- lm(Avg.Duration~TideRange, data = do_table)
summary(model)

gg1 <- ggplot(data = do_table, aes(x = TideRange, y = Avg.Duration)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Mean low DO Duration (days)',
       x = 'Mean Tidal Range (m)') +
  annotate("text", x = 0.5 , y = 11.9,
           label = 'Slope = 1.41 ± 0.50',
           size = 5, fontface = 1) +
  coord_cartesian(ylim = c(7,13)) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = 'none') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 0.15, label.y = 12.5, size = 5)

gg2 <- ggplot(data = do_table, aes(x = TideRange, y = Total_do_events)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Total low DO Events',
       x = 'Mean Tidal Range (m)') +
  ylim(25,65) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = 'none') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 0.75, label.y = 30, size = 5)

gg3 <- ggplot(data = do_table, aes(x = TideRange, y = Frequency)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Mean low DO Frequency (events/year)',
       x = 'Mean Tidal Range (m)') +
  coord_cartesian(ylim = c(1.2,2.6)) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = 'none') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 0.75, label.y = 1.3, size = 5)

p1 <- ggplot(data = do_table, aes(x = Habitat, y = Avg.Duration)) +
  geom_boxplot() +
  labs(x = 'Habitat Type',
       y = 'Mean low DO Duration (days)') +
  scale_x_discrete(labels = wrap_format(10)) +
  coord_cartesian(ylim = c(7,13)) +
  geom_text(x = 'Mangrove' , y = 13, label = 'n = 1', size = 5, color = 'black') +
  geom_text(x = 'Marsh' , y = 13, label = 'n = 9', size = 5, color = 'black') +
  geom_text(x = 'Open Water' , y = 13, label = 'n = 3', size = 5, color = 'black') +
  geom_text(x = 'SAV' , y = 13, label = 'n = 3', size = 5, color = 'black') +
  geom_text(x = 'Upland' , y = 13, label = 'n = 1', size = 5, color = 'black') +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'))

p2 <- ggplot(data = do_table, aes(x = Habitat, y = Total_do_events)) +
  geom_boxplot() +
  labs(x = 'Habitat Type',
       y = 'Total low DO Events') +
  scale_x_discrete(labels = wrap_format(10)) +
  ylim(25,65) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'))

p3 <- ggplot(data = do_table, aes(x = Habitat, y = Frequency)) +
  geom_boxplot() +
  labs(x = 'Habitat Type',
       y = 'Mean low DO Frequency (events/year)') +
  coord_cartesian(ylim = c(1.2,2.6)) +
  scale_x_discrete(labels = wrap_format(10)) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'))

# save image as height = 1500, width = 1500
ggarrange(g1,g2,g3,gg1,gg2,gg3,p1,p2,p3, nrow = 3, ncol = 3)

# SI Figure 4: Linear Regression & boxplot for Low pH characteristics

LPH$Depth <- NA
LPH$Depth[LPH$Station == 'welin'] <- 4.08
LPH$Depth[LPH$Station == 'grbgb'] <- 5.51
LPH$Depth[LPH$Station == 'hudsk'] <- 1.04
LPH$Depth[LPH$Station == 'hudts'] <- 1.55
LPH$Depth[LPH$Station == 'narpc'] <- 2.8
LPH$Depth[LPH$Station == 'delbl'] <- 1.67
LPH$Depth[LPH$Station == 'delsl'] <- 1.71
LPH$Depth[LPH$Station == 'cbvtc'] <- 1.61
LPH$Depth[LPH$Station == 'nocec'] <- 1.13
LPH$Depth[LPH$Station == 'nocrc'] <- 1.55
LPH$Depth[LPH$Station == 'acesp'] <- 2.47
LPH$Depth[LPH$Station == 'job09'] <- 1.03
LPH$Depth[LPH$Station == 'apaes'] <- 2.16
LPH$Depth[LPH$Station == 'apaeb'] <- 2.16
LPH$Depth[LPH$Station == 'pdbby'] <- 3.36
LPH$Depth[LPH$Station == 'elkap'] <- 0.68
LPH$Depth[LPH$Station == 'elksm'] <- 1.79

ph_table <- LPH %>%
  group_by(Station) %>%
  summarise(Total_ph_events = n(),
            Avg.Duration = mean(duration),
            Frequency = n()/24,
            Depth = mean(Depth))

ph_table$TideRange <- NA
ph_table$TideRange[ph_table$Station == 'welin'] <- 1.82
ph_table$TideRange[ph_table$Station == 'grbgb'] <- 1.40
ph_table$TideRange[ph_table$Station == 'hudsk'] <- 0.01
ph_table$TideRange[ph_table$Station == 'hudts'] <- 0.80
ph_table$TideRange[ph_table$Station == 'narpc'] <- 0.38
ph_table$TideRange[ph_table$Station == 'delbl'] <- 0.87
ph_table$TideRange[ph_table$Station == 'delsl'] <- 0.82
ph_table$TideRange[ph_table$Station == 'cbvtc'] <- 0.29
ph_table$TideRange[ph_table$Station == 'nocec'] <- 0.76
ph_table$TideRange[ph_table$Station == 'nocrc'] <- 0.88
ph_table$TideRange[ph_table$Station == 'acesp'] <- 1.20
ph_table$TideRange[ph_table$Station == 'job09'] <- 0.02
ph_table$TideRange[ph_table$Station == 'apaes'] <- 0.12
ph_table$TideRange[ph_table$Station == 'apaeb'] <- 0.12
ph_table$TideRange[ph_table$Station == 'pdbby'] <- 0.84
ph_table$TideRange[ph_table$Station == 'elkap'] <- 0.06
ph_table$TideRange[ph_table$Station == 'elksm'] <- 0.71

ph_table$Habitat <- NA
ph_table$Habitat[ph_table$Station == 'welin'] <- 'SAV'
ph_table$Habitat[ph_table$Station == 'grbgb'] <- 'SAV'
ph_table$Habitat[ph_table$Station == 'hudsk'] <- 'Upland'
ph_table$Habitat[ph_table$Station == 'hudts'] <- 'Marsh'
ph_table$Habitat[ph_table$Station == 'narpc'] <- 'Open Water'
ph_table$Habitat[ph_table$Station == 'delbl'] <- 'Marsh'
ph_table$Habitat[ph_table$Station == 'delsl'] <- 'Marsh'
ph_table$Habitat[ph_table$Station == 'cbvtc'] <- 'Marsh'
ph_table$Habitat[ph_table$Station == 'nocec'] <- 'Marsh'
ph_table$Habitat[ph_table$Station == 'nocrc'] <- 'Marsh'
ph_table$Habitat[ph_table$Station == 'acesp'] <- 'Marsh'
ph_table$Habitat[ph_table$Station == 'job09'] <- 'Mangrove'
ph_table$Habitat[ph_table$Station == 'apaes'] <- 'Open Water'
ph_table$Habitat[ph_table$Station == 'apaeb'] <- 'Open Water'
ph_table$Habitat[ph_table$Station == 'pdbby'] <- 'SAV'
ph_table$Habitat[ph_table$Station == 'elkap'] <- 'Marsh'
ph_table$Habitat[ph_table$Station == 'elksm'] <- 'Marsh'

g1 <- ggplot(data = ph_table, aes(x = Depth, y = Avg.Duration)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Mean low pH Duration (days)',
       x = 'Mean Depth (m)') +
  coord_cartesian(ylim = c(8.1,18.1)) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = c(0.80,0.25),
        legend.text = element_text(size = 16),
        legend.background = element_blank(),
        legend.key = element_blank()) +
  scale_shape_discrete(name = 'Habitat Type') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 1, size = 5)

g2 <- ggplot(data = ph_table, aes(x = Depth, y = Total_ph_events)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Total low pH Events',
       x = 'Mean Depth (m)') +
  ylim(25,60) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = 'none') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 3, label.y = 27, size = 5)

g3 <- ggplot(data = ph_table, aes(x = Depth, y = Frequency)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Mean low pH Frequency (events/year)',
       x = 'Mean Depth (m)') +
  coord_cartesian(ylim = c(1.0,2.5)) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = 'none') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 3, label.y = 1.1, size = 5)

gg1 <- ggplot(data = ph_table, aes(x = TideRange, y = Avg.Duration)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Mean low pH Duration (days)',
       x = 'Mean Tidal Range (m)') +
  coord_cartesian(ylim = c(8.1,18.1)) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = 'none') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 0.75, label.y = 8.5, size = 5)

gg2 <- ggplot(data = ph_table, aes(x = TideRange, y = Total_ph_events)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Total low pH Events',
       x = 'Mean Tidal Range (m)') +
  ylim(25,60) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = 'none') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 0.75, label.y = 27, size = 5)

gg3 <- ggplot(data = ph_table, aes(x = TideRange, y = Frequency)) +
  stat_smooth(method = 'lm', color = 'black') +
  geom_point(aes(shape = factor(Habitat)), size = 2.5) +
  labs(y = 'Mean low pH Frequency (events/year)',
       x = 'Mean Tidal Range (m)') +
  coord_cartesian(ylim = c(1.0,2.5)) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'),
        legend.position = 'none') +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
           label.x = 0.75, label.y = 1.1, size = 5)

p1 <- ggplot(data = ph_table, aes(x = Habitat, y = Avg.Duration)) +
  geom_boxplot() +
  labs(x = 'Habitat Type',
       y = 'Mean low pH Duration (days)') +
  scale_x_discrete(labels = wrap_format(10)) +
  coord_cartesian(ylim = c(8.1,18.1)) +
  geom_text(x = 'Mangrove' , y = 18, label = 'n = 1', size = 5, color = 'black') +
  geom_text(x = 'Marsh' , y = 18, label = 'n = 9', size = 5, color = 'black') +
  geom_text(x = 'Open Water' , y = 18, label = 'n = 3', size = 5, color = 'black') +
  geom_text(x = 'SAV' , y = 18, label = 'n = 3', size = 5, color = 'black') +
  geom_text(x = 'Upland' , y = 18, label = 'n = 1', size = 5, color = 'black') +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'))

p2 <- ggplot(data = ph_table, aes(x = Habitat, y = Total_ph_events)) +
  geom_boxplot() +
  labs(x = 'Habitat Type',
       y = 'Total low pH Events') +
  scale_x_discrete(labels = wrap_format(10)) +
  ylim(25,60) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'))

p3 <- ggplot(data = ph_table, aes(x = Habitat, y = Frequency)) +
  geom_boxplot() +
  labs(x = 'Habitat Type',
       y = 'Mean low pH Frequency (events/year)') +
  coord_cartesian(ylim = c(1.0,2.5)) +
  scale_x_discrete(labels = wrap_format(10)) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        text = element_text(size = 16, color = "black"),
        axis.text.x = element_text(size = 16, color = "black"),
        axis.text.y = element_text(size = 16, color = 'black'))

# save image as height = 1500, width = 1500
ggarrange(g1,g2,g3,gg1,gg2,gg3,p1,p2,p3, nrow = 3, ncol = 3)
